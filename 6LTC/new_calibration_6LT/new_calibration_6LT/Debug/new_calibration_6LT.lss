
new_calibration_6LT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800100  00001b42  00001bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008c  0080019a  0080019a  00001c70  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001c70  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000308  00000000  00000000  00001d10  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000318a  00000000  00000000  00002018  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013ae  00000000  00000000  000051a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016e4  00000000  00000000  00006550  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000060c  00000000  00000000  00007c34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000019ae  00000000  00000000  00008240  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bf5  00000000  00000000  00009bee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000a7e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e2 e4       	ldi	r30, 0x42	; 66
      e0:	fb e1       	ldi	r31, 0x1B	; 27
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	aa 39       	cpi	r26, 0x9A	; 154
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	aa e9       	ldi	r26, 0x9A	; 154
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a6 32       	cpi	r26, 0x26	; 38
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 0d 02 	call	0x41a	; 0x41a <main>
     102:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <system_init>

	touch_init();
     10e:	0e 94 06 03 	call	0x60c	; 0x60c <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 53 03 	call	0x6a6	; 0x6a6 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	85 b3       	in	r24, 0x15	; 21
     13c:	81 60       	ori	r24, 0x01	; 1
     13e:	85 bb       	out	0x15, r24	; 21
}
     140:	ff 91       	pop	r31
     142:	ef 91       	pop	r30
     144:	bf 91       	pop	r27
     146:	af 91       	pop	r26
     148:	9f 91       	pop	r25
     14a:	8f 91       	pop	r24
     14c:	7f 91       	pop	r23
     14e:	6f 91       	pop	r22
     150:	5f 91       	pop	r21
     152:	4f 91       	pop	r20
     154:	3f 91       	pop	r19
     156:	2f 91       	pop	r18
     158:	0f 90       	pop	r0
     15a:	0f be       	out	0x3f, r0	; 63
     15c:	0f 90       	pop	r0
     15e:	1f 90       	pop	r1
     160:	18 95       	reti

00000162 <SPI_MasterInit>:
	TIMSK1 |= (1 << OCIE1A);
	TCCR1B |= (1 << CS12) | (1 << CS10);
}

void SPI_MasterInit() {
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     162:	84 b1       	in	r24, 0x04	; 4
     164:	80 6b       	ori	r24, 0xB0	; 176
     166:	84 b9       	out	0x04, r24	; 4
	SPCR0 = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     168:	81 e5       	ldi	r24, 0x51	; 81
     16a:	8c bd       	out	0x2c, r24	; 44
	PORTB |= (1 << SPI_SS_PIN);
     16c:	85 b1       	in	r24, 0x05	; 5
     16e:	80 61       	ori	r24, 0x10	; 16
     170:	85 b9       	out	0x05, r24	; 5
     172:	08 95       	ret

00000174 <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(uint8_t data) {
	PORTB &= ~(1 << SPI_SS_PIN);
     174:	95 b1       	in	r25, 0x05	; 5
     176:	9f 7e       	andi	r25, 0xEF	; 239
     178:	95 b9       	out	0x05, r25	; 5
	SPDR0 = data;
     17a:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR0 & (1 << SPIF))) {
     17c:	0d b4       	in	r0, 0x2d	; 45
     17e:	07 fe       	sbrs	r0, 7
     180:	fd cf       	rjmp	.-6      	; 0x17c <SPI_MasterTransmit+0x8>
	}
	PORTB |= (1 << SPI_SS_PIN);
     182:	85 b1       	in	r24, 0x05	; 5
     184:	80 61       	ori	r24, 0x10	; 16
     186:	85 b9       	out	0x05, r24	; 5
     188:	08 95       	ret

0000018a <SPI_MasterTransmitString>:
			touch_counter_6 = 0;
		}
	}
}

void SPI_MasterTransmitString(const char* str) {
     18a:	0f 93       	push	r16
     18c:	1f 93       	push	r17
     18e:	cf 93       	push	r28
     190:	df 93       	push	r29
     192:	8c 01       	movw	r16, r24
	for (int i = 0; str[i] != '\0'; i++) {
     194:	c0 e0       	ldi	r28, 0x00	; 0
     196:	d0 e0       	ldi	r29, 0x00	; 0
     198:	0c c0       	rjmp	.+24     	; 0x1b2 <SPI_MasterTransmitString+0x28>
		SPI_MasterTransmit(str[i]);
     19a:	0e 94 ba 00 	call	0x174	; 0x174 <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     19e:	2f ef       	ldi	r18, 0xFF	; 255
     1a0:	80 e7       	ldi	r24, 0x70	; 112
     1a2:	92 e0       	ldi	r25, 0x02	; 2
     1a4:	21 50       	subi	r18, 0x01	; 1
     1a6:	80 40       	sbci	r24, 0x00	; 0
     1a8:	90 40       	sbci	r25, 0x00	; 0
     1aa:	e1 f7       	brne	.-8      	; 0x1a4 <SPI_MasterTransmitString+0x1a>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <SPI_MasterTransmitString+0x24>
     1ae:	00 00       	nop
		}
	}
}

void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     1b0:	21 96       	adiw	r28, 0x01	; 1
     1b2:	f8 01       	movw	r30, r16
     1b4:	ec 0f       	add	r30, r28
     1b6:	fd 1f       	adc	r31, r29
     1b8:	80 81       	ld	r24, Z
     1ba:	81 11       	cpse	r24, r1
     1bc:	ee cf       	rjmp	.-36     	; 0x19a <SPI_MasterTransmitString+0x10>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
}
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	1f 91       	pop	r17
     1c4:	0f 91       	pop	r16
     1c6:	08 95       	ret

000001c8 <touchpin1>:
		}
	}
}

void touchpin1() {
	previous_key_status_1 = key_status_1;
     1c8:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <key_status_1>
     1cc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     1d8:	80 78       	andi	r24, 0x80	; 128
     1da:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1de:	88 23       	and	r24, r24
     1e0:	b1 f0       	breq	.+44     	; 0x20e <touchpin1+0x46>
     1e2:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <previous_key_status_1>
     1e6:	91 11       	cpse	r25, r1
     1e8:	12 c0       	rjmp	.+36     	; 0x20e <touchpin1+0x46>
		second_counter = 0;
     1ea:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <second_counter+0x1>
     1ee:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <second_counter>
		touch_counter_1 = 1;
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <touch_counter_1>
		if (touch_counter_1 == 1) {
			SPI_MasterTransmitString("L1");                     // Transmits "L1"
     1f8:	8e e7       	ldi	r24, 0x7E	; 126
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter = 0;
     200:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <second_counter+0x1>
     204:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <second_counter>
			touch_counter_1 = 0;
     208:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <touch_counter_1>
     20c:	08 95       	ret
		}
	}
	else if (key_status_1) {
     20e:	88 23       	and	r24, r24
     210:	49 f0       	breq	.+18     	; 0x224 <touchpin1+0x5c>
		second_counter++;
     212:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <second_counter>
     216:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <second_counter+0x1>
     21a:	01 96       	adiw	r24, 0x01	; 1
     21c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <second_counter+0x1>
     220:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <second_counter>
     224:	08 95       	ret

00000226 <touchpin2>:
	}		
}

void touchpin2() {
	previous_key_status_2 = key_status_2;
     226:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <key_status_2>
     22a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     236:	80 78       	andi	r24, 0x80	; 128
     238:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <key_status_2>
	if (key_status_2&& !previous_key_status_2) {
     23c:	88 23       	and	r24, r24
     23e:	c1 f0       	breq	.+48     	; 0x270 <touchpin2+0x4a>
     240:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <previous_key_status_2>
     244:	81 11       	cpse	r24, r1
     246:	14 c0       	rjmp	.+40     	; 0x270 <touchpin2+0x4a>
		touch_counter_2++;
     248:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <touch_counter_2>
     24c:	8f 5f       	subi	r24, 0xFF	; 255
     24e:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <touch_counter_2>
		if(touch_counter_2 == 1){
     252:	81 30       	cpi	r24, 0x01	; 1
     254:	29 f4       	brne	.+10     	; 0x260 <touchpin2+0x3a>
			SPI_MasterTransmitString("L2");                     // Transmits "L2"
     256:	81 e8       	ldi	r24, 0x81	; 129
     258:	91 e0       	ldi	r25, 0x01	; 1
     25a:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     25e:	08 95       	ret
		}
		else if(touch_counter_2 == 2){
     260:	82 30       	cpi	r24, 0x02	; 2
     262:	31 f4       	brne	.+12     	; 0x270 <touchpin2+0x4a>
			SPI_MasterTransmitString("L2");                     // Transmits "L2"
     264:	81 e8       	ldi	r24, 0x81	; 129
     266:	91 e0       	ldi	r25, 0x01	; 1
     268:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			touch_counter_2 = 0;
     26c:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <touch_counter_2>
     270:	08 95       	ret

00000272 <touchpin3>:
		}
	}
}

void touchpin3() {
	previous_key_status_3 = key_status_3;
     272:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <key_status_3>
     276:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <previous_key_status_3>
	key_status_3= get_sensor_state(2) & 0x80;
     27a:	82 e0       	ldi	r24, 0x02	; 2
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     282:	80 78       	andi	r24, 0x80	; 128
     284:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     288:	88 23       	and	r24, r24
     28a:	c1 f0       	breq	.+48     	; 0x2bc <touchpin3+0x4a>
     28c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <previous_key_status_3>
     290:	81 11       	cpse	r24, r1
     292:	14 c0       	rjmp	.+40     	; 0x2bc <touchpin3+0x4a>
		touch_counter_3++;
     294:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <touch_counter_3>
     298:	8f 5f       	subi	r24, 0xFF	; 255
     29a:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <touch_counter_3>
		if (touch_counter_3 == 1) {
     29e:	81 30       	cpi	r24, 0x01	; 1
     2a0:	29 f4       	brne	.+10     	; 0x2ac <touchpin3+0x3a>
			SPI_MasterTransmitString("L3");                     // Transmits "L3"
     2a2:	84 e8       	ldi	r24, 0x84	; 132
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     2aa:	08 95       	ret
		}
		else if (touch_counter_3 == 2) {
     2ac:	82 30       	cpi	r24, 0x02	; 2
     2ae:	31 f4       	brne	.+12     	; 0x2bc <touchpin3+0x4a>
			SPI_MasterTransmitString("L3");                     // Transmits "L3"
     2b0:	84 e8       	ldi	r24, 0x84	; 132
     2b2:	91 e0       	ldi	r25, 0x01	; 1
     2b4:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			touch_counter_3 = 0;
     2b8:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <touch_counter_3>
     2bc:	08 95       	ret

000002be <touchpin4>:
		}
	}
}

void touchpin4() {
	previous_key_status_4 = key_status_4;
     2be:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <key_status_4>
     2c2:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     2c6:	83 e0       	ldi	r24, 0x03	; 3
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     2ce:	80 78       	andi	r24, 0x80	; 128
     2d0:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     2d4:	88 23       	and	r24, r24
     2d6:	b1 f0       	breq	.+44     	; 0x304 <touchpin4+0x46>
     2d8:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <previous_key_status_4>
     2dc:	91 11       	cpse	r25, r1
     2de:	12 c0       	rjmp	.+36     	; 0x304 <touchpin4+0x46>
		second_counter_2 = 0;
     2e0:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <__data_end+0x1>
     2e4:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <__data_end>
		touch_counter_4 = 1;
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <touch_counter_4>
		if (touch_counter_4 == 1) {
			SPI_MasterTransmitString("L4");                     // Transmits "L4"
     2ee:	87 e8       	ldi	r24, 0x87	; 135
     2f0:	91 e0       	ldi	r25, 0x01	; 1
     2f2:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter_2 = 0;
     2f6:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <__data_end+0x1>
     2fa:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <__data_end>
			touch_counter_4 = 0;
     2fe:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <touch_counter_4>
     302:	08 95       	ret
		}
	}
	else if (key_status_4) {
     304:	88 23       	and	r24, r24
     306:	49 f0       	breq	.+18     	; 0x31a <touchpin4+0x5c>
		second_counter_2++;
     308:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     30c:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
     316:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>
     31a:	08 95       	ret

0000031c <touchpin5>:
	}
    	
}

void touchpin5(){
	previous_key_status_5 = key_status_5;
     31c:	80 91 c5 01 	lds	r24, 0x01C5	; 0x8001c5 <key_status_5>
     320:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <previous_key_status_5>
	key_status_5 = get_sensor_state(4) & 0x80;
     324:	84 e0       	ldi	r24, 0x04	; 4
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     32c:	80 78       	andi	r24, 0x80	; 128
     32e:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <key_status_5>
	if(key_status_5 && !previous_key_status_5){
     332:	88 23       	and	r24, r24
     334:	c1 f0       	breq	.+48     	; 0x366 <touchpin5+0x4a>
     336:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <previous_key_status_5>
     33a:	81 11       	cpse	r24, r1
     33c:	14 c0       	rjmp	.+40     	; 0x366 <touchpin5+0x4a>
		touch_counter_5++;
     33e:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <touch_counter_5>
     342:	8f 5f       	subi	r24, 0xFF	; 255
     344:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <touch_counter_5>
		if(touch_counter_5 == 1){
     348:	81 30       	cpi	r24, 0x01	; 1
     34a:	29 f4       	brne	.+10     	; 0x356 <touchpin5+0x3a>
			SPI_MasterTransmitString("L5");                     // Transmits "L5"
     34c:	8a e8       	ldi	r24, 0x8A	; 138
     34e:	91 e0       	ldi	r25, 0x01	; 1
     350:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     354:	08 95       	ret
		}else if(touch_counter_5 == 2){
     356:	82 30       	cpi	r24, 0x02	; 2
     358:	31 f4       	brne	.+12     	; 0x366 <touchpin5+0x4a>
			SPI_MasterTransmitString("L5");                     // Transmits "L5"
     35a:	8a e8       	ldi	r24, 0x8A	; 138
     35c:	91 e0       	ldi	r25, 0x01	; 1
     35e:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			touch_counter_5 = 0;
     362:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <touch_counter_5>
     366:	08 95       	ret

00000368 <touchpin6>:
		}
	}
}

void touchpin6(){
	previous_key_status_6 = key_status_6;
     368:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <key_status_6>
     36c:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <previous_key_status_6>
	key_status_6 = get_sensor_state(5) & 0x80;
     370:	85 e0       	ldi	r24, 0x05	; 5
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
     378:	80 78       	andi	r24, 0x80	; 128
     37a:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <key_status_6>
	if(key_status_6 && !previous_key_status_6){
     37e:	88 23       	and	r24, r24
     380:	c1 f0       	breq	.+48     	; 0x3b2 <touchpin6+0x4a>
     382:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <previous_key_status_6>
     386:	81 11       	cpse	r24, r1
     388:	14 c0       	rjmp	.+40     	; 0x3b2 <touchpin6+0x4a>
		touch_counter_6++;
     38a:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <touch_counter_6>
     38e:	8f 5f       	subi	r24, 0xFF	; 255
     390:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <touch_counter_6>
		if(touch_counter_6 == 1){
     394:	81 30       	cpi	r24, 0x01	; 1
     396:	29 f4       	brne	.+10     	; 0x3a2 <touchpin6+0x3a>
			SPI_MasterTransmitString("L6");                     // Transmits "L6"
     398:	8d e8       	ldi	r24, 0x8D	; 141
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     3a0:	08 95       	ret
		}else if(touch_counter_6 == 2){
     3a2:	82 30       	cpi	r24, 0x02	; 2
     3a4:	31 f4       	brne	.+12     	; 0x3b2 <touchpin6+0x4a>
			SPI_MasterTransmitString("L6");                     // Transmits "L6"
     3a6:	8d e8       	ldi	r24, 0x8D	; 141
     3a8:	91 e0       	ldi	r25, 0x01	; 1
     3aa:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			touch_counter_6 = 0;
     3ae:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <touch_counter_6>
     3b2:	08 95       	ret

000003b4 <loop>:
}



void loop() {
	touch_process();
     3b4:	0e 94 15 03 	call	0x62a	; 0x62a <touch_process>
	if (measurement_done_touch == 1) {
     3b8:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <measurement_done_touch>
     3bc:	81 30       	cpi	r24, 0x01	; 1
     3be:	61 f5       	brne	.+88     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
		measurement_done_touch = 0;
     3c0:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <measurement_done_touch>
		touchpin1();
     3c4:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <touchpin1>
		touchpin2();
     3c8:	0e 94 13 01 	call	0x226	; 0x226 <touchpin2>
		touchpin3();
     3cc:	0e 94 39 01 	call	0x272	; 0x272 <touchpin3>
		touchpin4();
     3d0:	0e 94 5f 01 	call	0x2be	; 0x2be <touchpin4>
		touchpin5();
     3d4:	0e 94 8e 01 	call	0x31c	; 0x31c <touchpin5>
		touchpin6();
     3d8:	0e 94 b4 01 	call	0x368	; 0x368 <touchpin6>

		if (second_counter >= 100 && second_counter_2 >= 100) {
     3dc:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <second_counter>
     3e0:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <second_counter+0x1>
     3e4:	84 36       	cpi	r24, 0x64	; 100
     3e6:	91 05       	cpc	r25, r1
     3e8:	b8 f0       	brcs	.+46     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     3ea:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     3ee:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     3f2:	84 36       	cpi	r24, 0x64	; 100
     3f4:	91 05       	cpc	r25, r1
     3f6:	80 f0       	brcs	.+32     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
			SPI_MasterTransmitString("H1");                     // Transmits "H1"
     3f8:	80 e9       	ldi	r24, 0x90	; 144
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter = 0;
     400:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <second_counter+0x1>
     404:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <second_counter>
			second_counter_2 = 0;
     408:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <__data_end+0x1>
     40c:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <__data_end>
			touch_counter_1 = 0;
     410:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <touch_counter_1>
			touch_counter_4 = 0;
     414:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <touch_counter_4>
     418:	08 95       	ret

0000041a <main>:
volatile uint16_t second_counter = 0;
volatile uint16_t second_counter_2 = 0;

int main(void)
{
	atmel_start_init();
     41a:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	cpu_irq_enable();
     41e:	78 94       	sei
	SPI_MasterInit();
     420:	0e 94 b1 00 	call	0x162	; 0x162 <SPI_MasterInit>
	sei();
     424:	78 94       	sei
	while (1)
	{
		loop();
     426:	0e 94 da 01 	call	0x3b4	; 0x3b4 <loop>
     42a:	fd cf       	rjmp	.-6      	; 0x426 <main+0xc>

0000042c <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     42c:	08 95       	ret

0000042e <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     42e:	cf 93       	push	r28
     430:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     432:	0e 94 99 04 	call	0x932	; 0x932 <USART_is_tx_ready>
     436:	88 23       	and	r24, r24
     438:	e1 f3       	breq	.-8      	; 0x432 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     43a:	8c 2f       	mov	r24, r28
     43c:	0e 94 a9 04 	call	0x952	; 0x952 <USART_write>

	while (USART_is_tx_busy())
     440:	0e 94 9f 04 	call	0x93e	; 0x93e <USART_is_tx_busy>
     444:	81 11       	cpse	r24, r1
     446:	fc cf       	rjmp	.-8      	; 0x440 <datastreamer_transmit+0x12>
		;
}
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     44c:	0f 93       	push	r16
     44e:	1f 93       	push	r17
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	00 d0       	rcall	.+0      	; 0x456 <datastreamer_output+0xa>
     456:	cd b7       	in	r28, 0x3d	; 61
     458:	de b7       	in	r29, 0x3e	; 62
	static uint8_t    sequence = 0u;
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
     45a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sequence.2511>
     45e:	8f 70       	andi	r24, 0x0F	; 15
	if (send_header == 0) {
     460:	51 f0       	breq	.+20     	; 0x476 <datastreamer_output+0x2a>
     462:	0e c0       	rjmp	.+28     	; 0x480 <datastreamer_output+0x34>
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     464:	f8 01       	movw	r30, r16
     466:	e0 50       	subi	r30, 0x00	; 0
     468:	ff 4f       	sbci	r31, 0xFF	; 255
     46a:	80 81       	ld	r24, Z
     46c:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     470:	0f 5f       	subi	r16, 0xFF	; 255
     472:	1f 4f       	sbci	r17, 0xFF	; 255
     474:	02 c0       	rjmp	.+4      	; 0x47a <datastreamer_output+0x2e>
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
     47a:	03 31       	cpi	r16, 0x13	; 19
     47c:	11 05       	cpc	r17, r1
     47e:	90 f3       	brcs	.-28     	; 0x464 <datastreamer_output+0x18>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     480:	85 e5       	ldi	r24, 0x55	; 85
     482:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     486:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sequence.2511>
     48a:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     48e:	1a 82       	std	Y+2, r1	; 0x02
     490:	19 82       	std	Y+1, r1	; 0x01
     492:	4e c0       	rjmp	.+156    	; 0x530 <datastreamer_output+0xe4>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     494:	89 81       	ldd	r24, Y+1	; 0x01
     496:	9a 81       	ldd	r25, Y+2	; 0x02
     498:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <get_sensor_node_signal>
     49c:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     49e:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     4a2:	81 2f       	mov	r24, r17
     4a4:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	9a 81       	ldd	r25, Y+2	; 0x02
     4ac:	0e 94 77 03 	call	0x6ee	; 0x6ee <get_sensor_node_reference>
     4b0:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     4b2:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     4b6:	81 2f       	mov	r24, r17
     4b8:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	9a 81       	ldd	r25, Y+2	; 0x02
     4c0:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <get_sensor_node_signal>
     4c4:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ca:	0e 94 77 03 	call	0x6ee	; 0x6ee <get_sensor_node_reference>
     4ce:	08 1b       	sub	r16, r24
     4d0:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     4d2:	80 2f       	mov	r24, r16
     4d4:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     4d8:	81 2f       	mov	r24, r17
     4da:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     4de:	89 81       	ldd	r24, Y+1	; 0x01
     4e0:	9a 81       	ldd	r25, Y+2	; 0x02
     4e2:	0e 94 83 03 	call	0x706	; 0x706 <get_sensor_cc_val>
     4e6:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     4e8:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     4ec:	81 2f       	mov	r24, r17
     4ee:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	0e 94 90 03 	call	0x720	; 0x720 <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     4fa:	88 23       	and	r24, r24
     4fc:	24 f4       	brge	.+8      	; 0x506 <datastreamer_output+0xba>
			datastreamer_transmit(0x01);
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
     504:	03 c0       	rjmp	.+6      	; 0x50c <datastreamer_output+0xc0>
		} else {
			datastreamer_transmit(0x00);
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     50c:	89 81       	ldd	r24, Y+1	; 0x01
     50e:	9a 81       	ldd	r25, Y+2	; 0x02
     510:	fc 01       	movw	r30, r24
     512:	ee 0f       	add	r30, r30
     514:	ff 1f       	adc	r31, r31
     516:	8e 0f       	add	r24, r30
     518:	9f 1f       	adc	r25, r31
     51a:	fc 01       	movw	r30, r24
     51c:	e5 5e       	subi	r30, 0xE5	; 229
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	80 81       	ld	r24, Z
     522:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     526:	89 81       	ldd	r24, Y+1	; 0x01
     528:	9a 81       	ldd	r25, Y+2	; 0x02
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	9a 83       	std	Y+2, r25	; 0x02
     52e:	89 83       	std	Y+1, r24	; 0x01
     530:	89 81       	ldd	r24, Y+1	; 0x01
     532:	9a 81       	ldd	r25, Y+2	; 0x02
     534:	06 97       	sbiw	r24, 0x06	; 6
     536:	08 f4       	brcc	.+2      	; 0x53a <datastreamer_output+0xee>
     538:	ad cf       	rjmp	.-166    	; 0x494 <datastreamer_output+0x48>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     53a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <module_error_code>
     53e:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     542:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sequence.2511>
     546:	91 e0       	ldi	r25, 0x01	; 1
     548:	98 0f       	add	r25, r24
     54a:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <sequence.2511>
     54e:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     552:	8a ea       	ldi	r24, 0xAA	; 170
     554:	0e 94 17 02 	call	0x42e	; 0x42e <datastreamer_transmit>
}
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	df 91       	pop	r29
     55e:	cf 91       	pop	r28
     560:	1f 91       	pop	r17
     562:	0f 91       	pop	r16
     564:	08 95       	ret

00000566 <touch_ptc_pin_config>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     566:	82 b1       	in	r24, 0x02	; 2
     568:	8b 7f       	andi	r24, 0xFB	; 251
     56a:	82 b9       	out	0x02, r24	; 2
     56c:	82 b1       	in	r24, 0x02	; 2
     56e:	8d 7f       	andi	r24, 0xFD	; 253
     570:	82 b9       	out	0x02, r24	; 2
     572:	82 b1       	in	r24, 0x02	; 2
     574:	8e 7f       	andi	r24, 0xFE	; 254
     576:	82 b9       	out	0x02, r24	; 2
     578:	82 b1       	in	r24, 0x02	; 2
     57a:	87 7f       	andi	r24, 0xF7	; 247
     57c:	82 b9       	out	0x02, r24	; 2
     57e:	82 b1       	in	r24, 0x02	; 2
     580:	8f 7e       	andi	r24, 0xEF	; 239
     582:	82 b9       	out	0x02, r24	; 2
     584:	82 b1       	in	r24, 0x02	; 2
     586:	8f 7d       	andi	r24, 0xDF	; 223
     588:	82 b9       	out	0x02, r24	; 2
     58a:	08 95       	ret

0000058c <qtm_measure_complete_callback>:
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <touch_postprocess_request>
     592:	08 95       	ret

00000594 <touch_sensors_config>:
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	87 e3       	ldi	r24, 0x37	; 55
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <qtm_ptc_init_acquisition_module>
     5a0:	82 ef       	ldi	r24, 0xF2	; 242
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <qtm_ptc_qtlib_assign_signal_memory>
     5a8:	c0 e0       	ldi	r28, 0x00	; 0
     5aa:	d0 e0       	ldi	r29, 0x00	; 0
     5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <touch_sensors_config+0x30>
     5ae:	be 01       	movw	r22, r28
     5b0:	87 e3       	ldi	r24, 0x37	; 55
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <qtm_enable_sensor_node>
     5b8:	be 01       	movw	r22, r28
     5ba:	87 e3       	ldi	r24, 0x37	; 55
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <qtm_calibrate_sensor_node>
     5c2:	21 96       	adiw	r28, 0x01	; 1
     5c4:	c6 30       	cpi	r28, 0x06	; 6
     5c6:	d1 05       	cpc	r29, r1
     5c8:	90 f3       	brcs	.-28     	; 0x5ae <touch_sensors_config+0x1a>
     5ca:	c0 e0       	ldi	r28, 0x00	; 0
     5cc:	d0 e0       	ldi	r29, 0x00	; 0
     5ce:	0f c0       	rjmp	.+30     	; 0x5ee <touch_sensors_config+0x5a>
     5d0:	ae 01       	movw	r20, r28
     5d2:	44 0f       	add	r20, r20
     5d4:	55 1f       	adc	r21, r21
     5d6:	44 0f       	add	r20, r20
     5d8:	55 1f       	adc	r21, r21
     5da:	4c 0f       	add	r20, r28
     5dc:	5d 1f       	adc	r21, r29
     5de:	4c 52       	subi	r20, 0x2C	; 44
     5e0:	5e 4f       	sbci	r21, 0xFE	; 254
     5e2:	6c 2f       	mov	r22, r28
     5e4:	83 e1       	ldi	r24, 0x13	; 19
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	0e 94 24 05 	call	0xa48	; 0xa48 <qtm_init_sensor_key>
     5ec:	21 96       	adiw	r28, 0x01	; 1
     5ee:	c6 30       	cpi	r28, 0x06	; 6
     5f0:	d1 05       	cpc	r29, r1
     5f2:	70 f3       	brcs	.-36     	; 0x5d0 <touch_sensors_config+0x3c>
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	08 95       	ret

000005fc <qtm_error_callback>:
     5fc:	8f 5f       	subi	r24, 0xFF	; 255
     5fe:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <module_error_code>
     602:	0e 94 26 02 	call	0x44c	; 0x44c <datastreamer_output>
     606:	08 95       	ret

00000608 <Timer_set_comp_a>:
     608:	87 bd       	out	0x27, r24	; 39
     60a:	08 95       	ret

0000060c <touch_init>:
     60c:	88 e0       	ldi	r24, 0x08	; 8
     60e:	0e 94 04 03 	call	0x608	; 0x608 <Timer_set_comp_a>
     612:	e3 e6       	ldi	r30, 0x63	; 99
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	80 81       	ld	r24, Z
     618:	87 7f       	andi	r24, 0xF7	; 247
     61a:	80 83       	st	Z, r24
     61c:	0e 94 b3 02 	call	0x566	; 0x566 <touch_ptc_pin_config>
     620:	0e 94 ca 02 	call	0x594	; 0x594 <touch_sensors_config>
     624:	0e 94 16 02 	call	0x42c	; 0x42c <datastreamer_init>
     628:	08 95       	ret

0000062a <touch_process>:
     62a:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <time_to_measure_touch_flag>
     62e:	81 30       	cpi	r24, 0x01	; 1
     630:	51 f4       	brne	.+20     	; 0x646 <touch_process+0x1c>
     632:	66 ec       	ldi	r22, 0xC6	; 198
     634:	72 e0       	ldi	r23, 0x02	; 2
     636:	87 e3       	ldi	r24, 0x37	; 55
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <qtm_ptc_start_measurement_seq>
     63e:	81 11       	cpse	r24, r1
     640:	02 c0       	rjmp	.+4      	; 0x646 <touch_process+0x1c>
     642:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <time_to_measure_touch_flag>
     646:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <touch_postprocess_request>
     64a:	81 30       	cpi	r24, 0x01	; 1
     64c:	19 f5       	brne	.+70     	; 0x694 <touch_process+0x6a>
     64e:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <touch_postprocess_request>
     652:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <qtm_acquisition_process>
     656:	81 11       	cpse	r24, r1
     658:	0a c0       	rjmp	.+20     	; 0x66e <touch_process+0x44>
     65a:	83 e1       	ldi	r24, 0x13	; 19
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	0e 94 43 05 	call	0xa86	; 0xa86 <qtm_key_sensors_process>
     662:	88 23       	and	r24, r24
     664:	39 f0       	breq	.+14     	; 0x674 <touch_process+0x4a>
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	0e 94 fe 02 	call	0x5fc	; 0x5fc <qtm_error_callback>
     66c:	03 c0       	rjmp	.+6      	; 0x674 <touch_process+0x4a>
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	0e 94 fe 02 	call	0x5fc	; 0x5fc <qtm_error_callback>
     674:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     678:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     67c:	80 81       	ld	r24, Z
     67e:	88 23       	and	r24, r24
     680:	24 f4       	brge	.+8      	; 0x68a <touch_process+0x60>
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <time_to_measure_touch_flag>
     688:	03 c0       	rjmp	.+6      	; 0x690 <touch_process+0x66>
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <measurement_done_touch>
     690:	0e 94 26 02 	call	0x44c	; 0x44c <datastreamer_output>
     694:	08 95       	ret

00000696 <touch_timer_handler>:
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <time_to_measure_touch_flag>
     69c:	84 e1       	ldi	r24, 0x14	; 20
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 19 05 	call	0xa32	; 0xa32 <qtm_update_qtlib_timer>
     6a4:	08 95       	ret

000006a6 <mega_touch_timer>:
     6a6:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <touch_time_counter.2335>
     6aa:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <touch_time_counter.2335+0x1>
     6ae:	44 97       	sbiw	r24, 0x14	; 20
     6b0:	39 f4       	brne	.+14     	; 0x6c0 <mega_touch_timer+0x1a>
     6b2:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <touch_time_counter.2335+0x1>
     6b6:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <touch_time_counter.2335>
     6ba:	0e 94 4b 03 	call	0x696	; 0x696 <touch_timer_handler>
     6be:	08 95       	ret
     6c0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <touch_time_counter.2335>
     6c4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <touch_time_counter.2335+0x1>
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <touch_time_counter.2335+0x1>
     6ce:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <touch_time_counter.2335>
     6d2:	08 95       	ret

000006d4 <get_sensor_node_signal>:
     6d4:	fc 01       	movw	r30, r24
     6d6:	ee 0f       	add	r30, r30
     6d8:	ff 1f       	adc	r31, r31
     6da:	ee 0f       	add	r30, r30
     6dc:	ff 1f       	adc	r31, r31
     6de:	8e 0f       	add	r24, r30
     6e0:	9f 1f       	adc	r25, r31
     6e2:	fc 01       	movw	r30, r24
     6e4:	ec 52       	subi	r30, 0x2C	; 44
     6e6:	fe 4f       	sbci	r31, 0xFE	; 254
     6e8:	81 81       	ldd	r24, Z+1	; 0x01
     6ea:	92 81       	ldd	r25, Z+2	; 0x02
     6ec:	08 95       	ret

000006ee <get_sensor_node_reference>:
     6ee:	fc 01       	movw	r30, r24
     6f0:	ee 0f       	add	r30, r30
     6f2:	ff 1f       	adc	r31, r31
     6f4:	e8 0f       	add	r30, r24
     6f6:	f9 1f       	adc	r31, r25
     6f8:	ee 0f       	add	r30, r30
     6fa:	ff 1f       	adc	r31, r31
     6fc:	e2 50       	subi	r30, 0x02	; 2
     6fe:	fe 4f       	sbci	r31, 0xFE	; 254
     700:	84 81       	ldd	r24, Z+4	; 0x04
     702:	95 81       	ldd	r25, Z+5	; 0x05
     704:	08 95       	ret

00000706 <get_sensor_cc_val>:
     706:	fc 01       	movw	r30, r24
     708:	ee 0f       	add	r30, r30
     70a:	ff 1f       	adc	r31, r31
     70c:	ee 0f       	add	r30, r30
     70e:	ff 1f       	adc	r31, r31
     710:	8e 0f       	add	r24, r30
     712:	9f 1f       	adc	r25, r31
     714:	fc 01       	movw	r30, r24
     716:	ec 52       	subi	r30, 0x2C	; 44
     718:	fe 4f       	sbci	r31, 0xFE	; 254
     71a:	83 81       	ldd	r24, Z+3	; 0x03
     71c:	94 81       	ldd	r25, Z+4	; 0x04
     71e:	08 95       	ret

00000720 <get_sensor_state>:
     720:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     724:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     728:	9c 01       	movw	r18, r24
     72a:	22 0f       	add	r18, r18
     72c:	33 1f       	adc	r19, r19
     72e:	82 0f       	add	r24, r18
     730:	93 1f       	adc	r25, r19
     732:	88 0f       	add	r24, r24
     734:	99 1f       	adc	r25, r25
     736:	e8 0f       	add	r30, r24
     738:	f9 1f       	adc	r31, r25
     73a:	80 81       	ld	r24, Z
     73c:	08 95       	ret

0000073e <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     73e:	1f 92       	push	r1
     740:	0f 92       	push	r0
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	0f 92       	push	r0
     746:	11 24       	eor	r1, r1
     748:	2f 93       	push	r18
     74a:	3f 93       	push	r19
     74c:	4f 93       	push	r20
     74e:	5f 93       	push	r21
     750:	6f 93       	push	r22
     752:	7f 93       	push	r23
     754:	8f 93       	push	r24
     756:	9f 93       	push	r25
     758:	af 93       	push	r26
     75a:	bf 93       	push	r27
     75c:	ef 93       	push	r30
     75e:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     760:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <qtm_m324pb_ptc_handler_eoc>
}
     764:	ff 91       	pop	r31
     766:	ef 91       	pop	r30
     768:	bf 91       	pop	r27
     76a:	af 91       	pop	r26
     76c:	9f 91       	pop	r25
     76e:	8f 91       	pop	r24
     770:	7f 91       	pop	r23
     772:	6f 91       	pop	r22
     774:	5f 91       	pop	r21
     776:	4f 91       	pop	r20
     778:	3f 91       	pop	r19
     77a:	2f 91       	pop	r18
     77c:	0f 90       	pop	r0
     77e:	0f be       	out	0x3f, r0	; 63
     780:	0f 90       	pop	r0
     782:	1f 90       	pop	r1
     784:	18 95       	reti

00000786 <SPI_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
     786:	84 b1       	in	r24, 0x04	; 4
     788:	8f 7b       	andi	r24, 0xBF	; 191
     78a:	84 b9       	out	0x04, r24	; 4
		DDRB &= ~(1 << pin);

		PORTB |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTB &= ~(1 << pin);
     78c:	85 b1       	in	r24, 0x05	; 5
     78e:	8f 7b       	andi	r24, 0xBF	; 191
     790:	85 b9       	out	0x05, r24	; 5
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
     792:	84 b1       	in	r24, 0x04	; 4
     794:	80 62       	ori	r24, 0x20	; 32
     796:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
     798:	85 b1       	in	r24, 0x05	; 5
     79a:	8f 7d       	andi	r24, 0xDF	; 223
     79c:	85 b9       	out	0x05, r24	; 5
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
     79e:	84 b1       	in	r24, 0x04	; 4
     7a0:	80 68       	ori	r24, 0x80	; 128
     7a2:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
     7a4:	85 b1       	in	r24, 0x05	; 5
     7a6:	8f 77       	andi	r24, 0x7F	; 127
     7a8:	85 b9       	out	0x05, r24	; 5
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	SPI_0_init();
     7aa:	0e 94 20 04 	call	0x840	; 0x840 <SPI_0_init>
     7ae:	08 95       	ret

000007b0 <Timer_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     7b0:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <Timer_init>
     7b4:	08 95       	ret

000007b6 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     7b6:	8a b1       	in	r24, 0x0a	; 10
     7b8:	8e 7f       	andi	r24, 0xFE	; 254
     7ba:	8a b9       	out	0x0a, r24	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     7bc:	8b b1       	in	r24, 0x0b	; 11
     7be:	8e 7f       	andi	r24, 0xFE	; 254
     7c0:	8b b9       	out	0x0b, r24	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     7c2:	8a b1       	in	r24, 0x0a	; 10
     7c4:	82 60       	ori	r24, 0x02	; 2
     7c6:	8a b9       	out	0x0a, r24	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     7c8:	8b b1       	in	r24, 0x0b	; 11
     7ca:	8d 7f       	andi	r24, 0xFD	; 253
     7cc:	8b b9       	out	0x0b, r24	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     7ce:	0e 94 88 04 	call	0x910	; 0x910 <USART_init>
     7d2:	08 95       	ret

000007d4 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     7d4:	83 e0       	ldi	r24, 0x03	; 3
     7d6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     7da:	8f ef       	ldi	r24, 0xFF	; 255
     7dc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     7e0:	9f e0       	ldi	r25, 0x0F	; 15
     7e2:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     7e6:	91 b1       	in	r25, 0x01	; 1
     7e8:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     7ea:	92 b1       	in	r25, 0x02	; 2
     7ec:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     7ee:	94 b1       	in	r25, 0x04	; 4
     7f0:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     7f2:	95 b1       	in	r25, 0x05	; 5
     7f4:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     7f6:	97 b1       	in	r25, 0x07	; 7
     7f8:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     7fa:	98 b1       	in	r25, 0x08	; 8
     7fc:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     7fe:	9a b1       	in	r25, 0x0a	; 10
     800:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     802:	9b b1       	in	r25, 0x0b	; 11
     804:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     806:	8d b1       	in	r24, 0x0d	; 13
     808:	80 78       	andi	r24, 0x80	; 128
     80a:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     80c:	8e b1       	in	r24, 0x0e	; 14
     80e:	8f 67       	ori	r24, 0x7F	; 127
     810:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	60 e8       	ldi	r22, 0x80	; 128
     816:	81 e6       	ldi	r24, 0x61	; 97
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 19 04 	call	0x832	; 0x832 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     81e:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     820:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     822:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     824:	0e 94 c3 03 	call	0x786	; 0x786 <SPI_0_initialization>

	Timer_initialization();
     828:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <Timer_initialization>

	USART_initialization();
     82c:	0e 94 db 03 	call	0x7b6	; 0x7b6 <USART_initialization>
     830:	08 95       	ret

00000832 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     832:	2f b7       	in	r18, 0x3f	; 63
	cli
     834:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     836:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     838:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     83a:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     83c:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     83e:	08 95       	ret

00000840 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     840:	e4 e6       	ldi	r30, 0x64	; 100
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	80 81       	ld	r24, Z
     846:	8b 7f       	andi	r24, 0xFB	; 251
     848:	80 83       	st	Z, r24
     84a:	80 ed       	ldi	r24, 0xD0	; 208
     84c:	8c bd       	out	0x2c, r24	; 44
     84e:	e5 ea       	ldi	r30, 0xA5	; 165
     850:	f1 e0       	ldi	r31, 0x01	; 1
     852:	10 82       	st	Z, r1
     854:	16 82       	std	Z+6, r1	; 0x06
     856:	15 82       	std	Z+5, r1	; 0x05
     858:	08 95       	ret

0000085a <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     85a:	1f 92       	push	r1
     85c:	0f 92       	push	r0
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	0f 92       	push	r0
     862:	11 24       	eor	r1, r1
     864:	2f 93       	push	r18
     866:	3f 93       	push	r19
     868:	4f 93       	push	r20
     86a:	5f 93       	push	r21
     86c:	6f 93       	push	r22
     86e:	7f 93       	push	r23
     870:	8f 93       	push	r24
     872:	9f 93       	push	r25
     874:	af 93       	push	r26
     876:	bf 93       	push	r27
     878:	ef 93       	push	r30
     87a:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     87c:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     87e:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <SPI_0_desc+0x4>
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	29 f0       	breq	.+10     	; 0x890 <__vector_19+0x36>
		*SPI_0_desc.data = rdata;
     886:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <SPI_0_desc+0x1>
     88a:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <SPI_0_desc+0x2>
     88e:	90 83       	st	Z, r25
	}

	SPI_0_desc.data++;
     890:	e5 ea       	ldi	r30, 0xA5	; 165
     892:	f1 e0       	ldi	r31, 0x01	; 1
     894:	a1 81       	ldd	r26, Z+1	; 0x01
     896:	b2 81       	ldd	r27, Z+2	; 0x02
     898:	9d 01       	movw	r18, r26
     89a:	2f 5f       	subi	r18, 0xFF	; 255
     89c:	3f 4f       	sbci	r19, 0xFF	; 255
     89e:	32 83       	std	Z+2, r19	; 0x02
     8a0:	21 83       	std	Z+1, r18	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     8a2:	81 30       	cpi	r24, 0x01	; 1
     8a4:	19 f0       	breq	.+6      	; 0x8ac <__vector_19+0x52>
		wdata = *SPI_0_desc.data;
     8a6:	11 96       	adiw	r26, 0x01	; 1
     8a8:	9c 91       	ld	r25, X
     8aa:	01 c0       	rjmp	.+2      	; 0x8ae <__vector_19+0x54>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     8ac:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     8ae:	e5 ea       	ldi	r30, 0xA5	; 165
     8b0:	f1 e0       	ldi	r31, 0x01	; 1
     8b2:	83 81       	ldd	r24, Z+3	; 0x03
     8b4:	81 50       	subi	r24, 0x01	; 1
     8b6:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     8b8:	88 23       	and	r24, r24
     8ba:	11 f0       	breq	.+4      	; 0x8c0 <__vector_19+0x66>
		// more data to send, send a byte
		SPDR0 = wdata;
     8bc:	9e bd       	out	0x2e, r25	; 46
     8be:	0a c0       	rjmp	.+20     	; 0x8d4 <__vector_19+0x7a>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     8c0:	e5 ea       	ldi	r30, 0xA5	; 165
     8c2:	f1 e0       	ldi	r31, 0x01	; 1
     8c4:	83 e0       	ldi	r24, 0x03	; 3
     8c6:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     8c8:	05 80       	ldd	r0, Z+5	; 0x05
     8ca:	f6 81       	ldd	r31, Z+6	; 0x06
     8cc:	e0 2d       	mov	r30, r0
     8ce:	30 97       	sbiw	r30, 0x00	; 0
     8d0:	09 f0       	breq	.+2      	; 0x8d4 <__vector_19+0x7a>
			SPI_0_desc.cb();
     8d2:	09 95       	icall
		}
	}
}
     8d4:	ff 91       	pop	r31
     8d6:	ef 91       	pop	r30
     8d8:	bf 91       	pop	r27
     8da:	af 91       	pop	r26
     8dc:	9f 91       	pop	r25
     8de:	8f 91       	pop	r24
     8e0:	7f 91       	pop	r23
     8e2:	6f 91       	pop	r22
     8e4:	5f 91       	pop	r21
     8e6:	4f 91       	pop	r20
     8e8:	3f 91       	pop	r19
     8ea:	2f 91       	pop	r18
     8ec:	0f 90       	pop	r0
     8ee:	0f be       	out	0x3f, r0	; 63
     8f0:	0f 90       	pop	r0
     8f2:	1f 90       	pop	r1
     8f4:	18 95       	reti

000008f6 <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     8f6:	e4 e6       	ldi	r30, 0x64	; 100
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	80 81       	ld	r24, Z
     8fc:	8f 7d       	andi	r24, 0xDF	; 223
     8fe:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     900:	82 e0       	ldi	r24, 0x02	; 2
     902:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     904:	95 e0       	ldi	r25, 0x05	; 5
     906:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     908:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	08 95       	ret

00000910 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     910:	e4 e6       	ldi	r30, 0x64	; 100
     912:	f0 e0       	ldi	r31, 0x00	; 0
     914:	80 81       	ld	r24, Z
     916:	8d 7f       	andi	r24, 0xFD	; 253
     918:	80 83       	st	Z, r24
     91a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     91e:	8c e0       	ldi	r24, 0x0C	; 12
     920:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     924:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     928:	88 e0       	ldi	r24, 0x08	; 8
     92a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	08 95       	ret

00000932 <USART_is_tx_ready>:
     932:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     936:	85 fb       	bst	r24, 5
     938:	88 27       	eor	r24, r24
     93a:	80 f9       	bld	r24, 0
     93c:	08 95       	ret

0000093e <USART_is_tx_busy>:
     93e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     942:	82 95       	swap	r24
     944:	86 95       	lsr	r24
     946:	86 95       	lsr	r24
     948:	83 70       	andi	r24, 0x03	; 3
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	89 27       	eor	r24, r25
     94e:	81 70       	andi	r24, 0x01	; 1
     950:	08 95       	ret

00000952 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     952:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     956:	95 ff       	sbrs	r25, 5
     958:	fc cf       	rjmp	.-8      	; 0x952 <USART_write>
		;
	UDR0 = data;
     95a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     95e:	08 95       	ret

00000960 <check_for_aks_block>:
     960:	cf 92       	push	r12
     962:	df 92       	push	r13
     964:	ff 92       	push	r15
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	ec 01       	movw	r28, r24
     970:	ae 81       	ldd	r26, Y+6	; 0x06
     972:	bf 81       	ldd	r27, Y+7	; 0x07
     974:	eb 01       	movw	r28, r22
     976:	cc 0f       	add	r28, r28
     978:	dd 1f       	adc	r29, r29
     97a:	c6 0f       	add	r28, r22
     97c:	d7 1f       	adc	r29, r23
     97e:	ca 0f       	add	r28, r26
     980:	db 1f       	adc	r29, r27
     982:	fa 80       	ldd	r15, Y+2	; 0x02
     984:	fc 01       	movw	r30, r24
     986:	44 81       	ldd	r20, Z+4	; 0x04
     988:	55 81       	ldd	r21, Z+5	; 0x05
     98a:	e6 e0       	ldi	r30, 0x06	; 6
     98c:	e6 9f       	mul	r30, r22
     98e:	90 01       	movw	r18, r0
     990:	e7 9f       	mul	r30, r23
     992:	30 0d       	add	r19, r0
     994:	11 24       	eor	r1, r1
     996:	8a 01       	movw	r16, r20
     998:	02 0f       	add	r16, r18
     99a:	13 1f       	adc	r17, r19
     99c:	f8 01       	movw	r30, r16
     99e:	22 81       	ldd	r18, Z+2	; 0x02
     9a0:	33 81       	ldd	r19, Z+3	; 0x03
     9a2:	f9 01       	movw	r30, r18
     9a4:	21 81       	ldd	r18, Z+1	; 0x01
     9a6:	32 81       	ldd	r19, Z+2	; 0x02
     9a8:	f8 01       	movw	r30, r16
     9aa:	04 81       	ldd	r16, Z+4	; 0x04
     9ac:	15 81       	ldd	r17, Z+5	; 0x05
     9ae:	20 1b       	sub	r18, r16
     9b0:	31 0b       	sbc	r19, r17
     9b2:	e8 81       	ld	r30, Y
     9b4:	2e 1b       	sub	r18, r30
     9b6:	31 09       	sbc	r19, r1
     9b8:	ec 01       	movw	r28, r24
     9ba:	ea 81       	ldd	r30, Y+2	; 0x02
     9bc:	fb 81       	ldd	r31, Y+3	; 0x03
     9be:	00 81       	ld	r16, Z
     9c0:	11 81       	ldd	r17, Z+1	; 0x01
     9c2:	fa 01       	movw	r30, r20
     9c4:	40 e0       	ldi	r20, 0x00	; 0
     9c6:	50 e0       	ldi	r21, 0x00	; 0
     9c8:	40 17       	cp	r20, r16
     9ca:	51 07       	cpc	r21, r17
     9cc:	39 f1       	breq	.+78     	; 0xa1c <check_for_aks_block+0xbc>
     9ce:	46 17       	cp	r20, r22
     9d0:	57 07       	cpc	r21, r23
     9d2:	f9 f0       	breq	.+62     	; 0xa12 <check_for_aks_block+0xb2>
     9d4:	12 96       	adiw	r26, 0x02	; 2
     9d6:	8c 91       	ld	r24, X
     9d8:	12 97       	sbiw	r26, 0x02	; 2
     9da:	f8 12       	cpse	r15, r24
     9dc:	1a c0       	rjmp	.+52     	; 0xa12 <check_for_aks_block+0xb2>
     9de:	80 81       	ld	r24, Z
     9e0:	85 58       	subi	r24, 0x85	; 133
     9e2:	82 30       	cpi	r24, 0x02	; 2
     9e4:	e8 f0       	brcs	.+58     	; 0xa20 <check_for_aks_block+0xc0>
     9e6:	c4 80       	ldd	r12, Z+4	; 0x04
     9e8:	d5 80       	ldd	r13, Z+5	; 0x05
     9ea:	82 81       	ldd	r24, Z+2	; 0x02
     9ec:	93 81       	ldd	r25, Z+3	; 0x03
     9ee:	ec 01       	movw	r28, r24
     9f0:	89 81       	ldd	r24, Y+1	; 0x01
     9f2:	9a 81       	ldd	r25, Y+2	; 0x02
     9f4:	c8 16       	cp	r12, r24
     9f6:	d9 06       	cpc	r13, r25
     9f8:	60 f4       	brcc	.+24     	; 0xa12 <check_for_aks_block+0xb2>
     9fa:	8c 19       	sub	r24, r12
     9fc:	9d 09       	sbc	r25, r13
     9fe:	cc 91       	ld	r28, X
     a00:	d0 e0       	ldi	r29, 0x00	; 0
     a02:	c8 17       	cp	r28, r24
     a04:	d9 07       	cpc	r29, r25
     a06:	28 f4       	brcc	.+10     	; 0xa12 <check_for_aks_block+0xb2>
     a08:	8c 1b       	sub	r24, r28
     a0a:	9d 0b       	sbc	r25, r29
     a0c:	28 17       	cp	r18, r24
     a0e:	39 07       	cpc	r19, r25
     a10:	38 f0       	brcs	.+14     	; 0xa20 <check_for_aks_block+0xc0>
     a12:	4f 5f       	subi	r20, 0xFF	; 255
     a14:	5f 4f       	sbci	r21, 0xFF	; 255
     a16:	13 96       	adiw	r26, 0x03	; 3
     a18:	36 96       	adiw	r30, 0x06	; 6
     a1a:	d6 cf       	rjmp	.-84     	; 0x9c8 <check_for_aks_block+0x68>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	01 c0       	rjmp	.+2      	; 0xa22 <check_for_aks_block+0xc2>
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	ff 90       	pop	r15
     a2c:	df 90       	pop	r13
     a2e:	cf 90       	pop	r12
     a30:	08 95       	ret

00000a32 <qtm_update_qtlib_timer>:
     a32:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <qtm_local_ms_timecount>
     a36:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <qtm_local_ms_timecount+0x1>
     a3a:	82 0f       	add	r24, r18
     a3c:	93 1f       	adc	r25, r19
     a3e:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <qtm_local_ms_timecount+0x1>
     a42:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <qtm_local_ms_timecount>
     a46:	08 95       	ret

00000a48 <qtm_init_sensor_key>:
     a48:	00 97       	sbiw	r24, 0x00	; 0
     a4a:	d9 f0       	breq	.+54     	; 0xa82 <qtm_init_sensor_key+0x3a>
     a4c:	41 15       	cp	r20, r1
     a4e:	51 05       	cpc	r21, r1
     a50:	c1 f0       	breq	.+48     	; 0xa82 <qtm_init_sensor_key+0x3a>
     a52:	26 e0       	ldi	r18, 0x06	; 6
     a54:	62 9f       	mul	r22, r18
     a56:	b0 01       	movw	r22, r0
     a58:	11 24       	eor	r1, r1
     a5a:	dc 01       	movw	r26, r24
     a5c:	14 96       	adiw	r26, 0x04	; 4
     a5e:	ed 91       	ld	r30, X+
     a60:	fc 91       	ld	r31, X
     a62:	15 97       	sbiw	r26, 0x05	; 5
     a64:	e6 0f       	add	r30, r22
     a66:	f7 1f       	adc	r31, r23
     a68:	21 e0       	ldi	r18, 0x01	; 1
     a6a:	20 83       	st	Z, r18
     a6c:	14 96       	adiw	r26, 0x04	; 4
     a6e:	8d 91       	ld	r24, X+
     a70:	9c 91       	ld	r25, X
     a72:	15 97       	sbiw	r26, 0x05	; 5
     a74:	fc 01       	movw	r30, r24
     a76:	e6 0f       	add	r30, r22
     a78:	f7 1f       	adc	r31, r23
     a7a:	53 83       	std	Z+3, r21	; 0x03
     a7c:	42 83       	std	Z+2, r20	; 0x02
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	08 95       	ret
     a82:	8b e0       	ldi	r24, 0x0B	; 11
     a84:	08 95       	ret

00000a86 <qtm_key_sensors_process>:
     a86:	2f 92       	push	r2
     a88:	3f 92       	push	r3
     a8a:	4f 92       	push	r4
     a8c:	5f 92       	push	r5
     a8e:	6f 92       	push	r6
     a90:	7f 92       	push	r7
     a92:	8f 92       	push	r8
     a94:	9f 92       	push	r9
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	00 97       	sbiw	r24, 0x00	; 0
     aac:	09 f4       	brne	.+2      	; 0xab0 <qtm_key_sensors_process+0x2a>
     aae:	7e c3       	rjmp	.+1788   	; 0x11ac <qtm_key_sensors_process+0x726>
     ab0:	ec 01       	movw	r28, r24
     ab2:	a1 2c       	mov	r10, r1
     ab4:	b1 2c       	mov	r11, r1
     ab6:	81 2c       	mov	r8, r1
     ab8:	91 2c       	mov	r9, r1
     aba:	21 2c       	mov	r2, r1
     abc:	d1 2c       	mov	r13, r1
     abe:	55 24       	eor	r5, r5
     ac0:	53 94       	inc	r5
     ac2:	33 e0       	ldi	r19, 0x03	; 3
     ac4:	c3 2e       	mov	r12, r19
     ac6:	45 e8       	ldi	r20, 0x85	; 133
     ac8:	64 2e       	mov	r6, r20
     aca:	56 e8       	ldi	r21, 0x86	; 134
     acc:	75 2e       	mov	r7, r21
     ace:	62 e0       	ldi	r22, 0x02	; 2
     ad0:	36 2e       	mov	r3, r22
     ad2:	78 e0       	ldi	r23, 0x08	; 8
     ad4:	47 2e       	mov	r4, r23
     ad6:	ea 81       	ldd	r30, Y+2	; 0x02
     ad8:	fb 81       	ldd	r31, Y+3	; 0x03
     ada:	80 81       	ld	r24, Z
     adc:	91 81       	ldd	r25, Z+1	; 0x01
     ade:	88 16       	cp	r8, r24
     ae0:	99 06       	cpc	r9, r25
     ae2:	08 f0       	brcs	.+2      	; 0xae6 <qtm_key_sensors_process+0x60>
     ae4:	a6 c1       	rjmp	.+844    	; 0xe32 <qtm_key_sensors_process+0x3ac>
     ae6:	75 01       	movw	r14, r10
     ae8:	ee 0c       	add	r14, r14
     aea:	ff 1c       	adc	r15, r15
     aec:	ec 81       	ldd	r30, Y+4	; 0x04
     aee:	fd 81       	ldd	r31, Y+5	; 0x05
     af0:	ee 0d       	add	r30, r14
     af2:	ff 1d       	adc	r31, r15
     af4:	a2 81       	ldd	r26, Z+2	; 0x02
     af6:	b3 81       	ldd	r27, Z+3	; 0x03
     af8:	9c 91       	ld	r25, X
     afa:	9e 71       	andi	r25, 0x1E	; 30
     afc:	09 f0       	breq	.+2      	; 0xb00 <qtm_key_sensors_process+0x7a>
     afe:	50 82       	st	Z, r5
     b00:	0c 81       	ldd	r16, Y+4	; 0x04
     b02:	1d 81       	ldd	r17, Y+5	; 0x05
     b04:	0e 0d       	add	r16, r14
     b06:	1f 1d       	adc	r17, r15
     b08:	d8 01       	movw	r26, r16
     b0a:	8c 91       	ld	r24, X
     b0c:	84 30       	cpi	r24, 0x04	; 4
     b0e:	09 f4       	brne	.+2      	; 0xb12 <qtm_key_sensors_process+0x8c>
     b10:	9e c0       	rjmp	.+316    	; 0xc4e <qtm_key_sensors_process+0x1c8>
     b12:	38 f4       	brcc	.+14     	; 0xb22 <qtm_key_sensors_process+0x9c>
     b14:	82 30       	cpi	r24, 0x02	; 2
     b16:	d1 f0       	breq	.+52     	; 0xb4c <qtm_key_sensors_process+0xc6>
     b18:	08 f0       	brcs	.+2      	; 0xb1c <qtm_key_sensors_process+0x96>
     b1a:	45 c0       	rjmp	.+138    	; 0xba6 <qtm_key_sensors_process+0x120>
     b1c:	81 30       	cpi	r24, 0x01	; 1
     b1e:	59 f0       	breq	.+22     	; 0xb36 <qtm_key_sensors_process+0xb0>
     b20:	81 c1       	rjmp	.+770    	; 0xe24 <qtm_key_sensors_process+0x39e>
     b22:	85 38       	cpi	r24, 0x85	; 133
     b24:	09 f4       	brne	.+2      	; 0xb28 <qtm_key_sensors_process+0xa2>
     b26:	bf c0       	rjmp	.+382    	; 0xca6 <qtm_key_sensors_process+0x220>
     b28:	86 38       	cpi	r24, 0x86	; 134
     b2a:	09 f4       	brne	.+2      	; 0xb2e <qtm_key_sensors_process+0xa8>
     b2c:	f5 c0       	rjmp	.+490    	; 0xd18 <qtm_key_sensors_process+0x292>
     b2e:	87 30       	cpi	r24, 0x07	; 7
     b30:	09 f0       	breq	.+2      	; 0xb34 <qtm_key_sensors_process+0xae>
     b32:	78 c1       	rjmp	.+752    	; 0xe24 <qtm_key_sensors_process+0x39e>
     b34:	36 c1       	rjmp	.+620    	; 0xda2 <qtm_key_sensors_process+0x31c>
     b36:	91 11       	cpse	r25, r1
     b38:	67 c1       	rjmp	.+718    	; 0xe08 <qtm_key_sensors_process+0x382>
     b3a:	f8 01       	movw	r30, r16
     b3c:	30 82       	st	Z, r3
     b3e:	8c 81       	ldd	r24, Y+4	; 0x04
     b40:	9d 81       	ldd	r25, Y+5	; 0x05
     b42:	fc 01       	movw	r30, r24
     b44:	ee 0d       	add	r30, r14
     b46:	ff 1d       	adc	r31, r15
     b48:	41 82       	std	Z+1, r4	; 0x01
     b4a:	5e c1       	rjmp	.+700    	; 0xe08 <qtm_key_sensors_process+0x382>
     b4c:	d8 01       	movw	r26, r16
     b4e:	11 96       	adiw	r26, 0x01	; 1
     b50:	2c 91       	ld	r18, X
     b52:	11 97       	sbiw	r26, 0x01	; 1
     b54:	22 23       	and	r18, r18
     b56:	29 f1       	breq	.+74     	; 0xba2 <qtm_key_sensors_process+0x11c>
     b58:	12 96       	adiw	r26, 0x02	; 2
     b5a:	ed 91       	ld	r30, X+
     b5c:	fc 91       	ld	r31, X
     b5e:	13 97       	sbiw	r26, 0x03	; 3
     b60:	25 30       	cpi	r18, 0x05	; 5
     b62:	18 f0       	brcs	.+6      	; 0xb6a <qtm_key_sensors_process+0xe4>
     b64:	81 81       	ldd	r24, Z+1	; 0x01
     b66:	92 81       	ldd	r25, Z+2	; 0x02
     b68:	0e c0       	rjmp	.+28     	; 0xb86 <qtm_key_sensors_process+0x100>
     b6a:	d8 01       	movw	r26, r16
     b6c:	14 96       	adiw	r26, 0x04	; 4
     b6e:	8d 91       	ld	r24, X+
     b70:	9c 91       	ld	r25, X
     b72:	15 97       	sbiw	r26, 0x05	; 5
     b74:	41 81       	ldd	r20, Z+1	; 0x01
     b76:	52 81       	ldd	r21, Z+2	; 0x02
     b78:	84 17       	cp	r24, r20
     b7a:	95 07       	cpc	r25, r21
     b7c:	69 f0       	breq	.+26     	; 0xb98 <qtm_key_sensors_process+0x112>
     b7e:	48 17       	cp	r20, r24
     b80:	59 07       	cpc	r21, r25
     b82:	30 f4       	brcc	.+12     	; 0xb90 <qtm_key_sensors_process+0x10a>
     b84:	01 97       	sbiw	r24, 0x01	; 1
     b86:	15 96       	adiw	r26, 0x05	; 5
     b88:	9c 93       	st	X, r25
     b8a:	8e 93       	st	-X, r24
     b8c:	14 97       	sbiw	r26, 0x04	; 4
     b8e:	04 c0       	rjmp	.+8      	; 0xb98 <qtm_key_sensors_process+0x112>
     b90:	01 96       	adiw	r24, 0x01	; 1
     b92:	f8 01       	movw	r30, r16
     b94:	95 83       	std	Z+5, r25	; 0x05
     b96:	84 83       	std	Z+4, r24	; 0x04
     b98:	21 50       	subi	r18, 0x01	; 1
     b9a:	d8 01       	movw	r26, r16
     b9c:	11 96       	adiw	r26, 0x01	; 1
     b9e:	2c 93       	st	X, r18
     ba0:	33 c1       	rjmp	.+614    	; 0xe08 <qtm_key_sensors_process+0x382>
     ba2:	f8 01       	movw	r30, r16
     ba4:	2d c1       	rjmp	.+602    	; 0xe00 <qtm_key_sensors_process+0x37a>
     ba6:	d8 01       	movw	r26, r16
     ba8:	14 96       	adiw	r26, 0x04	; 4
     baa:	2d 91       	ld	r18, X+
     bac:	3c 91       	ld	r19, X
     bae:	15 97       	sbiw	r26, 0x05	; 5
     bb0:	12 96       	adiw	r26, 0x02	; 2
     bb2:	ed 91       	ld	r30, X+
     bb4:	fc 91       	ld	r31, X
     bb6:	13 97       	sbiw	r26, 0x03	; 3
     bb8:	41 81       	ldd	r20, Z+1	; 0x01
     bba:	52 81       	ldd	r21, Z+2	; 0x02
     bbc:	24 17       	cp	r18, r20
     bbe:	35 07       	cpc	r19, r21
     bc0:	09 f4       	brne	.+2      	; 0xbc4 <qtm_key_sensors_process+0x13e>
     bc2:	30 c1       	rjmp	.+608    	; 0xe24 <qtm_key_sensors_process+0x39e>
     bc4:	8e 81       	ldd	r24, Y+6	; 0x06
     bc6:	9f 81       	ldd	r25, Y+7	; 0x07
     bc8:	42 17       	cp	r20, r18
     bca:	53 07       	cpc	r21, r19
     bcc:	f8 f4       	brcc	.+62     	; 0xc0c <qtm_key_sensors_process+0x186>
     bce:	ea 81       	ldd	r30, Y+2	; 0x02
     bd0:	fb 81       	ldd	r31, Y+3	; 0x03
     bd2:	24 1b       	sub	r18, r20
     bd4:	35 0b       	sbc	r19, r21
     bd6:	dc 01       	movw	r26, r24
     bd8:	aa 0d       	add	r26, r10
     bda:	bb 1d       	adc	r27, r11
     bdc:	8c 91       	ld	r24, X
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	05 80       	ldd	r0, Z+5	; 0x05
     be2:	02 c0       	rjmp	.+4      	; 0xbe8 <qtm_key_sensors_process+0x162>
     be4:	95 95       	asr	r25
     be6:	87 95       	ror	r24
     be8:	0a 94       	dec	r0
     bea:	e2 f7       	brpl	.-8      	; 0xbe4 <qtm_key_sensors_process+0x15e>
     bec:	99 27       	eor	r25, r25
     bee:	28 17       	cp	r18, r24
     bf0:	39 07       	cpc	r19, r25
     bf2:	08 f4       	brcc	.+2      	; 0xbf6 <qtm_key_sensors_process+0x170>
     bf4:	17 c1       	rjmp	.+558    	; 0xe24 <qtm_key_sensors_process+0x39e>
     bf6:	84 81       	ldd	r24, Z+4	; 0x04
     bf8:	88 23       	and	r24, r24
     bfa:	09 f4       	brne	.+2      	; 0xbfe <qtm_key_sensors_process+0x178>
     bfc:	13 c1       	rjmp	.+550    	; 0xe24 <qtm_key_sensors_process+0x39e>
     bfe:	87 e0       	ldi	r24, 0x07	; 7
     c00:	f8 01       	movw	r30, r16
     c02:	80 83       	st	Z, r24
     c04:	ea 81       	ldd	r30, Y+2	; 0x02
     c06:	fb 81       	ldd	r31, Y+3	; 0x03
     c08:	24 81       	ldd	r18, Z+4	; 0x04
     c0a:	1a c0       	rjmp	.+52     	; 0xc40 <qtm_key_sensors_process+0x1ba>
     c0c:	fc 01       	movw	r30, r24
     c0e:	ea 0d       	add	r30, r10
     c10:	fb 1d       	adc	r31, r11
     c12:	42 1b       	sub	r20, r18
     c14:	53 0b       	sbc	r21, r19
     c16:	80 81       	ld	r24, Z
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	48 17       	cp	r20, r24
     c1c:	59 07       	cpc	r21, r25
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <qtm_key_sensors_process+0x19c>
     c20:	01 c1       	rjmp	.+514    	; 0xe24 <qtm_key_sensors_process+0x39e>
     c22:	82 81       	ldd	r24, Z+2	; 0x02
     c24:	88 23       	and	r24, r24
     c26:	31 f0       	breq	.+12     	; 0xc34 <qtm_key_sensors_process+0x1ae>
     c28:	b4 01       	movw	r22, r8
     c2a:	ce 01       	movw	r24, r28
     c2c:	0e 94 b0 04 	call	0x960	; 0x960 <check_for_aks_block>
     c30:	81 11       	cpse	r24, r1
     c32:	f8 c0       	rjmp	.+496    	; 0xe24 <qtm_key_sensors_process+0x39e>
     c34:	e4 e0       	ldi	r30, 0x04	; 4
     c36:	d8 01       	movw	r26, r16
     c38:	ec 93       	st	X, r30
     c3a:	ea 81       	ldd	r30, Y+2	; 0x02
     c3c:	fb 81       	ldd	r31, Y+3	; 0x03
     c3e:	22 81       	ldd	r18, Z+2	; 0x02
     c40:	8c 81       	ldd	r24, Y+4	; 0x04
     c42:	9d 81       	ldd	r25, Y+5	; 0x05
     c44:	fc 01       	movw	r30, r24
     c46:	ee 0d       	add	r30, r14
     c48:	ff 1d       	adc	r31, r15
     c4a:	21 83       	std	Z+1, r18	; 0x01
     c4c:	dd c0       	rjmp	.+442    	; 0xe08 <qtm_key_sensors_process+0x382>
     c4e:	d8 01       	movw	r26, r16
     c50:	14 96       	adiw	r26, 0x04	; 4
     c52:	2d 91       	ld	r18, X+
     c54:	3c 91       	ld	r19, X
     c56:	15 97       	sbiw	r26, 0x05	; 5
     c58:	12 96       	adiw	r26, 0x02	; 2
     c5a:	ed 91       	ld	r30, X+
     c5c:	fc 91       	ld	r31, X
     c5e:	13 97       	sbiw	r26, 0x03	; 3
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	92 81       	ldd	r25, Z+2	; 0x02
     c64:	82 17       	cp	r24, r18
     c66:	93 07       	cpc	r25, r19
     c68:	08 f4       	brcc	.+2      	; 0xc6c <qtm_key_sensors_process+0x1e6>
     c6a:	bb c0       	rjmp	.+374    	; 0xde2 <qtm_key_sensors_process+0x35c>
     c6c:	ee 81       	ldd	r30, Y+6	; 0x06
     c6e:	ff 81       	ldd	r31, Y+7	; 0x07
     c70:	ea 0d       	add	r30, r10
     c72:	fb 1d       	adc	r31, r11
     c74:	82 1b       	sub	r24, r18
     c76:	93 0b       	sbc	r25, r19
     c78:	20 81       	ld	r18, Z
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	28 17       	cp	r18, r24
     c7e:	39 07       	cpc	r19, r25
     c80:	08 f0       	brcs	.+2      	; 0xc84 <qtm_key_sensors_process+0x1fe>
     c82:	c5 c0       	rjmp	.+394    	; 0xe0e <qtm_key_sensors_process+0x388>
     c84:	82 81       	ldd	r24, Z+2	; 0x02
     c86:	88 23       	and	r24, r24
     c88:	31 f0       	breq	.+12     	; 0xc96 <qtm_key_sensors_process+0x210>
     c8a:	b4 01       	movw	r22, r8
     c8c:	ce 01       	movw	r24, r28
     c8e:	0e 94 b0 04 	call	0x960	; 0x960 <check_for_aks_block>
     c92:	81 11       	cpse	r24, r1
     c94:	c7 c0       	rjmp	.+398    	; 0xe24 <qtm_key_sensors_process+0x39e>
     c96:	f8 01       	movw	r30, r16
     c98:	81 81       	ldd	r24, Z+1	; 0x01
     c9a:	88 23       	and	r24, r24
     c9c:	09 f4       	brne	.+2      	; 0xca0 <qtm_key_sensors_process+0x21a>
     c9e:	6a c0       	rjmp	.+212    	; 0xd74 <qtm_key_sensors_process+0x2ee>
     ca0:	81 50       	subi	r24, 0x01	; 1
     ca2:	81 83       	std	Z+1, r24	; 0x01
     ca4:	b1 c0       	rjmp	.+354    	; 0xe08 <qtm_key_sensors_process+0x382>
     ca6:	e8 81       	ld	r30, Y
     ca8:	f9 81       	ldd	r31, Y+1	; 0x01
     caa:	aa 81       	ldd	r26, Y+2	; 0x02
     cac:	bb 81       	ldd	r27, Y+3	; 0x03
     cae:	18 96       	adiw	r26, 0x08	; 8
     cb0:	8c 91       	ld	r24, X
     cb2:	83 83       	std	Z+3, r24	; 0x03
     cb4:	ec 81       	ldd	r30, Y+4	; 0x04
     cb6:	fd 81       	ldd	r31, Y+5	; 0x05
     cb8:	ee 0d       	add	r30, r14
     cba:	ff 1d       	adc	r31, r15
     cbc:	44 81       	ldd	r20, Z+4	; 0x04
     cbe:	55 81       	ldd	r21, Z+5	; 0x05
     cc0:	a2 81       	ldd	r26, Z+2	; 0x02
     cc2:	b3 81       	ldd	r27, Z+3	; 0x03
     cc4:	11 96       	adiw	r26, 0x01	; 1
     cc6:	8d 91       	ld	r24, X+
     cc8:	9c 91       	ld	r25, X
     cca:	12 97       	sbiw	r26, 0x02	; 2
     ccc:	84 17       	cp	r24, r20
     cce:	95 07       	cpc	r25, r21
     cd0:	c0 f0       	brcs	.+48     	; 0xd02 <qtm_key_sensors_process+0x27c>
     cd2:	ae 81       	ldd	r26, Y+6	; 0x06
     cd4:	bf 81       	ldd	r27, Y+7	; 0x07
     cd6:	aa 0d       	add	r26, r10
     cd8:	bb 1d       	adc	r27, r11
     cda:	6c 91       	ld	r22, X
     cdc:	26 2f       	mov	r18, r22
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	11 96       	adiw	r26, 0x01	; 1
     ce2:	7c 91       	ld	r23, X
     ce4:	7f 5f       	subi	r23, 0xFF	; 255
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <qtm_key_sensors_process+0x266>
     ce8:	35 95       	asr	r19
     cea:	27 95       	ror	r18
     cec:	7a 95       	dec	r23
     cee:	e2 f7       	brpl	.-8      	; 0xce8 <qtm_key_sensors_process+0x262>
     cf0:	84 1b       	sub	r24, r20
     cf2:	95 0b       	sbc	r25, r21
     cf4:	62 1b       	sub	r22, r18
     cf6:	26 2f       	mov	r18, r22
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	28 17       	cp	r18, r24
     cfc:	39 07       	cpc	r19, r25
     cfe:	08 f4       	brcc	.+2      	; 0xd02 <qtm_key_sensors_process+0x27c>
     d00:	8f c0       	rjmp	.+286    	; 0xe20 <qtm_key_sensors_process+0x39a>
     d02:	70 82       	st	Z, r7
     d04:	ea 81       	ldd	r30, Y+2	; 0x02
     d06:	fb 81       	ldd	r31, Y+3	; 0x03
     d08:	22 81       	ldd	r18, Z+2	; 0x02
     d0a:	8c 81       	ldd	r24, Y+4	; 0x04
     d0c:	9d 81       	ldd	r25, Y+5	; 0x05
     d0e:	fc 01       	movw	r30, r24
     d10:	ee 0d       	add	r30, r14
     d12:	ff 1d       	adc	r31, r15
     d14:	21 83       	std	Z+1, r18	; 0x01
     d16:	42 c0       	rjmp	.+132    	; 0xd9c <qtm_key_sensors_process+0x316>
     d18:	d8 01       	movw	r26, r16
     d1a:	14 96       	adiw	r26, 0x04	; 4
     d1c:	6d 91       	ld	r22, X+
     d1e:	7c 91       	ld	r23, X
     d20:	15 97       	sbiw	r26, 0x05	; 5
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	ed 91       	ld	r30, X+
     d26:	fc 91       	ld	r31, X
     d28:	13 97       	sbiw	r26, 0x03	; 3
     d2a:	21 81       	ldd	r18, Z+1	; 0x01
     d2c:	32 81       	ldd	r19, Z+2	; 0x02
     d2e:	26 17       	cp	r18, r22
     d30:	37 07       	cpc	r19, r23
     d32:	58 f4       	brcc	.+22     	; 0xd4a <qtm_key_sensors_process+0x2c4>
     d34:	11 96       	adiw	r26, 0x01	; 1
     d36:	8c 91       	ld	r24, X
     d38:	11 97       	sbiw	r26, 0x01	; 1
     d3a:	81 11       	cpse	r24, r1
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <qtm_key_sensors_process+0x2bc>
     d3e:	cc 92       	st	X, r12
     d40:	6f c0       	rjmp	.+222    	; 0xe20 <qtm_key_sensors_process+0x39a>
     d42:	81 50       	subi	r24, 0x01	; 1
     d44:	f8 01       	movw	r30, r16
     d46:	81 83       	std	Z+1, r24	; 0x01
     d48:	6b c0       	rjmp	.+214    	; 0xe20 <qtm_key_sensors_process+0x39a>
     d4a:	ee 81       	ldd	r30, Y+6	; 0x06
     d4c:	ff 81       	ldd	r31, Y+7	; 0x07
     d4e:	ea 0d       	add	r30, r10
     d50:	fb 1d       	adc	r31, r11
     d52:	80 81       	ld	r24, Z
     d54:	48 2f       	mov	r20, r24
     d56:	50 e0       	ldi	r21, 0x00	; 0
     d58:	91 81       	ldd	r25, Z+1	; 0x01
     d5a:	9f 5f       	subi	r25, 0xFF	; 255
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <qtm_key_sensors_process+0x2dc>
     d5e:	55 95       	asr	r21
     d60:	47 95       	ror	r20
     d62:	9a 95       	dec	r25
     d64:	e2 f7       	brpl	.-8      	; 0xd5e <qtm_key_sensors_process+0x2d8>
     d66:	26 1b       	sub	r18, r22
     d68:	37 0b       	sbc	r19, r23
     d6a:	84 1b       	sub	r24, r20
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	82 17       	cp	r24, r18
     d70:	93 07       	cpc	r25, r19
     d72:	60 f4       	brcc	.+24     	; 0xd8c <qtm_key_sensors_process+0x306>
     d74:	d8 01       	movw	r26, r16
     d76:	6c 92       	st	X, r6
     d78:	ea 81       	ldd	r30, Y+2	; 0x02
     d7a:	fb 81       	ldd	r31, Y+3	; 0x03
     d7c:	23 81       	ldd	r18, Z+3	; 0x03
     d7e:	8c 81       	ldd	r24, Y+4	; 0x04
     d80:	9d 81       	ldd	r25, Y+5	; 0x05
     d82:	fc 01       	movw	r30, r24
     d84:	ee 0d       	add	r30, r14
     d86:	ff 1d       	adc	r31, r15
     d88:	21 83       	std	Z+1, r18	; 0x01
     d8a:	4a c0       	rjmp	.+148    	; 0xe20 <qtm_key_sensors_process+0x39a>
     d8c:	f8 01       	movw	r30, r16
     d8e:	81 81       	ldd	r24, Z+1	; 0x01
     d90:	81 11       	cpse	r24, r1
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <qtm_key_sensors_process+0x312>
     d94:	c0 82       	st	Z, r12
     d96:	44 c0       	rjmp	.+136    	; 0xe20 <qtm_key_sensors_process+0x39a>
     d98:	81 50       	subi	r24, 0x01	; 1
     d9a:	81 83       	std	Z+1, r24	; 0x01
     d9c:	22 24       	eor	r2, r2
     d9e:	23 94       	inc	r2
     da0:	33 c0       	rjmp	.+102    	; 0xe08 <qtm_key_sensors_process+0x382>
     da2:	f8 01       	movw	r30, r16
     da4:	24 81       	ldd	r18, Z+4	; 0x04
     da6:	35 81       	ldd	r19, Z+5	; 0x05
     da8:	02 80       	ldd	r0, Z+2	; 0x02
     daa:	f3 81       	ldd	r31, Z+3	; 0x03
     dac:	e0 2d       	mov	r30, r0
     dae:	81 81       	ldd	r24, Z+1	; 0x01
     db0:	92 81       	ldd	r25, Z+2	; 0x02
     db2:	82 17       	cp	r24, r18
     db4:	93 07       	cpc	r25, r19
     db6:	58 f5       	brcc	.+86     	; 0xe0e <qtm_key_sensors_process+0x388>
     db8:	28 1b       	sub	r18, r24
     dba:	39 0b       	sbc	r19, r25
     dbc:	ee 81       	ldd	r30, Y+6	; 0x06
     dbe:	ff 81       	ldd	r31, Y+7	; 0x07
     dc0:	ea 0d       	add	r30, r10
     dc2:	fb 1d       	adc	r31, r11
     dc4:	80 81       	ld	r24, Z
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	ea 81       	ldd	r30, Y+2	; 0x02
     dca:	fb 81       	ldd	r31, Y+3	; 0x03
     dcc:	05 80       	ldd	r0, Z+5	; 0x05
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <qtm_key_sensors_process+0x34e>
     dd0:	95 95       	asr	r25
     dd2:	87 95       	ror	r24
     dd4:	0a 94       	dec	r0
     dd6:	e2 f7       	brpl	.-8      	; 0xdd0 <qtm_key_sensors_process+0x34a>
     dd8:	99 27       	eor	r25, r25
     dda:	28 17       	cp	r18, r24
     ddc:	39 07       	cpc	r19, r25
     dde:	18 f4       	brcc	.+6      	; 0xde6 <qtm_key_sensors_process+0x360>
     de0:	d8 01       	movw	r26, r16
     de2:	cc 92       	st	X, r12
     de4:	16 c0       	rjmp	.+44     	; 0xe12 <qtm_key_sensors_process+0x38c>
     de6:	f8 01       	movw	r30, r16
     de8:	81 81       	ldd	r24, Z+1	; 0x01
     dea:	81 11       	cpse	r24, r1
     dec:	0b c0       	rjmp	.+22     	; 0xe04 <qtm_key_sensors_process+0x37e>
     dee:	50 82       	st	Z, r5
     df0:	8c 81       	ldd	r24, Y+4	; 0x04
     df2:	9d 81       	ldd	r25, Y+5	; 0x05
     df4:	fc 01       	movw	r30, r24
     df6:	ee 0d       	add	r30, r14
     df8:	ff 1d       	adc	r31, r15
     dfa:	02 80       	ldd	r0, Z+2	; 0x02
     dfc:	f3 81       	ldd	r31, Z+3	; 0x03
     dfe:	e0 2d       	mov	r30, r0
     e00:	c0 82       	st	Z, r12
     e02:	10 c0       	rjmp	.+32     	; 0xe24 <qtm_key_sensors_process+0x39e>
     e04:	81 50       	subi	r24, 0x01	; 1
     e06:	81 83       	std	Z+1, r24	; 0x01
     e08:	dd 24       	eor	r13, r13
     e0a:	d3 94       	inc	r13
     e0c:	0b c0       	rjmp	.+22     	; 0xe24 <qtm_key_sensors_process+0x39e>
     e0e:	f8 01       	movw	r30, r16
     e10:	c0 82       	st	Z, r12
     e12:	8c 81       	ldd	r24, Y+4	; 0x04
     e14:	9d 81       	ldd	r25, Y+5	; 0x05
     e16:	fc 01       	movw	r30, r24
     e18:	ee 0d       	add	r30, r14
     e1a:	ff 1d       	adc	r31, r15
     e1c:	11 82       	std	Z+1, r1	; 0x01
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <qtm_key_sensors_process+0x39e>
     e20:	22 24       	eor	r2, r2
     e22:	23 94       	inc	r2
     e24:	ff ef       	ldi	r31, 0xFF	; 255
     e26:	8f 1a       	sub	r8, r31
     e28:	9f 0a       	sbc	r9, r31
     e2a:	83 e0       	ldi	r24, 0x03	; 3
     e2c:	a8 0e       	add	r10, r24
     e2e:	b1 1c       	adc	r11, r1
     e30:	52 ce       	rjmp	.-860    	; 0xad6 <qtm_key_sensors_process+0x50>
     e32:	e8 81       	ld	r30, Y
     e34:	f9 81       	ldd	r31, Y+1	; 0x01
     e36:	80 81       	ld	r24, Z
     e38:	87 ff       	sbrs	r24, 7
     e3a:	23 c0       	rjmp	.+70     	; 0xe82 <qtm_key_sensors_process+0x3fc>
     e3c:	40 e0       	ldi	r20, 0x00	; 0
     e3e:	50 e0       	ldi	r21, 0x00	; 0
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	ea 81       	ldd	r30, Y+2	; 0x02
     e46:	fb 81       	ldd	r31, Y+3	; 0x03
     e48:	80 81       	ld	r24, Z
     e4a:	91 81       	ldd	r25, Z+1	; 0x01
     e4c:	28 17       	cp	r18, r24
     e4e:	39 07       	cpc	r19, r25
     e50:	98 f4       	brcc	.+38     	; 0xe78 <qtm_key_sensors_process+0x3f2>
     e52:	ec 81       	ldd	r30, Y+4	; 0x04
     e54:	fd 81       	ldd	r31, Y+5	; 0x05
     e56:	e4 0f       	add	r30, r20
     e58:	f5 1f       	adc	r31, r21
     e5a:	a2 81       	ldd	r26, Z+2	; 0x02
     e5c:	b3 81       	ldd	r27, Z+3	; 0x03
     e5e:	8c 91       	ld	r24, X
     e60:	80 fd       	sbrc	r24, 0
     e62:	05 c0       	rjmp	.+10     	; 0xe6e <qtm_key_sensors_process+0x3e8>
     e64:	90 81       	ld	r25, Z
     e66:	97 7f       	andi	r25, 0xF7	; 247
     e68:	11 f0       	breq	.+4      	; 0xe6e <qtm_key_sensors_process+0x3e8>
     e6a:	81 60       	ori	r24, 0x01	; 1
     e6c:	8c 93       	st	X, r24
     e6e:	2f 5f       	subi	r18, 0xFF	; 255
     e70:	3f 4f       	sbci	r19, 0xFF	; 255
     e72:	4a 5f       	subi	r20, 0xFA	; 250
     e74:	5f 4f       	sbci	r21, 0xFF	; 255
     e76:	e6 cf       	rjmp	.-52     	; 0xe44 <qtm_key_sensors_process+0x3be>
     e78:	e8 81       	ld	r30, Y
     e7a:	f9 81       	ldd	r31, Y+1	; 0x01
     e7c:	80 81       	ld	r24, Z
     e7e:	8f 77       	andi	r24, 0x7F	; 127
     e80:	80 83       	st	Z, r24
     e82:	d1 10       	cpse	r13, r1
     e84:	07 c0       	rjmp	.+14     	; 0xe94 <qtm_key_sensors_process+0x40e>
     e86:	e8 81       	ld	r30, Y
     e88:	f9 81       	ldd	r31, Y+1	; 0x01
     e8a:	21 10       	cpse	r2, r1
     e8c:	6f c0       	rjmp	.+222    	; 0xf6c <qtm_key_sensors_process+0x4e6>
     e8e:	80 81       	ld	r24, Z
     e90:	8e 7f       	andi	r24, 0xFE	; 254
     e92:	6e c0       	rjmp	.+220    	; 0xf70 <qtm_key_sensors_process+0x4ea>
     e94:	ea 81       	ldd	r30, Y+2	; 0x02
     e96:	fb 81       	ldd	r31, Y+3	; 0x03
     e98:	81 85       	ldd	r24, Z+9	; 0x09
     e9a:	88 23       	and	r24, r24
     e9c:	a1 f3       	breq	.-24     	; 0xe86 <qtm_key_sensors_process+0x400>
     e9e:	e8 81       	ld	r30, Y
     ea0:	f9 81       	ldd	r31, Y+1	; 0x01
     ea2:	80 81       	ld	r24, Z
     ea4:	80 68       	ori	r24, 0x80	; 128
     ea6:	80 83       	st	Z, r24
     ea8:	ea 81       	ldd	r30, Y+2	; 0x02
     eaa:	fb 81       	ldd	r31, Y+3	; 0x03
     eac:	81 85       	ldd	r24, Z+9	; 0x09
     eae:	81 30       	cpi	r24, 0x01	; 1
     eb0:	51 f7       	brne	.-44     	; 0xe86 <qtm_key_sensors_process+0x400>
     eb2:	40 e0       	ldi	r20, 0x00	; 0
     eb4:	50 e0       	ldi	r21, 0x00	; 0
     eb6:	20 e0       	ldi	r18, 0x00	; 0
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	96 e0       	ldi	r25, 0x06	; 6
     ebc:	d9 2e       	mov	r13, r25
     ebe:	ea 81       	ldd	r30, Y+2	; 0x02
     ec0:	fb 81       	ldd	r31, Y+3	; 0x03
     ec2:	60 81       	ld	r22, Z
     ec4:	71 81       	ldd	r23, Z+1	; 0x01
     ec6:	26 17       	cp	r18, r22
     ec8:	37 07       	cpc	r19, r23
     eca:	e8 f6       	brcc	.-70     	; 0xe86 <qtm_key_sensors_process+0x400>
     ecc:	0c 81       	ldd	r16, Y+4	; 0x04
     ece:	1d 81       	ldd	r17, Y+5	; 0x05
     ed0:	fa 01       	movw	r30, r20
     ed2:	ee 0f       	add	r30, r30
     ed4:	ff 1f       	adc	r31, r31
     ed6:	e0 0f       	add	r30, r16
     ed8:	f1 1f       	adc	r31, r17
     eda:	80 81       	ld	r24, Z
     edc:	98 2f       	mov	r25, r24
     ede:	97 7f       	andi	r25, 0xF7	; 247
     ee0:	a1 f1       	breq	.+104    	; 0xf4a <qtm_key_sensors_process+0x4c4>
     ee2:	85 38       	cpi	r24, 0x85	; 133
     ee4:	11 f0       	breq	.+4      	; 0xeea <qtm_key_sensors_process+0x464>
     ee6:	83 30       	cpi	r24, 0x03	; 3
     ee8:	b1 f5       	brne	.+108    	; 0xf56 <qtm_key_sensors_process+0x4d0>
     eea:	ee 80       	ldd	r14, Y+6	; 0x06
     eec:	ff 80       	ldd	r15, Y+7	; 0x07
     eee:	d7 01       	movw	r26, r14
     ef0:	a4 0f       	add	r26, r20
     ef2:	b5 1f       	adc	r27, r21
     ef4:	12 96       	adiw	r26, 0x02	; 2
     ef6:	bc 90       	ld	r11, X
     ef8:	bb 20       	and	r11, r11
     efa:	39 f1       	breq	.+78     	; 0xf4a <qtm_key_sensors_process+0x4c4>
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	c1 2c       	mov	r12, r1
     f02:	86 17       	cp	r24, r22
     f04:	97 07       	cpc	r25, r23
     f06:	f8 f4       	brcc	.+62     	; 0xf46 <qtm_key_sensors_process+0x4c0>
     f08:	28 17       	cp	r18, r24
     f0a:	39 07       	cpc	r19, r25
     f0c:	d1 f0       	breq	.+52     	; 0xf42 <qtm_key_sensors_process+0x4bc>
     f0e:	d8 9e       	mul	r13, r24
     f10:	d0 01       	movw	r26, r0
     f12:	d9 9e       	mul	r13, r25
     f14:	b0 0d       	add	r27, r0
     f16:	11 24       	eor	r1, r1
     f18:	a0 0f       	add	r26, r16
     f1a:	b1 1f       	adc	r27, r17
     f1c:	ac 91       	ld	r26, X
     f1e:	a4 30       	cpi	r26, 0x04	; 4
     f20:	11 f0       	breq	.+4      	; 0xf26 <qtm_key_sensors_process+0x4a0>
     f22:	a6 38       	cpi	r26, 0x86	; 134
     f24:	71 f4       	brne	.+28     	; 0xf42 <qtm_key_sensors_process+0x4bc>
     f26:	dc 01       	movw	r26, r24
     f28:	aa 0f       	add	r26, r26
     f2a:	bb 1f       	adc	r27, r27
     f2c:	a8 0f       	add	r26, r24
     f2e:	b9 1f       	adc	r27, r25
     f30:	ae 0d       	add	r26, r14
     f32:	bf 1d       	adc	r27, r15
     f34:	12 96       	adiw	r26, 0x02	; 2
     f36:	ac 91       	ld	r26, X
     f38:	ba 12       	cpse	r11, r26
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <qtm_key_sensors_process+0x4bc>
     f3c:	cb 01       	movw	r24, r22
     f3e:	cc 24       	eor	r12, r12
     f40:	c3 94       	inc	r12
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	de cf       	rjmp	.-68     	; 0xf02 <qtm_key_sensors_process+0x47c>
     f46:	c1 10       	cpse	r12, r1
     f48:	06 c0       	rjmp	.+12     	; 0xf56 <qtm_key_sensors_process+0x4d0>
     f4a:	02 80       	ldd	r0, Z+2	; 0x02
     f4c:	f3 81       	ldd	r31, Z+3	; 0x03
     f4e:	e0 2d       	mov	r30, r0
     f50:	80 81       	ld	r24, Z
     f52:	8e 7f       	andi	r24, 0xFE	; 254
     f54:	05 c0       	rjmp	.+10     	; 0xf60 <qtm_key_sensors_process+0x4da>
     f56:	02 80       	ldd	r0, Z+2	; 0x02
     f58:	f3 81       	ldd	r31, Z+3	; 0x03
     f5a:	e0 2d       	mov	r30, r0
     f5c:	80 81       	ld	r24, Z
     f5e:	81 60       	ori	r24, 0x01	; 1
     f60:	80 83       	st	Z, r24
     f62:	2f 5f       	subi	r18, 0xFF	; 255
     f64:	3f 4f       	sbci	r19, 0xFF	; 255
     f66:	4d 5f       	subi	r20, 0xFD	; 253
     f68:	5f 4f       	sbci	r21, 0xFF	; 255
     f6a:	a9 cf       	rjmp	.-174    	; 0xebe <qtm_key_sensors_process+0x438>
     f6c:	80 81       	ld	r24, Z
     f6e:	81 60       	ori	r24, 0x01	; 1
     f70:	80 83       	st	Z, r24
     f72:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <qtm_local_ms_timecount>
     f76:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <qtm_local_ms_timecount+0x1>
     f7a:	e8 81       	ld	r30, Y
     f7c:	f9 81       	ldd	r31, Y+1	; 0x01
     f7e:	21 81       	ldd	r18, Z+1	; 0x01
     f80:	32 81       	ldd	r19, Z+2	; 0x02
     f82:	a9 01       	movw	r20, r18
     f84:	48 53       	subi	r20, 0x38	; 56
     f86:	5f 4f       	sbci	r21, 0xFF	; 255
     f88:	48 17       	cp	r20, r24
     f8a:	59 07       	cpc	r21, r25
     f8c:	38 f4       	brcc	.+14     	; 0xf9c <qtm_key_sensors_process+0x516>
     f8e:	82 1b       	sub	r24, r18
     f90:	93 0b       	sbc	r25, r19
     f92:	aa 24       	eor	r10, r10
     f94:	a3 94       	inc	r10
     f96:	a3 e0       	ldi	r26, 0x03	; 3
     f98:	ba 2e       	mov	r11, r26
     f9a:	44 c0       	rjmp	.+136    	; 0x1024 <qtm_key_sensors_process+0x59e>
     f9c:	82 17       	cp	r24, r18
     f9e:	93 07       	cpc	r25, r19
     fa0:	10 f0       	brcs	.+4      	; 0xfa6 <qtm_key_sensors_process+0x520>
     fa2:	80 e0       	ldi	r24, 0x00	; 0
     fa4:	04 c1       	rjmp	.+520    	; 0x11ae <qtm_key_sensors_process+0x728>
     fa6:	82 1b       	sub	r24, r18
     fa8:	93 0b       	sbc	r25, r19
     faa:	01 97       	sbiw	r24, 0x01	; 1
     fac:	89 3c       	cpi	r24, 0xC9	; 201
     fae:	91 05       	cpc	r25, r1
     fb0:	c0 f3       	brcs	.-16     	; 0xfa2 <qtm_key_sensors_process+0x51c>
     fb2:	ef cf       	rjmp	.-34     	; 0xf92 <qtm_key_sensors_process+0x50c>
     fb4:	88 5c       	subi	r24, 0xC8	; 200
     fb6:	91 09       	sbc	r25, r1
     fb8:	e8 81       	ld	r30, Y
     fba:	f9 81       	ldd	r31, Y+1	; 0x01
     fbc:	21 81       	ldd	r18, Z+1	; 0x01
     fbe:	32 81       	ldd	r19, Z+2	; 0x02
     fc0:	28 53       	subi	r18, 0x38	; 56
     fc2:	3f 4f       	sbci	r19, 0xFF	; 255
     fc4:	32 83       	std	Z+2, r19	; 0x02
     fc6:	21 83       	std	Z+1, r18	; 0x01
     fc8:	23 81       	ldd	r18, Z+3	; 0x03
     fca:	21 11       	cpse	r18, r1
     fcc:	96 c0       	rjmp	.+300    	; 0x10fa <qtm_key_sensors_process+0x674>
     fce:	24 81       	ldd	r18, Z+4	; 0x04
     fd0:	22 23       	and	r18, r18
     fd2:	11 f0       	breq	.+4      	; 0xfd8 <qtm_key_sensors_process+0x552>
     fd4:	21 50       	subi	r18, 0x01	; 1
     fd6:	24 83       	std	Z+4, r18	; 0x04
     fd8:	e8 81       	ld	r30, Y
     fda:	f9 81       	ldd	r31, Y+1	; 0x01
     fdc:	25 81       	ldd	r18, Z+5	; 0x05
     fde:	22 23       	and	r18, r18
     fe0:	11 f0       	breq	.+4      	; 0xfe6 <qtm_key_sensors_process+0x560>
     fe2:	21 50       	subi	r18, 0x01	; 1
     fe4:	25 83       	std	Z+5, r18	; 0x05
     fe6:	8a 80       	ldd	r8, Y+2	; 0x02
     fe8:	9b 80       	ldd	r9, Y+3	; 0x03
     fea:	d4 01       	movw	r26, r8
     fec:	16 96       	adiw	r26, 0x06	; 6
     fee:	2c 91       	ld	r18, X
     ff0:	16 97       	sbiw	r26, 0x06	; 6
     ff2:	21 11       	cpse	r18, r1
     ff4:	1b c0       	rjmp	.+54     	; 0x102c <qtm_key_sensors_process+0x5a6>
     ff6:	8a 80       	ldd	r8, Y+2	; 0x02
     ff8:	9b 80       	ldd	r9, Y+3	; 0x03
     ffa:	f4 01       	movw	r30, r8
     ffc:	27 81       	ldd	r18, Z+7	; 0x07
     ffe:	21 11       	cpse	r18, r1
    1000:	48 c0       	rjmp	.+144    	; 0x1092 <qtm_key_sensors_process+0x60c>
    1002:	ea 81       	ldd	r30, Y+2	; 0x02
    1004:	fb 81       	ldd	r31, Y+3	; 0x03
    1006:	23 81       	ldd	r18, Z+3	; 0x03
    1008:	22 23       	and	r18, r18
    100a:	61 f0       	breq	.+24     	; 0x1024 <qtm_key_sensors_process+0x59e>
    100c:	20 e0       	ldi	r18, 0x00	; 0
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	a0 e0       	ldi	r26, 0x00	; 0
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	ea 81       	ldd	r30, Y+2	; 0x02
    1016:	fb 81       	ldd	r31, Y+3	; 0x03
    1018:	40 81       	ld	r20, Z
    101a:	51 81       	ldd	r21, Z+1	; 0x01
    101c:	a4 17       	cp	r26, r20
    101e:	b5 07       	cpc	r27, r21
    1020:	08 f4       	brcc	.+2      	; 0x1024 <qtm_key_sensors_process+0x59e>
    1022:	6e c0       	rjmp	.+220    	; 0x1100 <qtm_key_sensors_process+0x67a>
    1024:	89 3c       	cpi	r24, 0xC9	; 201
    1026:	91 05       	cpc	r25, r1
    1028:	28 f6       	brcc	.-118    	; 0xfb4 <qtm_key_sensors_process+0x52e>
    102a:	bb cf       	rjmp	.-138    	; 0xfa2 <qtm_key_sensors_process+0x51c>
    102c:	08 81       	ld	r16, Y
    102e:	19 81       	ldd	r17, Y+1	; 0x01
    1030:	f8 01       	movw	r30, r16
    1032:	24 81       	ldd	r18, Z+4	; 0x04
    1034:	21 11       	cpse	r18, r1
    1036:	df cf       	rjmp	.-66     	; 0xff6 <qtm_key_sensors_process+0x570>
    1038:	ed 90       	ld	r14, X+
    103a:	fc 90       	ld	r15, X
    103c:	60 e0       	ldi	r22, 0x00	; 0
    103e:	70 e0       	ldi	r23, 0x00	; 0
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	50 e0       	ldi	r21, 0x00	; 0
    1044:	4e 15       	cp	r20, r14
    1046:	5f 05       	cpc	r21, r15
    1048:	f1 f0       	breq	.+60     	; 0x1086 <qtm_key_sensors_process+0x600>
    104a:	ec 81       	ldd	r30, Y+4	; 0x04
    104c:	fd 81       	ldd	r31, Y+5	; 0x05
    104e:	e6 0f       	add	r30, r22
    1050:	f7 1f       	adc	r31, r23
    1052:	20 81       	ld	r18, Z
    1054:	23 30       	cpi	r18, 0x03	; 3
    1056:	11 f0       	breq	.+4      	; 0x105c <qtm_key_sensors_process+0x5d6>
    1058:	28 30       	cpi	r18, 0x08	; 8
    105a:	81 f4       	brne	.+32     	; 0x107c <qtm_key_sensors_process+0x5f6>
    105c:	24 81       	ldd	r18, Z+4	; 0x04
    105e:	35 81       	ldd	r19, Z+5	; 0x05
    1060:	c2 80       	ldd	r12, Z+2	; 0x02
    1062:	d3 80       	ldd	r13, Z+3	; 0x03
    1064:	d6 01       	movw	r26, r12
    1066:	11 96       	adiw	r26, 0x01	; 1
    1068:	cd 90       	ld	r12, X+
    106a:	dc 90       	ld	r13, X
    106c:	12 97       	sbiw	r26, 0x02	; 2
    106e:	2c 15       	cp	r18, r12
    1070:	3d 05       	cpc	r19, r13
    1072:	20 f4       	brcc	.+8      	; 0x107c <qtm_key_sensors_process+0x5f6>
    1074:	2f 5f       	subi	r18, 0xFF	; 255
    1076:	3f 4f       	sbci	r19, 0xFF	; 255
    1078:	35 83       	std	Z+5, r19	; 0x05
    107a:	24 83       	std	Z+4, r18	; 0x04
    107c:	4f 5f       	subi	r20, 0xFF	; 255
    107e:	5f 4f       	sbci	r21, 0xFF	; 255
    1080:	6a 5f       	subi	r22, 0xFA	; 250
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	df cf       	rjmp	.-66     	; 0x1044 <qtm_key_sensors_process+0x5be>
    1086:	f4 01       	movw	r30, r8
    1088:	26 81       	ldd	r18, Z+6	; 0x06
    108a:	d8 01       	movw	r26, r16
    108c:	14 96       	adiw	r26, 0x04	; 4
    108e:	2c 93       	st	X, r18
    1090:	b2 cf       	rjmp	.-156    	; 0xff6 <qtm_key_sensors_process+0x570>
    1092:	08 81       	ld	r16, Y
    1094:	19 81       	ldd	r17, Y+1	; 0x01
    1096:	d8 01       	movw	r26, r16
    1098:	15 96       	adiw	r26, 0x05	; 5
    109a:	2c 91       	ld	r18, X
    109c:	21 11       	cpse	r18, r1
    109e:	b1 cf       	rjmp	.-158    	; 0x1002 <qtm_key_sensors_process+0x57c>
    10a0:	e0 80       	ld	r14, Z
    10a2:	f1 80       	ldd	r15, Z+1	; 0x01
    10a4:	60 e0       	ldi	r22, 0x00	; 0
    10a6:	70 e0       	ldi	r23, 0x00	; 0
    10a8:	40 e0       	ldi	r20, 0x00	; 0
    10aa:	50 e0       	ldi	r21, 0x00	; 0
    10ac:	4e 15       	cp	r20, r14
    10ae:	5f 05       	cpc	r21, r15
    10b0:	f1 f0       	breq	.+60     	; 0x10ee <qtm_key_sensors_process+0x668>
    10b2:	ec 81       	ldd	r30, Y+4	; 0x04
    10b4:	fd 81       	ldd	r31, Y+5	; 0x05
    10b6:	e6 0f       	add	r30, r22
    10b8:	f7 1f       	adc	r31, r23
    10ba:	20 81       	ld	r18, Z
    10bc:	23 30       	cpi	r18, 0x03	; 3
    10be:	11 f0       	breq	.+4      	; 0x10c4 <qtm_key_sensors_process+0x63e>
    10c0:	28 30       	cpi	r18, 0x08	; 8
    10c2:	81 f4       	brne	.+32     	; 0x10e4 <qtm_key_sensors_process+0x65e>
    10c4:	24 81       	ldd	r18, Z+4	; 0x04
    10c6:	35 81       	ldd	r19, Z+5	; 0x05
    10c8:	c2 80       	ldd	r12, Z+2	; 0x02
    10ca:	d3 80       	ldd	r13, Z+3	; 0x03
    10cc:	d6 01       	movw	r26, r12
    10ce:	11 96       	adiw	r26, 0x01	; 1
    10d0:	cd 90       	ld	r12, X+
    10d2:	dc 90       	ld	r13, X
    10d4:	12 97       	sbiw	r26, 0x02	; 2
    10d6:	c2 16       	cp	r12, r18
    10d8:	d3 06       	cpc	r13, r19
    10da:	20 f4       	brcc	.+8      	; 0x10e4 <qtm_key_sensors_process+0x65e>
    10dc:	21 50       	subi	r18, 0x01	; 1
    10de:	31 09       	sbc	r19, r1
    10e0:	35 83       	std	Z+5, r19	; 0x05
    10e2:	24 83       	std	Z+4, r18	; 0x04
    10e4:	4f 5f       	subi	r20, 0xFF	; 255
    10e6:	5f 4f       	sbci	r21, 0xFF	; 255
    10e8:	6a 5f       	subi	r22, 0xFA	; 250
    10ea:	7f 4f       	sbci	r23, 0xFF	; 255
    10ec:	df cf       	rjmp	.-66     	; 0x10ac <qtm_key_sensors_process+0x626>
    10ee:	f4 01       	movw	r30, r8
    10f0:	27 81       	ldd	r18, Z+7	; 0x07
    10f2:	d8 01       	movw	r26, r16
    10f4:	15 96       	adiw	r26, 0x05	; 5
    10f6:	2c 93       	st	X, r18
    10f8:	84 cf       	rjmp	.-248    	; 0x1002 <qtm_key_sensors_process+0x57c>
    10fa:	21 50       	subi	r18, 0x01	; 1
    10fc:	23 83       	std	Z+3, r18	; 0x03
    10fe:	81 cf       	rjmp	.-254    	; 0x1002 <qtm_key_sensors_process+0x57c>
    1100:	a9 01       	movw	r20, r18
    1102:	44 0f       	add	r20, r20
    1104:	55 1f       	adc	r21, r21
    1106:	ec 81       	ldd	r30, Y+4	; 0x04
    1108:	fd 81       	ldd	r31, Y+5	; 0x05
    110a:	e4 0f       	add	r30, r20
    110c:	f5 1f       	adc	r31, r21
    110e:	60 81       	ld	r22, Z
    1110:	65 38       	cpi	r22, 0x85	; 133
    1112:	09 f0       	breq	.+2      	; 0x1116 <qtm_key_sensors_process+0x690>
    1114:	47 c0       	rjmp	.+142    	; 0x11a4 <qtm_key_sensors_process+0x71e>
    1116:	61 81       	ldd	r22, Z+1	; 0x01
    1118:	66 23       	and	r22, r22
    111a:	19 f0       	breq	.+6      	; 0x1122 <qtm_key_sensors_process+0x69c>
    111c:	61 50       	subi	r22, 0x01	; 1
    111e:	61 83       	std	Z+1, r22	; 0x01
    1120:	41 c0       	rjmp	.+130    	; 0x11a4 <qtm_key_sensors_process+0x71e>
    1122:	a0 82       	st	Z, r10
    1124:	6c 81       	ldd	r22, Y+4	; 0x04
    1126:	7d 81       	ldd	r23, Y+5	; 0x05
    1128:	fb 01       	movw	r30, r22
    112a:	e4 0f       	add	r30, r20
    112c:	f5 1f       	adc	r31, r21
    112e:	02 80       	ldd	r0, Z+2	; 0x02
    1130:	f3 81       	ldd	r31, Z+3	; 0x03
    1132:	e0 2d       	mov	r30, r0
    1134:	b0 82       	st	Z, r11
    1136:	ee 81       	ldd	r30, Y+6	; 0x06
    1138:	ff 81       	ldd	r31, Y+7	; 0x07
    113a:	e2 0f       	add	r30, r18
    113c:	f3 1f       	adc	r31, r19
    113e:	d2 80       	ldd	r13, Z+2	; 0x02
    1140:	dd 20       	and	r13, r13
    1142:	81 f1       	breq	.+96     	; 0x11a4 <qtm_key_sensors_process+0x71e>
    1144:	40 e0       	ldi	r20, 0x00	; 0
    1146:	50 e0       	ldi	r21, 0x00	; 0
    1148:	00 e0       	ldi	r16, 0x00	; 0
    114a:	10 e0       	ldi	r17, 0x00	; 0
    114c:	ea 81       	ldd	r30, Y+2	; 0x02
    114e:	fb 81       	ldd	r31, Y+3	; 0x03
    1150:	60 81       	ld	r22, Z
    1152:	71 81       	ldd	r23, Z+1	; 0x01
    1154:	06 17       	cp	r16, r22
    1156:	17 07       	cpc	r17, r23
    1158:	28 f5       	brcc	.+74     	; 0x11a4 <qtm_key_sensors_process+0x71e>
    115a:	ee 81       	ldd	r30, Y+6	; 0x06
    115c:	ff 81       	ldd	r31, Y+7	; 0x07
    115e:	e4 0f       	add	r30, r20
    1160:	f5 1f       	adc	r31, r21
    1162:	62 81       	ldd	r22, Z+2	; 0x02
    1164:	d6 12       	cpse	r13, r22
    1166:	19 c0       	rjmp	.+50     	; 0x119a <qtm_key_sensors_process+0x714>
    1168:	ba 01       	movw	r22, r20
    116a:	66 0f       	add	r22, r22
    116c:	77 1f       	adc	r23, r23
    116e:	ec 81       	ldd	r30, Y+4	; 0x04
    1170:	fd 81       	ldd	r31, Y+5	; 0x05
    1172:	4f 01       	movw	r8, r30
    1174:	86 0e       	add	r8, r22
    1176:	97 1e       	adc	r9, r23
    1178:	f4 01       	movw	r30, r8
    117a:	e2 80       	ldd	r14, Z+2	; 0x02
    117c:	f3 80       	ldd	r15, Z+3	; 0x03
    117e:	f7 01       	movw	r30, r14
    1180:	f0 80       	ld	r15, Z
    1182:	f0 fe       	sbrs	r15, 0
    1184:	0a c0       	rjmp	.+20     	; 0x119a <qtm_key_sensors_process+0x714>
    1186:	f4 01       	movw	r30, r8
    1188:	a0 82       	st	Z, r10
    118a:	ec 81       	ldd	r30, Y+4	; 0x04
    118c:	fd 81       	ldd	r31, Y+5	; 0x05
    118e:	e6 0f       	add	r30, r22
    1190:	f7 1f       	adc	r31, r23
    1192:	02 80       	ldd	r0, Z+2	; 0x02
    1194:	f3 81       	ldd	r31, Z+3	; 0x03
    1196:	e0 2d       	mov	r30, r0
    1198:	b0 82       	st	Z, r11
    119a:	0f 5f       	subi	r16, 0xFF	; 255
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
    119e:	4d 5f       	subi	r20, 0xFD	; 253
    11a0:	5f 4f       	sbci	r21, 0xFF	; 255
    11a2:	d4 cf       	rjmp	.-88     	; 0x114c <qtm_key_sensors_process+0x6c6>
    11a4:	11 96       	adiw	r26, 0x01	; 1
    11a6:	2d 5f       	subi	r18, 0xFD	; 253
    11a8:	3f 4f       	sbci	r19, 0xFF	; 255
    11aa:	34 cf       	rjmp	.-408    	; 0x1014 <qtm_key_sensors_process+0x58e>
    11ac:	8b e0       	ldi	r24, 0x0B	; 11
    11ae:	df 91       	pop	r29
    11b0:	cf 91       	pop	r28
    11b2:	1f 91       	pop	r17
    11b4:	0f 91       	pop	r16
    11b6:	ff 90       	pop	r15
    11b8:	ef 90       	pop	r14
    11ba:	df 90       	pop	r13
    11bc:	cf 90       	pop	r12
    11be:	bf 90       	pop	r11
    11c0:	af 90       	pop	r10
    11c2:	9f 90       	pop	r9
    11c4:	8f 90       	pop	r8
    11c6:	7f 90       	pop	r7
    11c8:	6f 90       	pop	r6
    11ca:	5f 90       	pop	r5
    11cc:	4f 90       	pop	r4
    11ce:	3f 90       	pop	r3
    11d0:	2f 90       	pop	r2
    11d2:	08 95       	ret

000011d4 <select_next_channel_to_measure>:
    11d4:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <current_measure_channel>
    11d8:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <current_measure_channel+0x1>
    11dc:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    11e0:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    11e4:	ed 91       	ld	r30, X+
    11e6:	fc 91       	ld	r31, X
    11e8:	11 97       	sbiw	r26, 0x01	; 1
    11ea:	40 81       	ld	r20, Z
    11ec:	51 81       	ldd	r21, Z+1	; 0x01
    11ee:	25 e0       	ldi	r18, 0x05	; 5
    11f0:	28 9f       	mul	r18, r24
    11f2:	b0 01       	movw	r22, r0
    11f4:	29 9f       	mul	r18, r25
    11f6:	70 0d       	add	r23, r0
    11f8:	11 24       	eor	r1, r1
    11fa:	20 e0       	ldi	r18, 0x00	; 0
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	84 17       	cp	r24, r20
    1200:	95 07       	cpc	r25, r21
    1202:	a8 f4       	brcc	.+42     	; 0x122e <select_next_channel_to_measure+0x5a>
    1204:	14 96       	adiw	r26, 0x04	; 4
    1206:	ed 91       	ld	r30, X+
    1208:	fc 91       	ld	r31, X
    120a:	15 97       	sbiw	r26, 0x05	; 5
    120c:	e2 0f       	add	r30, r18
    120e:	f3 1f       	adc	r31, r19
    1210:	e6 0f       	add	r30, r22
    1212:	f7 1f       	adc	r31, r23
    1214:	e0 81       	ld	r30, Z
    1216:	2b 5f       	subi	r18, 0xFB	; 251
    1218:	3f 4f       	sbci	r19, 0xFF	; 255
    121a:	e0 fd       	sbrc	r30, 0
    121c:	02 c0       	rjmp	.+4      	; 0x1222 <select_next_channel_to_measure+0x4e>
    121e:	01 96       	adiw	r24, 0x01	; 1
    1220:	ee cf       	rjmp	.-36     	; 0x11fe <select_next_channel_to_measure+0x2a>
    1222:	90 93 b6 01 	sts	0x01B6, r25	; 0x8001b6 <current_measure_channel+0x1>
    1226:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <current_measure_channel>
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	08 95       	ret
    122e:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <current_measure_channel+0x1>
    1232:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <current_measure_channel>
    1236:	81 e0       	ldi	r24, 0x01	; 1
    1238:	08 95       	ret

0000123a <qtm_measure_node>:
    123a:	4a e0       	ldi	r20, 0x0A	; 10
    123c:	48 9f       	mul	r20, r24
    123e:	90 01       	movw	r18, r0
    1240:	49 9f       	mul	r20, r25
    1242:	30 0d       	add	r19, r0
    1244:	11 24       	eor	r1, r1
    1246:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    124a:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    124e:	02 80       	ldd	r0, Z+2	; 0x02
    1250:	f3 81       	ldd	r31, Z+3	; 0x03
    1252:	e0 2d       	mov	r30, r0
    1254:	e2 0f       	add	r30, r18
    1256:	f3 1f       	adc	r31, r19
    1258:	42 81       	ldd	r20, Z+2	; 0x02
    125a:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    125e:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    1262:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    1266:	02 80       	ldd	r0, Z+2	; 0x02
    1268:	f3 81       	ldd	r31, Z+3	; 0x03
    126a:	e0 2d       	mov	r30, r0
    126c:	e2 0f       	add	r30, r18
    126e:	f3 1f       	adc	r31, r19
    1270:	43 81       	ldd	r20, Z+3	; 0x03
    1272:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    1276:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    127a:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    127e:	02 80       	ldd	r0, Z+2	; 0x02
    1280:	f3 81       	ldd	r31, Z+3	; 0x03
    1282:	e0 2d       	mov	r30, r0
    1284:	e2 0f       	add	r30, r18
    1286:	f3 1f       	adc	r31, r19
    1288:	44 81       	ldd	r20, Z+4	; 0x04
    128a:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    128e:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    1292:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    1296:	02 80       	ldd	r0, Z+2	; 0x02
    1298:	f3 81       	ldd	r31, Z+3	; 0x03
    129a:	e0 2d       	mov	r30, r0
    129c:	e2 0f       	add	r30, r18
    129e:	f3 1f       	adc	r31, r19
    12a0:	42 81       	ldd	r20, Z+2	; 0x02
    12a2:	53 81       	ldd	r21, Z+3	; 0x03
    12a4:	64 81       	ldd	r22, Z+4	; 0x04
    12a6:	75 81       	ldd	r23, Z+5	; 0x05
    12a8:	47 2f       	mov	r20, r23
    12aa:	55 27       	eor	r21, r21
    12ac:	66 27       	eor	r22, r22
    12ae:	77 27       	eor	r23, r23
    12b0:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    12b4:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    12b8:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    12bc:	02 80       	ldd	r0, Z+2	; 0x02
    12be:	f3 81       	ldd	r31, Z+3	; 0x03
    12c0:	e0 2d       	mov	r30, r0
    12c2:	e2 0f       	add	r30, r18
    12c4:	f3 1f       	adc	r31, r19
    12c6:	40 81       	ld	r20, Z
    12c8:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    12cc:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    12d0:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    12d4:	02 80       	ldd	r0, Z+2	; 0x02
    12d6:	f3 81       	ldd	r31, Z+3	; 0x03
    12d8:	e0 2d       	mov	r30, r0
    12da:	e2 0f       	add	r30, r18
    12dc:	f3 1f       	adc	r31, r19
    12de:	41 81       	ldd	r20, Z+1	; 0x01
    12e0:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    12e4:	65 e0       	ldi	r22, 0x05	; 5
    12e6:	68 9f       	mul	r22, r24
    12e8:	a0 01       	movw	r20, r0
    12ea:	69 9f       	mul	r22, r25
    12ec:	50 0d       	add	r21, r0
    12ee:	11 24       	eor	r1, r1
    12f0:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    12f4:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    12f8:	04 80       	ldd	r0, Z+4	; 0x04
    12fa:	f5 81       	ldd	r31, Z+5	; 0x05
    12fc:	e0 2d       	mov	r30, r0
    12fe:	e4 0f       	add	r30, r20
    1300:	f5 1f       	adc	r31, r21
    1302:	83 81       	ldd	r24, Z+3	; 0x03
    1304:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    1308:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    130c:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    1310:	04 80       	ldd	r0, Z+4	; 0x04
    1312:	f5 81       	ldd	r31, Z+5	; 0x05
    1314:	e0 2d       	mov	r30, r0
    1316:	e4 0f       	add	r30, r20
    1318:	f5 1f       	adc	r31, r21
    131a:	83 81       	ldd	r24, Z+3	; 0x03
    131c:	94 81       	ldd	r25, Z+4	; 0x04
    131e:	88 27       	eor	r24, r24
    1320:	9f 73       	andi	r25, 0x3F	; 63
    1322:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1326:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    132a:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    132e:	14 96       	adiw	r26, 0x04	; 4
    1330:	ed 91       	ld	r30, X+
    1332:	fc 91       	ld	r31, X
    1334:	15 97       	sbiw	r26, 0x05	; 5
    1336:	e4 0f       	add	r30, r20
    1338:	f5 1f       	adc	r31, r21
    133a:	80 81       	ld	r24, Z
    133c:	81 fd       	sbrc	r24, 1
    133e:	60 83       	st	Z, r22
    1340:	14 96       	adiw	r26, 0x04	; 4
    1342:	8d 91       	ld	r24, X+
    1344:	9c 91       	ld	r25, X
    1346:	15 97       	sbiw	r26, 0x05	; 5
    1348:	fc 01       	movw	r30, r24
    134a:	e4 0f       	add	r30, r20
    134c:	f5 1f       	adc	r31, r21
    134e:	80 81       	ld	r24, Z
    1350:	8c 71       	andi	r24, 0x1C	; 28
    1352:	71 f4       	brne	.+28     	; 0x1370 <qtm_measure_node+0x136>
    1354:	12 96       	adiw	r26, 0x02	; 2
    1356:	ed 91       	ld	r30, X+
    1358:	fc 91       	ld	r31, X
    135a:	13 97       	sbiw	r26, 0x03	; 3
    135c:	e2 0f       	add	r30, r18
    135e:	f3 1f       	adc	r31, r19
    1360:	e0 85       	ldd	r30, Z+8	; 0x08
    1362:	e2 95       	swap	r30
    1364:	ef 70       	andi	r30, 0x0F	; 15
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	ed 56       	subi	r30, 0x6D	; 109
    136a:	fe 4f       	sbci	r31, 0xFE	; 254
    136c:	80 81       	ld	r24, Z
    136e:	01 c0       	rjmp	.+2      	; 0x1372 <qtm_measure_node+0x138>
    1370:	8f e3       	ldi	r24, 0x3F	; 63
    1372:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    1376:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    137a:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    137e:	02 80       	ldd	r0, Z+2	; 0x02
    1380:	f3 81       	ldd	r31, Z+3	; 0x03
    1382:	e0 2d       	mov	r30, r0
    1384:	e2 0f       	add	r30, r18
    1386:	f3 1f       	adc	r31, r19
    1388:	86 81       	ldd	r24, Z+6	; 0x06
    138a:	8b 3f       	cpi	r24, 0xFB	; 251
    138c:	10 f4       	brcc	.+4      	; 0x1392 <qtm_measure_node+0x158>
    138e:	8c 5f       	subi	r24, 0xFC	; 252
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <qtm_measure_node+0x15a>
    1392:	8f ef       	ldi	r24, 0xFF	; 255
    1394:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1398:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    139c:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    13a0:	02 80       	ldd	r0, Z+2	; 0x02
    13a2:	f3 81       	ldd	r31, Z+3	; 0x03
    13a4:	e0 2d       	mov	r30, r0
    13a6:	e2 0f       	add	r30, r18
    13a8:	f3 1f       	adc	r31, r19
    13aa:	87 81       	ldd	r24, Z+7	; 0x07
    13ac:	80 7f       	andi	r24, 0xF0	; 240
    13ae:	91 85       	ldd	r25, Z+9	; 0x09
    13b0:	89 2b       	or	r24, r25
    13b2:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    13b6:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    13ba:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    13be:	82 81       	ldd	r24, Z+2	; 0x02
    13c0:	93 81       	ldd	r25, Z+3	; 0x03
    13c2:	fc 01       	movw	r30, r24
    13c4:	e2 0f       	add	r30, r18
    13c6:	f3 1f       	adc	r31, r19
    13c8:	87 81       	ldd	r24, Z+7	; 0x07
    13ca:	8f 70       	andi	r24, 0x0F	; 15
    13cc:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    13d0:	82 e1       	ldi	r24, 0x12	; 18
    13d2:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    13d6:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    13da:	81 60       	ori	r24, 0x01	; 1
    13dc:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    13e0:	08 95       	ret

000013e2 <qtm_acquisition_process>:
    13e2:	4f 92       	push	r4
    13e4:	5f 92       	push	r5
    13e6:	6f 92       	push	r6
    13e8:	7f 92       	push	r7
    13ea:	8f 92       	push	r8
    13ec:	9f 92       	push	r9
    13ee:	af 92       	push	r10
    13f0:	bf 92       	push	r11
    13f2:	cf 92       	push	r12
    13f4:	df 92       	push	r13
    13f6:	ef 92       	push	r14
    13f8:	ff 92       	push	r15
    13fa:	0f 93       	push	r16
    13fc:	1f 93       	push	r17
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <touch_seq_lib_state>
    1406:	88 23       	and	r24, r24
    1408:	09 f4       	brne	.+2      	; 0x140c <qtm_acquisition_process+0x2a>
    140a:	31 c1       	rjmp	.+610    	; 0x166e <qtm_acquisition_process+0x28c>
    140c:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    1410:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    1414:	e0 90 24 02 	lds	r14, 0x0224	; 0x800224 <qtm_raw_data_measurements_ptr>
    1418:	f0 90 25 02 	lds	r15, 0x0225	; 0x800225 <qtm_raw_data_measurements_ptr+0x1>
    141c:	41 2c       	mov	r4, r1
    141e:	51 2c       	mov	r5, r1
    1420:	60 e0       	ldi	r22, 0x00	; 0
    1422:	70 e0       	ldi	r23, 0x00	; 0
    1424:	00 e0       	ldi	r16, 0x00	; 0
    1426:	10 e0       	ldi	r17, 0x00	; 0
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	66 24       	eor	r6, r6
    142c:	63 94       	inc	r6
    142e:	91 e8       	ldi	r25, 0x81	; 129
    1430:	79 2e       	mov	r7, r25
    1432:	aa 24       	eor	r10, r10
    1434:	aa 94       	dec	r10
    1436:	bb 24       	eor	r11, r11
    1438:	b3 94       	inc	r11
    143a:	cd 90       	ld	r12, X+
    143c:	dc 90       	ld	r13, X
    143e:	11 97       	sbiw	r26, 0x01	; 1
    1440:	f6 01       	movw	r30, r12
    1442:	20 81       	ld	r18, Z
    1444:	31 81       	ldd	r19, Z+1	; 0x01
    1446:	02 17       	cp	r16, r18
    1448:	13 07       	cpc	r17, r19
    144a:	08 f0       	brcs	.+2      	; 0x144e <qtm_acquisition_process+0x6c>
    144c:	0c c1       	rjmp	.+536    	; 0x1666 <qtm_acquisition_process+0x284>
    144e:	e7 01       	movw	r28, r14
    1450:	29 91       	ld	r18, Y+
    1452:	39 91       	ld	r19, Y+
    1454:	7e 01       	movw	r14, r28
    1456:	14 96       	adiw	r26, 0x04	; 4
    1458:	ed 91       	ld	r30, X+
    145a:	fc 91       	ld	r31, X
    145c:	15 97       	sbiw	r26, 0x05	; 5
    145e:	e6 0f       	add	r30, r22
    1460:	f7 1f       	adc	r31, r23
    1462:	40 81       	ld	r20, Z
    1464:	4c 71       	andi	r20, 0x1C	; 28
    1466:	50 e0       	ldi	r21, 0x00	; 0
    1468:	56 95       	lsr	r21
    146a:	47 95       	ror	r20
    146c:	56 95       	lsr	r21
    146e:	47 95       	ror	r20
    1470:	41 15       	cp	r20, r1
    1472:	51 05       	cpc	r21, r1
    1474:	21 f0       	breq	.+8      	; 0x147e <qtm_acquisition_process+0x9c>
    1476:	41 30       	cpi	r20, 0x01	; 1
    1478:	51 05       	cpc	r21, r1
    147a:	c1 f0       	breq	.+48     	; 0x14ac <qtm_acquisition_process+0xca>
    147c:	eb c0       	rjmp	.+470    	; 0x1654 <qtm_acquisition_process+0x272>
    147e:	12 96       	adiw	r26, 0x02	; 2
    1480:	4d 91       	ld	r20, X+
    1482:	5c 91       	ld	r21, X
    1484:	13 97       	sbiw	r26, 0x03	; 3
    1486:	44 0d       	add	r20, r4
    1488:	55 1d       	adc	r21, r5
    148a:	ea 01       	movw	r28, r20
    148c:	98 85       	ldd	r25, Y+8	; 0x08
    148e:	9f 70       	andi	r25, 0x0F	; 15
    1490:	49 85       	ldd	r20, Y+9	; 0x09
    1492:	94 17       	cp	r25, r20
    1494:	10 f4       	brcc	.+4      	; 0x149a <qtm_acquisition_process+0xb8>
    1496:	49 1b       	sub	r20, r25
    1498:	01 c0       	rjmp	.+2      	; 0x149c <qtm_acquisition_process+0xba>
    149a:	40 e0       	ldi	r20, 0x00	; 0
    149c:	02 c0       	rjmp	.+4      	; 0x14a2 <qtm_acquisition_process+0xc0>
    149e:	36 95       	lsr	r19
    14a0:	27 95       	ror	r18
    14a2:	4a 95       	dec	r20
    14a4:	e2 f7       	brpl	.-8      	; 0x149e <qtm_acquisition_process+0xbc>
    14a6:	32 83       	std	Z+2, r19	; 0x02
    14a8:	21 83       	std	Z+1, r18	; 0x01
    14aa:	d5 c0       	rjmp	.+426    	; 0x1656 <qtm_acquisition_process+0x274>
    14ac:	12 96       	adiw	r26, 0x02	; 2
    14ae:	4d 91       	ld	r20, X+
    14b0:	5c 91       	ld	r21, X
    14b2:	13 97       	sbiw	r26, 0x03	; 3
    14b4:	44 0d       	add	r20, r4
    14b6:	55 1d       	adc	r21, r5
    14b8:	ea 01       	movw	r28, r20
    14ba:	09 84       	ldd	r0, Y+9	; 0x09
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <qtm_acquisition_process+0xe0>
    14be:	36 95       	lsr	r19
    14c0:	27 95       	ror	r18
    14c2:	0a 94       	dec	r0
    14c4:	e2 f7       	brpl	.-8      	; 0x14be <qtm_acquisition_process+0xdc>
    14c6:	32 83       	std	Z+2, r19	; 0x02
    14c8:	21 83       	std	Z+1, r18	; 0x01
    14ca:	43 81       	ldd	r20, Z+3	; 0x03
    14cc:	54 81       	ldd	r21, Z+4	; 0x04
    14ce:	21 15       	cp	r18, r1
    14d0:	d2 e0       	ldi	r29, 0x02	; 2
    14d2:	3d 07       	cpc	r19, r29
    14d4:	20 f0       	brcs	.+8      	; 0x14de <qtm_acquisition_process+0xfc>
    14d6:	2f 5f       	subi	r18, 0xFF	; 255
    14d8:	31 40       	sbci	r19, 0x01	; 1
    14da:	91 e0       	ldi	r25, 0x01	; 1
    14dc:	05 c0       	rjmp	.+10     	; 0x14e8 <qtm_acquisition_process+0x106>
    14de:	e5 01       	movw	r28, r10
    14e0:	c2 1b       	sub	r28, r18
    14e2:	d3 0b       	sbc	r29, r19
    14e4:	9e 01       	movw	r18, r28
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	e6 01       	movw	r28, r12
    14ea:	da 80       	ldd	r13, Y+2	; 0x02
    14ec:	d0 e4       	ldi	r29, 0x40	; 64
    14ee:	dd 12       	cpse	r13, r29
    14f0:	05 c0       	rjmp	.+10     	; 0x14fc <qtm_acquisition_process+0x11a>
    14f2:	36 95       	lsr	r19
    14f4:	27 95       	ror	r18
    14f6:	99 23       	and	r25, r25
    14f8:	19 f0       	breq	.+6      	; 0x1500 <qtm_acquisition_process+0x11e>
    14fa:	09 c0       	rjmp	.+18     	; 0x150e <qtm_acquisition_process+0x12c>
    14fc:	99 23       	and	r25, r25
    14fe:	39 f0       	breq	.+14     	; 0x150e <qtm_acquisition_process+0x12c>
    1500:	4f 3f       	cpi	r20, 0xFF	; 255
    1502:	9f e3       	ldi	r25, 0x3F	; 63
    1504:	59 07       	cpc	r21, r25
    1506:	31 f4       	brne	.+12     	; 0x1514 <qtm_acquisition_process+0x132>
    1508:	70 82       	st	Z, r7
    150a:	8e e0       	ldi	r24, 0x0E	; 14
    150c:	07 c0       	rjmp	.+14     	; 0x151c <qtm_acquisition_process+0x13a>
    150e:	88 24       	eor	r8, r8
    1510:	83 94       	inc	r8
    1512:	01 c0       	rjmp	.+2      	; 0x1516 <qtm_acquisition_process+0x134>
    1514:	81 2c       	mov	r8, r1
    1516:	2a 30       	cpi	r18, 0x0A	; 10
    1518:	31 05       	cpc	r19, r1
    151a:	98 f4       	brcc	.+38     	; 0x1542 <qtm_acquisition_process+0x160>
    151c:	14 96       	adiw	r26, 0x04	; 4
    151e:	ed 91       	ld	r30, X+
    1520:	fc 91       	ld	r31, X
    1522:	15 97       	sbiw	r26, 0x05	; 5
    1524:	e6 0f       	add	r30, r22
    1526:	f7 1f       	adc	r31, r23
    1528:	20 81       	ld	r18, Z
    152a:	27 ff       	sbrs	r18, 7
    152c:	60 82       	st	Z, r6
    152e:	14 96       	adiw	r26, 0x04	; 4
    1530:	ed 91       	ld	r30, X+
    1532:	fc 91       	ld	r31, X
    1534:	15 97       	sbiw	r26, 0x05	; 5
    1536:	e6 0f       	add	r30, r22
    1538:	f7 1f       	adc	r31, r23
    153a:	5f 73       	andi	r21, 0x3F	; 63
    153c:	54 83       	std	Z+4, r21	; 0x04
    153e:	43 83       	std	Z+3, r20	; 0x03
    1540:	8a c0       	rjmp	.+276    	; 0x1656 <qtm_acquisition_process+0x274>
    1542:	6a 01       	movw	r12, r20
    1544:	cc 24       	eor	r12, r12
    1546:	c0 e3       	ldi	r28, 0x30	; 48
    1548:	dc 22       	and	r13, r28
    154a:	9d 2c       	mov	r9, r13
    154c:	92 94       	swap	r9
    154e:	df e0       	ldi	r29, 0x0F	; 15
    1550:	9d 22       	and	r9, r29
    1552:	6a 01       	movw	r12, r20
    1554:	cc 24       	eor	r12, r12
    1556:	df e0       	ldi	r29, 0x0F	; 15
    1558:	dd 22       	and	r13, r29
    155a:	9d 2d       	mov	r25, r13
    155c:	6a 01       	movw	r12, r20
    155e:	c0 ef       	ldi	r28, 0xF0	; 240
    1560:	cc 22       	and	r12, r28
    1562:	dd 24       	eor	r13, r13
    1564:	54 e0       	ldi	r21, 0x04	; 4
    1566:	d6 94       	lsr	r13
    1568:	c7 94       	ror	r12
    156a:	5a 95       	dec	r21
    156c:	e1 f7       	brne	.-8      	; 0x1566 <qtm_acquisition_process+0x184>
    156e:	5c 2d       	mov	r21, r12
    1570:	4f 70       	andi	r20, 0x0F	; 15
    1572:	81 10       	cpse	r8, r1
    1574:	32 c0       	rjmp	.+100    	; 0x15da <qtm_acquisition_process+0x1f8>
    1576:	20 3d       	cpi	r18, 0xD0	; 208
    1578:	31 05       	cpc	r19, r1
    157a:	60 f0       	brcs	.+24     	; 0x1594 <qtm_acquisition_process+0x1b2>
    157c:	d3 e0       	ldi	r29, 0x03	; 3
    157e:	9d 16       	cp	r9, r29
    1580:	49 f0       	breq	.+18     	; 0x1594 <qtm_acquisition_process+0x1b2>
    1582:	93 94       	inc	r9
    1584:	2f 5c       	subi	r18, 0xCF	; 207
    1586:	31 09       	sbc	r19, r1
    1588:	f6 cf       	rjmp	.-20     	; 0x1576 <qtm_acquisition_process+0x194>
    158a:	9f 30       	cpi	r25, 0x0F	; 15
    158c:	41 f0       	breq	.+16     	; 0x159e <qtm_acquisition_process+0x1bc>
    158e:	9f 5f       	subi	r25, 0xFF	; 255
    1590:	25 51       	subi	r18, 0x15	; 21
    1592:	31 09       	sbc	r19, r1
    1594:	26 31       	cpi	r18, 0x16	; 22
    1596:	31 05       	cpc	r19, r1
    1598:	c0 f7       	brcc	.-16     	; 0x158a <qtm_acquisition_process+0x1a8>
    159a:	9f 30       	cpi	r25, 0x0F	; 15
    159c:	69 f4       	brne	.+26     	; 0x15b8 <qtm_acquisition_process+0x1d6>
    159e:	93 e0       	ldi	r25, 0x03	; 3
    15a0:	99 12       	cpse	r9, r25
    15a2:	02 c0       	rjmp	.+4      	; 0x15a8 <qtm_acquisition_process+0x1c6>
    15a4:	9f e0       	ldi	r25, 0x0F	; 15
    15a6:	08 c0       	rjmp	.+16     	; 0x15b8 <qtm_acquisition_process+0x1d6>
    15a8:	93 94       	inc	r9
    15aa:	95 e0       	ldi	r25, 0x05	; 5
    15ac:	05 c0       	rjmp	.+10     	; 0x15b8 <qtm_acquisition_process+0x1d6>
    15ae:	5f 30       	cpi	r21, 0x0F	; 15
    15b0:	49 f0       	breq	.+18     	; 0x15c4 <qtm_acquisition_process+0x1e2>
    15b2:	5f 5f       	subi	r21, 0xFF	; 255
    15b4:	22 50       	subi	r18, 0x02	; 2
    15b6:	31 09       	sbc	r19, r1
    15b8:	23 30       	cpi	r18, 0x03	; 3
    15ba:	31 05       	cpc	r19, r1
    15bc:	c0 f7       	brcc	.-16     	; 0x15ae <qtm_acquisition_process+0x1cc>
    15be:	5f 30       	cpi	r21, 0x0F	; 15
    15c0:	09 f0       	breq	.+2      	; 0x15c4 <qtm_acquisition_process+0x1e2>
    15c2:	5b c0       	rjmp	.+182    	; 0x167a <qtm_acquisition_process+0x298>
    15c4:	9f 30       	cpi	r25, 0x0F	; 15
    15c6:	09 f4       	brne	.+2      	; 0x15ca <qtm_acquisition_process+0x1e8>
    15c8:	54 c0       	rjmp	.+168    	; 0x1672 <qtm_acquisition_process+0x290>
    15ca:	9f 5f       	subi	r25, 0xFF	; 255
    15cc:	55 e0       	ldi	r21, 0x05	; 5
    15ce:	55 c0       	rjmp	.+170    	; 0x167a <qtm_acquisition_process+0x298>
    15d0:	99 20       	and	r9, r9
    15d2:	61 f0       	breq	.+24     	; 0x15ec <qtm_acquisition_process+0x20a>
    15d4:	9a 94       	dec	r9
    15d6:	2f 5c       	subi	r18, 0xCF	; 207
    15d8:	31 09       	sbc	r19, r1
    15da:	20 3d       	cpi	r18, 0xD0	; 208
    15dc:	31 05       	cpc	r19, r1
    15de:	c0 f7       	brcc	.-16     	; 0x15d0 <qtm_acquisition_process+0x1ee>
    15e0:	05 c0       	rjmp	.+10     	; 0x15ec <qtm_acquisition_process+0x20a>
    15e2:	99 23       	and	r25, r25
    15e4:	41 f0       	breq	.+16     	; 0x15f6 <qtm_acquisition_process+0x214>
    15e6:	91 50       	subi	r25, 0x01	; 1
    15e8:	25 51       	subi	r18, 0x15	; 21
    15ea:	31 09       	sbc	r19, r1
    15ec:	26 31       	cpi	r18, 0x16	; 22
    15ee:	31 05       	cpc	r19, r1
    15f0:	c0 f7       	brcc	.-16     	; 0x15e2 <qtm_acquisition_process+0x200>
    15f2:	91 11       	cpse	r25, r1
    15f4:	0c c0       	rjmp	.+24     	; 0x160e <qtm_acquisition_process+0x22c>
    15f6:	91 10       	cpse	r9, r1
    15f8:	02 c0       	rjmp	.+4      	; 0x15fe <qtm_acquisition_process+0x21c>
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	08 c0       	rjmp	.+16     	; 0x160e <qtm_acquisition_process+0x22c>
    15fe:	9a 94       	dec	r9
    1600:	9a e0       	ldi	r25, 0x0A	; 10
    1602:	05 c0       	rjmp	.+10     	; 0x160e <qtm_acquisition_process+0x22c>
    1604:	55 23       	and	r21, r21
    1606:	41 f0       	breq	.+16     	; 0x1618 <qtm_acquisition_process+0x236>
    1608:	51 50       	subi	r21, 0x01	; 1
    160a:	22 50       	subi	r18, 0x02	; 2
    160c:	31 09       	sbc	r19, r1
    160e:	23 30       	cpi	r18, 0x03	; 3
    1610:	31 05       	cpc	r19, r1
    1612:	c0 f7       	brcc	.-16     	; 0x1604 <qtm_acquisition_process+0x222>
    1614:	51 11       	cpse	r21, r1
    1616:	0d c0       	rjmp	.+26     	; 0x1632 <qtm_acquisition_process+0x250>
    1618:	99 23       	and	r25, r25
    161a:	b9 f1       	breq	.+110    	; 0x168a <qtm_acquisition_process+0x2a8>
    161c:	91 50       	subi	r25, 0x01	; 1
    161e:	5a e0       	ldi	r21, 0x0A	; 10
    1620:	23 30       	cpi	r18, 0x03	; 3
    1622:	31 05       	cpc	r19, r1
    1624:	d0 f6       	brcc	.-76     	; 0x15da <qtm_acquisition_process+0x1f8>
    1626:	05 c0       	rjmp	.+10     	; 0x1632 <qtm_acquisition_process+0x250>
    1628:	23 30       	cpi	r18, 0x03	; 3
    162a:	31 05       	cpc	r19, r1
    162c:	58 f1       	brcs	.+86     	; 0x1684 <qtm_acquisition_process+0x2a2>
    162e:	4f e0       	ldi	r20, 0x0F	; 15
    1630:	5f e0       	ldi	r21, 0x0F	; 15
    1632:	29 2d       	mov	r18, r9
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	32 2f       	mov	r19, r18
    1638:	22 27       	eor	r18, r18
    163a:	32 95       	swap	r19
    163c:	30 7f       	andi	r19, 0xF0	; 240
    163e:	39 2b       	or	r19, r25
    1640:	24 2b       	or	r18, r20
    1642:	c0 e1       	ldi	r28, 0x10	; 16
    1644:	5c 9f       	mul	r21, r28
    1646:	60 01       	movw	r12, r0
    1648:	11 24       	eor	r1, r1
    164a:	c2 2a       	or	r12, r18
    164c:	d3 2a       	or	r13, r19
    164e:	d4 82       	std	Z+4, r13	; 0x04
    1650:	c3 82       	std	Z+3, r12	; 0x03
    1652:	01 c0       	rjmp	.+2      	; 0x1656 <qtm_acquisition_process+0x274>
    1654:	ff cf       	rjmp	.-2      	; 0x1654 <qtm_acquisition_process+0x272>
    1656:	0f 5f       	subi	r16, 0xFF	; 255
    1658:	1f 4f       	sbci	r17, 0xFF	; 255
    165a:	6b 5f       	subi	r22, 0xFB	; 251
    165c:	7f 4f       	sbci	r23, 0xFF	; 255
    165e:	da e0       	ldi	r29, 0x0A	; 10
    1660:	4d 0e       	add	r4, r29
    1662:	51 1c       	adc	r5, r1
    1664:	ea ce       	rjmp	.-556    	; 0x143a <qtm_acquisition_process+0x58>
    1666:	92 e0       	ldi	r25, 0x02	; 2
    1668:	90 93 b4 01 	sts	0x01B4, r25	; 0x8001b4 <touch_seq_lib_state>
    166c:	10 c0       	rjmp	.+32     	; 0x168e <qtm_acquisition_process+0x2ac>
    166e:	83 e0       	ldi	r24, 0x03	; 3
    1670:	0e c0       	rjmp	.+28     	; 0x168e <qtm_acquisition_process+0x2ac>
    1672:	53 e0       	ldi	r21, 0x03	; 3
    1674:	95 16       	cp	r9, r21
    1676:	c1 f2       	breq	.-80     	; 0x1628 <qtm_acquisition_process+0x246>
    1678:	5f e0       	ldi	r21, 0x0F	; 15
    167a:	23 30       	cpi	r18, 0x03	; 3
    167c:	31 05       	cpc	r19, r1
    167e:	08 f0       	brcs	.+2      	; 0x1682 <qtm_acquisition_process+0x2a0>
    1680:	7a cf       	rjmp	.-268    	; 0x1576 <qtm_acquisition_process+0x194>
    1682:	d7 cf       	rjmp	.-82     	; 0x1632 <qtm_acquisition_process+0x250>
    1684:	5f e0       	ldi	r21, 0x0F	; 15
    1686:	4f e0       	ldi	r20, 0x0F	; 15
    1688:	d4 cf       	rjmp	.-88     	; 0x1632 <qtm_acquisition_process+0x250>
    168a:	50 e0       	ldi	r21, 0x00	; 0
    168c:	d2 cf       	rjmp	.-92     	; 0x1632 <qtm_acquisition_process+0x250>
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	1f 91       	pop	r17
    1694:	0f 91       	pop	r16
    1696:	ff 90       	pop	r15
    1698:	ef 90       	pop	r14
    169a:	df 90       	pop	r13
    169c:	cf 90       	pop	r12
    169e:	bf 90       	pop	r11
    16a0:	af 90       	pop	r10
    16a2:	9f 90       	pop	r9
    16a4:	8f 90       	pop	r8
    16a6:	7f 90       	pop	r7
    16a8:	6f 90       	pop	r6
    16aa:	5f 90       	pop	r5
    16ac:	4f 90       	pop	r4
    16ae:	08 95       	ret

000016b0 <qtm_ptc_init_acquisition_module>:
    16b0:	8f 92       	push	r8
    16b2:	9f 92       	push	r9
    16b4:	af 92       	push	r10
    16b6:	bf 92       	push	r11
    16b8:	cf 92       	push	r12
    16ba:	df 92       	push	r13
    16bc:	ef 92       	push	r14
    16be:	ff 92       	push	r15
    16c0:	cf 93       	push	r28
    16c2:	df 93       	push	r29
    16c4:	00 97       	sbiw	r24, 0x00	; 0
    16c6:	09 f4       	brne	.+2      	; 0x16ca <qtm_ptc_init_acquisition_module+0x1a>
    16c8:	76 c0       	rjmp	.+236    	; 0x17b6 <qtm_ptc_init_acquisition_module+0x106>
    16ca:	dc 01       	movw	r26, r24
    16cc:	ed 91       	ld	r30, X+
    16ce:	fc 91       	ld	r31, X
    16d0:	c0 80       	ld	r12, Z
    16d2:	d1 80       	ldd	r13, Z+1	; 0x01
    16d4:	e1 2c       	mov	r14, r1
    16d6:	f1 2c       	mov	r15, r1
    16d8:	a0 e0       	ldi	r26, 0x00	; 0
    16da:	b0 e0       	ldi	r27, 0x00	; 0
    16dc:	40 e0       	ldi	r20, 0x00	; 0
    16de:	50 e0       	ldi	r21, 0x00	; 0
    16e0:	ba 01       	movw	r22, r20
    16e2:	20 e0       	ldi	r18, 0x00	; 0
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	ac 15       	cp	r26, r12
    16e8:	bd 05       	cpc	r27, r13
    16ea:	b1 f0       	breq	.+44     	; 0x1718 <qtm_ptc_init_acquisition_module+0x68>
    16ec:	ec 01       	movw	r28, r24
    16ee:	ea 81       	ldd	r30, Y+2	; 0x02
    16f0:	fb 81       	ldd	r31, Y+3	; 0x03
    16f2:	ee 0d       	add	r30, r14
    16f4:	ff 1d       	adc	r31, r15
    16f6:	a0 80       	ld	r10, Z
    16f8:	b1 80       	ldd	r11, Z+1	; 0x01
    16fa:	2a 29       	or	r18, r10
    16fc:	3b 29       	or	r19, r11
    16fe:	82 80       	ldd	r8, Z+2	; 0x02
    1700:	93 80       	ldd	r9, Z+3	; 0x03
    1702:	a4 80       	ldd	r10, Z+4	; 0x04
    1704:	b5 80       	ldd	r11, Z+5	; 0x05
    1706:	48 29       	or	r20, r8
    1708:	59 29       	or	r21, r9
    170a:	6a 29       	or	r22, r10
    170c:	7b 29       	or	r23, r11
    170e:	11 96       	adiw	r26, 0x01	; 1
    1710:	da e0       	ldi	r29, 0x0A	; 10
    1712:	ed 0e       	add	r14, r29
    1714:	f1 1c       	adc	r15, r1
    1716:	e7 cf       	rjmp	.-50     	; 0x16e6 <qtm_ptc_init_acquisition_module+0x36>
    1718:	41 15       	cp	r20, r1
    171a:	51 05       	cpc	r21, r1
    171c:	61 05       	cpc	r22, r1
    171e:	71 05       	cpc	r23, r1
    1720:	09 f4       	brne	.+2      	; 0x1724 <qtm_ptc_init_acquisition_module+0x74>
    1722:	4b c0       	rjmp	.+150    	; 0x17ba <qtm_ptc_init_acquisition_module+0x10a>
    1724:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <touch_seq_lib_state>
    1728:	4a 01       	movw	r8, r20
    172a:	5b 01       	movw	r10, r22
    172c:	88 24       	eor	r8, r8
    172e:	aa 24       	eor	r10, r10
    1730:	bb 24       	eor	r11, r11
    1732:	6a 01       	movw	r12, r20
    1734:	7b 01       	movw	r14, r22
    1736:	cc 24       	eor	r12, r12
    1738:	dd 24       	eor	r13, r13
    173a:	ff 24       	eor	r15, r15
    173c:	87 2f       	mov	r24, r23
    173e:	99 27       	eor	r25, r25
    1740:	aa 27       	eor	r26, r26
    1742:	bb 27       	eor	r27, r27
    1744:	e1 11       	cpse	r30, r1
    1746:	17 c0       	rjmp	.+46     	; 0x1776 <qtm_ptc_init_acquisition_module+0xc6>
    1748:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    174c:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1750:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1754:	89 2c       	mov	r8, r9
    1756:	9a 2c       	mov	r9, r10
    1758:	ab 2c       	mov	r10, r11
    175a:	bb 24       	eor	r11, r11
    175c:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1760:	67 01       	movw	r12, r14
    1762:	ee 24       	eor	r14, r14
    1764:	ff 24       	eor	r15, r15
    1766:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    176a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    176e:	81 e0       	ldi	r24, 0x01	; 1
    1770:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <touch_seq_lib_state>
    1774:	1e c0       	rjmp	.+60     	; 0x17b2 <qtm_ptc_init_acquisition_module+0x102>
    1776:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    177a:	2e 2b       	or	r18, r30
    177c:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1780:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1784:	23 2b       	or	r18, r19
    1786:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    178a:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    178e:	42 2b       	or	r20, r18
    1790:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1794:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1798:	29 29       	or	r18, r9
    179a:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    179e:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    17a2:	2e 29       	or	r18, r14
    17a4:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    17a8:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    17ac:	82 2b       	or	r24, r18
    17ae:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	03 c0       	rjmp	.+6      	; 0x17bc <qtm_ptc_init_acquisition_module+0x10c>
    17b6:	8b e0       	ldi	r24, 0x0B	; 11
    17b8:	01 c0       	rjmp	.+2      	; 0x17bc <qtm_ptc_init_acquisition_module+0x10c>
    17ba:	82 e0       	ldi	r24, 0x02	; 2
    17bc:	df 91       	pop	r29
    17be:	cf 91       	pop	r28
    17c0:	ff 90       	pop	r15
    17c2:	ef 90       	pop	r14
    17c4:	df 90       	pop	r13
    17c6:	cf 90       	pop	r12
    17c8:	bf 90       	pop	r11
    17ca:	af 90       	pop	r10
    17cc:	9f 90       	pop	r9
    17ce:	8f 90       	pop	r8
    17d0:	08 95       	ret

000017d2 <qtm_ptc_qtlib_assign_signal_memory>:
    17d2:	00 97       	sbiw	r24, 0x00	; 0
    17d4:	31 f0       	breq	.+12     	; 0x17e2 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    17d6:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <qtm_raw_data_measurements_ptr+0x1>
    17da:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <qtm_raw_data_measurements_ptr>
    17de:	80 e0       	ldi	r24, 0x00	; 0
    17e0:	08 95       	ret
    17e2:	8b e0       	ldi	r24, 0x0B	; 11
    17e4:	08 95       	ret

000017e6 <qtm_ptc_start_measurement_seq>:
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	00 d0       	rcall	.+0      	; 0x17ec <qtm_ptc_start_measurement_seq+0x6>
    17ec:	00 d0       	rcall	.+0      	; 0x17ee <qtm_ptc_start_measurement_seq+0x8>
    17ee:	cd b7       	in	r28, 0x3d	; 61
    17f0:	de b7       	in	r29, 0x3e	; 62
    17f2:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <max_conversion_cycles>
    17f6:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <max_conversion_cycles+0x1>
    17fa:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <max_conversion_cycles+0x2>
    17fe:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <max_conversion_cycles+0x3>
    1802:	61 15       	cp	r22, r1
    1804:	71 05       	cpc	r23, r1
    1806:	09 f4       	brne	.+2      	; 0x180a <qtm_ptc_start_measurement_seq+0x24>
    1808:	db c0       	rjmp	.+438    	; 0x19c0 <qtm_ptc_start_measurement_seq+0x1da>
    180a:	00 97       	sbiw	r24, 0x00	; 0
    180c:	09 f4       	brne	.+2      	; 0x1810 <qtm_ptc_start_measurement_seq+0x2a>
    180e:	d8 c0       	rjmp	.+432    	; 0x19c0 <qtm_ptc_start_measurement_seq+0x1da>
    1810:	20 91 b4 01 	lds	r18, 0x01B4	; 0x8001b4 <touch_seq_lib_state>
    1814:	22 23       	and	r18, r18
    1816:	09 f4       	brne	.+2      	; 0x181a <qtm_ptc_start_measurement_seq+0x34>
    1818:	d5 c0       	rjmp	.+426    	; 0x19c4 <qtm_ptc_start_measurement_seq+0x1de>
    181a:	24 30       	cpi	r18, 0x04	; 4
    181c:	09 f0       	breq	.+2      	; 0x1820 <qtm_ptc_start_measurement_seq+0x3a>
    181e:	93 c0       	rjmp	.+294    	; 0x1946 <qtm_ptc_start_measurement_seq+0x160>
    1820:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <ptc_eoc_ok_flag>
    1824:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1828:	80 ff       	sbrs	r24, 0
    182a:	8b c0       	rjmp	.+278    	; 0x1942 <qtm_ptc_start_measurement_seq+0x15c>
    182c:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	a6 e0       	ldi	r26, 0x06	; 6
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__umulhisi3>
    183a:	60 93 b8 01 	sts	0x01B8, r22	; 0x8001b8 <max_conversion_cycles>
    183e:	70 93 b9 01 	sts	0x01B9, r23	; 0x8001b9 <max_conversion_cycles+0x1>
    1842:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <max_conversion_cycles+0x2>
    1846:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <max_conversion_cycles+0x3>
    184a:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    184e:	2f 70       	andi	r18, 0x0F	; 15
    1850:	dc 01       	movw	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	82 0f       	add	r24, r18
    1856:	91 1d       	adc	r25, r1
    1858:	a1 1d       	adc	r26, r1
    185a:	b1 1d       	adc	r27, r1
    185c:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <max_conversion_cycles>
    1860:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <max_conversion_cycles+0x1>
    1864:	a0 93 ba 01 	sts	0x01BA, r26	; 0x8001ba <max_conversion_cycles+0x2>
    1868:	b0 93 bb 01 	sts	0x01BB, r27	; 0x8001bb <max_conversion_cycles+0x3>
    186c:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1870:	27 70       	andi	r18, 0x07	; 7
    1872:	04 c0       	rjmp	.+8      	; 0x187c <qtm_ptc_start_measurement_seq+0x96>
    1874:	88 0f       	add	r24, r24
    1876:	99 1f       	adc	r25, r25
    1878:	aa 1f       	adc	r26, r26
    187a:	bb 1f       	adc	r27, r27
    187c:	2a 95       	dec	r18
    187e:	d2 f7       	brpl	.-12     	; 0x1874 <qtm_ptc_start_measurement_seq+0x8e>
    1880:	0e 96       	adiw	r24, 0x0e	; 14
    1882:	a1 1d       	adc	r26, r1
    1884:	b1 1d       	adc	r27, r1
    1886:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <max_conversion_cycles>
    188a:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <max_conversion_cycles+0x1>
    188e:	a0 93 ba 01 	sts	0x01BA, r26	; 0x8001ba <max_conversion_cycles+0x2>
    1892:	b0 93 bb 01 	sts	0x01BB, r27	; 0x8001bb <max_conversion_cycles+0x3>
    1896:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    189a:	23 70       	andi	r18, 0x03	; 3
    189c:	04 c0       	rjmp	.+8      	; 0x18a6 <qtm_ptc_start_measurement_seq+0xc0>
    189e:	88 0f       	add	r24, r24
    18a0:	99 1f       	adc	r25, r25
    18a2:	aa 1f       	adc	r26, r26
    18a4:	bb 1f       	adc	r27, r27
    18a6:	2a 95       	dec	r18
    18a8:	d2 f7       	brpl	.-12     	; 0x189e <qtm_ptc_start_measurement_seq+0xb8>
    18aa:	22 e0       	ldi	r18, 0x02	; 2
    18ac:	b6 95       	lsr	r27
    18ae:	a7 95       	ror	r26
    18b0:	97 95       	ror	r25
    18b2:	87 95       	ror	r24
    18b4:	2a 95       	dec	r18
    18b6:	d1 f7       	brne	.-12     	; 0x18ac <qtm_ptc_start_measurement_seq+0xc6>
    18b8:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <max_conversion_cycles>
    18bc:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <max_conversion_cycles+0x1>
    18c0:	a0 93 ba 01 	sts	0x01BA, r26	; 0x8001ba <max_conversion_cycles+0x2>
    18c4:	b0 93 bb 01 	sts	0x01BB, r27	; 0x8001bb <max_conversion_cycles+0x3>
    18c8:	19 82       	std	Y+1, r1	; 0x01
    18ca:	1a 82       	std	Y+2, r1	; 0x02
    18cc:	1b 82       	std	Y+3, r1	; 0x03
    18ce:	1c 82       	std	Y+4, r1	; 0x04
    18d0:	21 e0       	ldi	r18, 0x01	; 1
    18d2:	49 81       	ldd	r20, Y+1	; 0x01
    18d4:	5a 81       	ldd	r21, Y+2	; 0x02
    18d6:	6b 81       	ldd	r22, Y+3	; 0x03
    18d8:	7c 81       	ldd	r23, Y+4	; 0x04
    18da:	48 17       	cp	r20, r24
    18dc:	59 07       	cpc	r21, r25
    18de:	6a 07       	cpc	r22, r26
    18e0:	7b 07       	cpc	r23, r27
    18e2:	b0 f4       	brcc	.+44     	; 0x1910 <qtm_ptc_start_measurement_seq+0x12a>
    18e4:	30 91 b7 01 	lds	r19, 0x01B7	; 0x8001b7 <ptc_eoc_ok_flag>
    18e8:	33 23       	and	r19, r19
    18ea:	29 f0       	breq	.+10     	; 0x18f6 <qtm_ptc_start_measurement_seq+0x110>
    18ec:	89 83       	std	Y+1, r24	; 0x01
    18ee:	9a 83       	std	Y+2, r25	; 0x02
    18f0:	ab 83       	std	Y+3, r26	; 0x03
    18f2:	bc 83       	std	Y+4, r27	; 0x04
    18f4:	20 e0       	ldi	r18, 0x00	; 0
    18f6:	49 81       	ldd	r20, Y+1	; 0x01
    18f8:	5a 81       	ldd	r21, Y+2	; 0x02
    18fa:	6b 81       	ldd	r22, Y+3	; 0x03
    18fc:	7c 81       	ldd	r23, Y+4	; 0x04
    18fe:	4f 5f       	subi	r20, 0xFF	; 255
    1900:	5f 4f       	sbci	r21, 0xFF	; 255
    1902:	6f 4f       	sbci	r22, 0xFF	; 255
    1904:	7f 4f       	sbci	r23, 0xFF	; 255
    1906:	49 83       	std	Y+1, r20	; 0x01
    1908:	5a 83       	std	Y+2, r21	; 0x02
    190a:	6b 83       	std	Y+3, r22	; 0x03
    190c:	7c 83       	std	Y+4, r23	; 0x04
    190e:	e1 cf       	rjmp	.-62     	; 0x18d2 <qtm_ptc_start_measurement_seq+0xec>
    1910:	22 23       	and	r18, r18
    1912:	b9 f0       	breq	.+46     	; 0x1942 <qtm_ptc_start_measurement_seq+0x15c>
    1914:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1918:	80 ff       	sbrs	r24, 0
    191a:	13 c0       	rjmp	.+38     	; 0x1942 <qtm_ptc_start_measurement_seq+0x15c>
    191c:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1920:	00 00       	nop
    1922:	82 e1       	ldi	r24, 0x12	; 18
    1924:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1928:	00 00       	nop
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1930:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <ptc_lockups>
    1934:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <ptc_lockups+0x1>
    1938:	01 96       	adiw	r24, 0x01	; 1
    193a:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <ptc_lockups+0x1>
    193e:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <ptc_lockups>
    1942:	81 e0       	ldi	r24, 0x01	; 1
    1944:	42 c0       	rjmp	.+132    	; 0x19ca <qtm_ptc_start_measurement_seq+0x1e4>
    1946:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    194a:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    194e:	70 93 af 01 	sts	0x01AF, r23	; 0x8001af <ptc_seq_measure_complete_pointer+0x1>
    1952:	60 93 ae 01 	sts	0x01AE, r22	; 0x8001ae <ptc_seq_measure_complete_pointer>
    1956:	dc 01       	movw	r26, r24
    1958:	ed 91       	ld	r30, X+
    195a:	fc 91       	ld	r31, X
    195c:	82 81       	ldd	r24, Z+2	; 0x02
    195e:	80 34       	cpi	r24, 0x40	; 64
    1960:	11 f4       	brne	.+4      	; 0x1966 <qtm_ptc_start_measurement_seq+0x180>
    1962:	88 e0       	ldi	r24, 0x08	; 8
    1964:	03 c0       	rjmp	.+6      	; 0x196c <qtm_ptc_start_measurement_seq+0x186>
    1966:	80 38       	cpi	r24, 0x80	; 128
    1968:	79 f5       	brne	.+94     	; 0x19c8 <qtm_ptc_start_measurement_seq+0x1e2>
    196a:	8a e0       	ldi	r24, 0x0A	; 10
    196c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    1970:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <qtm_acquisition_control_working_set_ptr>
    1974:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <qtm_acquisition_control_working_set_ptr+0x1>
    1978:	01 90       	ld	r0, Z+
    197a:	f0 81       	ld	r31, Z
    197c:	e0 2d       	mov	r30, r0
    197e:	84 81       	ldd	r24, Z+4	; 0x04
    1980:	80 31       	cpi	r24, 0x10	; 16
    1982:	08 f0       	brcs	.+2      	; 0x1986 <qtm_ptc_start_measurement_seq+0x1a0>
    1984:	80 e1       	ldi	r24, 0x10	; 16
    1986:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	84 bf       	out	0x34, r24	; 52
    198e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    1992:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <current_measure_channel+0x1>
    1996:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <current_measure_channel>
    199a:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <select_next_channel_to_measure>
    199e:	81 11       	cpse	r24, r1
    19a0:	0b c0       	rjmp	.+22     	; 0x19b8 <qtm_ptc_start_measurement_seq+0x1d2>
    19a2:	84 e0       	ldi	r24, 0x04	; 4
    19a4:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <touch_seq_lib_state>
    19a8:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <current_measure_channel>
    19ac:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <current_measure_channel+0x1>
    19b0:	0e 94 1d 09 	call	0x123a	; 0x123a <qtm_measure_node>
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	09 c0       	rjmp	.+18     	; 0x19ca <qtm_ptc_start_measurement_seq+0x1e4>
    19b8:	82 e0       	ldi	r24, 0x02	; 2
    19ba:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <touch_seq_lib_state>
    19be:	05 c0       	rjmp	.+10     	; 0x19ca <qtm_ptc_start_measurement_seq+0x1e4>
    19c0:	8b e0       	ldi	r24, 0x0B	; 11
    19c2:	03 c0       	rjmp	.+6      	; 0x19ca <qtm_ptc_start_measurement_seq+0x1e4>
    19c4:	83 e0       	ldi	r24, 0x03	; 3
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <qtm_ptc_start_measurement_seq+0x1e4>
    19c8:	82 e0       	ldi	r24, 0x02	; 2
    19ca:	0f 90       	pop	r0
    19cc:	0f 90       	pop	r0
    19ce:	0f 90       	pop	r0
    19d0:	0f 90       	pop	r0
    19d2:	df 91       	pop	r29
    19d4:	cf 91       	pop	r28
    19d6:	08 95       	ret

000019d8 <qtm_enable_sensor_node>:
    19d8:	00 97       	sbiw	r24, 0x00	; 0
    19da:	c9 f0       	breq	.+50     	; 0x1a0e <qtm_enable_sensor_node+0x36>
    19dc:	dc 01       	movw	r26, r24
    19de:	ed 91       	ld	r30, X+
    19e0:	fc 91       	ld	r31, X
    19e2:	11 97       	sbiw	r26, 0x01	; 1
    19e4:	20 81       	ld	r18, Z
    19e6:	31 81       	ldd	r19, Z+1	; 0x01
    19e8:	26 17       	cp	r18, r22
    19ea:	37 07       	cpc	r19, r23
    19ec:	90 f0       	brcs	.+36     	; 0x1a12 <qtm_enable_sensor_node+0x3a>
    19ee:	45 e0       	ldi	r20, 0x05	; 5
    19f0:	46 9f       	mul	r20, r22
    19f2:	90 01       	movw	r18, r0
    19f4:	47 9f       	mul	r20, r23
    19f6:	30 0d       	add	r19, r0
    19f8:	11 24       	eor	r1, r1
    19fa:	14 96       	adiw	r26, 0x04	; 4
    19fc:	ed 91       	ld	r30, X+
    19fe:	fc 91       	ld	r31, X
    1a00:	15 97       	sbiw	r26, 0x05	; 5
    1a02:	e2 0f       	add	r30, r18
    1a04:	f3 1f       	adc	r31, r19
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	80 83       	st	Z, r24
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	08 95       	ret
    1a0e:	8b e0       	ldi	r24, 0x0B	; 11
    1a10:	08 95       	ret
    1a12:	82 e0       	ldi	r24, 0x02	; 2
    1a14:	08 95       	ret

00001a16 <qtm_calibrate_sensor_node>:
    1a16:	00 97       	sbiw	r24, 0x00	; 0
    1a18:	d1 f1       	breq	.+116    	; 0x1a8e <qtm_calibrate_sensor_node+0x78>
    1a1a:	dc 01       	movw	r26, r24
    1a1c:	ed 91       	ld	r30, X+
    1a1e:	fc 91       	ld	r31, X
    1a20:	11 97       	sbiw	r26, 0x01	; 1
    1a22:	20 81       	ld	r18, Z
    1a24:	31 81       	ldd	r19, Z+1	; 0x01
    1a26:	26 17       	cp	r18, r22
    1a28:	37 07       	cpc	r19, r23
    1a2a:	98 f1       	brcs	.+102    	; 0x1a92 <qtm_calibrate_sensor_node+0x7c>
    1a2c:	22 81       	ldd	r18, Z+2	; 0x02
    1a2e:	14 96       	adiw	r26, 0x04	; 4
    1a30:	ed 91       	ld	r30, X+
    1a32:	fc 91       	ld	r31, X
    1a34:	15 97       	sbiw	r26, 0x05	; 5
    1a36:	20 34       	cpi	r18, 0x40	; 64
    1a38:	59 f4       	brne	.+22     	; 0x1a50 <qtm_calibrate_sensor_node+0x3a>
    1a3a:	85 e0       	ldi	r24, 0x05	; 5
    1a3c:	86 9f       	mul	r24, r22
    1a3e:	d0 01       	movw	r26, r0
    1a40:	87 9f       	mul	r24, r23
    1a42:	b0 0d       	add	r27, r0
    1a44:	11 24       	eor	r1, r1
    1a46:	ae 0f       	add	r26, r30
    1a48:	bf 1f       	adc	r27, r31
    1a4a:	84 e3       	ldi	r24, 0x34	; 52
    1a4c:	92 e0       	ldi	r25, 0x02	; 2
    1a4e:	0c c0       	rjmp	.+24     	; 0x1a68 <qtm_calibrate_sensor_node+0x52>
    1a50:	20 38       	cpi	r18, 0x80	; 128
    1a52:	81 f4       	brne	.+32     	; 0x1a74 <qtm_calibrate_sensor_node+0x5e>
    1a54:	85 e0       	ldi	r24, 0x05	; 5
    1a56:	86 9f       	mul	r24, r22
    1a58:	d0 01       	movw	r26, r0
    1a5a:	87 9f       	mul	r24, r23
    1a5c:	b0 0d       	add	r27, r0
    1a5e:	11 24       	eor	r1, r1
    1a60:	ae 0f       	add	r26, r30
    1a62:	bf 1f       	adc	r27, r31
    1a64:	87 e6       	ldi	r24, 0x67	; 103
    1a66:	95 e0       	ldi	r25, 0x05	; 5
    1a68:	14 96       	adiw	r26, 0x04	; 4
    1a6a:	9c 93       	st	X, r25
    1a6c:	8e 93       	st	-X, r24
    1a6e:	13 97       	sbiw	r26, 0x03	; 3
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	01 c0       	rjmp	.+2      	; 0x1a76 <qtm_calibrate_sensor_node+0x60>
    1a74:	82 e0       	ldi	r24, 0x02	; 2
    1a76:	95 e0       	ldi	r25, 0x05	; 5
    1a78:	96 9f       	mul	r25, r22
    1a7a:	90 01       	movw	r18, r0
    1a7c:	97 9f       	mul	r25, r23
    1a7e:	30 0d       	add	r19, r0
    1a80:	11 24       	eor	r1, r1
    1a82:	e2 0f       	add	r30, r18
    1a84:	f3 1f       	adc	r31, r19
    1a86:	90 81       	ld	r25, Z
    1a88:	92 60       	ori	r25, 0x02	; 2
    1a8a:	90 83       	st	Z, r25
    1a8c:	08 95       	ret
    1a8e:	8b e0       	ldi	r24, 0x0B	; 11
    1a90:	08 95       	ret
    1a92:	82 e0       	ldi	r24, 0x02	; 2
    1a94:	08 95       	ret

00001a96 <qtm_m324pb_ptc_handler_eoc>:
    1a96:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1a9a:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    1a9e:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    1aa2:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <current_measure_channel>
    1aa6:	f0 91 b6 01 	lds	r31, 0x01B6	; 0x8001b6 <current_measure_channel+0x1>
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <qtm_raw_data_measurements_ptr>
    1ab2:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <qtm_raw_data_measurements_ptr+0x1>
    1ab6:	e4 0f       	add	r30, r20
    1ab8:	f5 1f       	adc	r31, r21
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	92 2b       	or	r25, r18
    1abe:	91 83       	std	Z+1, r25	; 0x01
    1ac0:	80 83       	st	Z, r24
    1ac2:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <good_eocs>
    1ac6:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <good_eocs+0x1>
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <good_eocs+0x1>
    1ad0:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <good_eocs>
    1ad4:	89 2b       	or	r24, r25
    1ad6:	21 f4       	brne	.+8      	; 0x1ae0 <qtm_m324pb_ptc_handler_eoc+0x4a>
    1ad8:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <ptc_lockups+0x1>
    1adc:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <ptc_lockups>
    1ae0:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <current_measure_channel>
    1ae4:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <current_measure_channel+0x1>
    1ae8:	01 96       	adiw	r24, 0x01	; 1
    1aea:	90 93 b6 01 	sts	0x01B6, r25	; 0x8001b6 <current_measure_channel+0x1>
    1aee:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <current_measure_channel>
    1af2:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <select_next_channel_to_measure>
    1af6:	81 11       	cpse	r24, r1
    1af8:	0a c0       	rjmp	.+20     	; 0x1b0e <qtm_m324pb_ptc_handler_eoc+0x78>
    1afa:	84 e0       	ldi	r24, 0x04	; 4
    1afc:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <touch_seq_lib_state>
    1b00:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <current_measure_channel>
    1b04:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <current_measure_channel+0x1>
    1b08:	0e 94 1d 09 	call	0x123a	; 0x123a <qtm_measure_node>
    1b0c:	05 c0       	rjmp	.+10     	; 0x1b18 <qtm_m324pb_ptc_handler_eoc+0x82>
    1b0e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <ptc_seq_measure_complete_pointer>
    1b12:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <ptc_seq_measure_complete_pointer+0x1>
    1b16:	09 95       	icall
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <ptc_eoc_ok_flag>
    1b1e:	08 95       	ret

00001b20 <__umulhisi3>:
    1b20:	a2 9f       	mul	r26, r18
    1b22:	b0 01       	movw	r22, r0
    1b24:	b3 9f       	mul	r27, r19
    1b26:	c0 01       	movw	r24, r0
    1b28:	a3 9f       	mul	r26, r19
    1b2a:	70 0d       	add	r23, r0
    1b2c:	81 1d       	adc	r24, r1
    1b2e:	11 24       	eor	r1, r1
    1b30:	91 1d       	adc	r25, r1
    1b32:	b2 9f       	mul	r27, r18
    1b34:	70 0d       	add	r23, r0
    1b36:	81 1d       	adc	r24, r1
    1b38:	11 24       	eor	r1, r1
    1b3a:	91 1d       	adc	r25, r1
    1b3c:	08 95       	ret

00001b3e <_exit>:
    1b3e:	f8 94       	cli

00001b40 <__stop_program>:
    1b40:	ff cf       	rjmp	.-2      	; 0x1b40 <__stop_program>
