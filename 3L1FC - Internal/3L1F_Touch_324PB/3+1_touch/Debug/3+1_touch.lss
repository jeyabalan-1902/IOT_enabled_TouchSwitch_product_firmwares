
3+1_touch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00001eb4  00001f48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001eb4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008c  00800184  00800184  00001fcc  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001fcc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000202c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000358  00000000  00000000  00002070  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037a1  00000000  00000000  000023c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001443  00000000  00000000  00005b69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a14  00000000  00000000  00006fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006e8  00000000  00000000  000089c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a0b  00000000  00000000  000090a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f62  00000000  00000000  0000aab3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000280  00000000  00000000  0000ba15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__vector_13>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 d0 05 	jmp	0xba0	; 0xba0 <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 42 05 	jmp	0xa84	; 0xa84 <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e4 eb       	ldi	r30, 0xB4	; 180
      e0:	fe e1       	ldi	r31, 0x1E	; 30
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a4 38       	cpi	r26, 0x84	; 132
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a4 e8       	ldi	r26, 0x84	; 132
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a0 31       	cpi	r26, 0x10	; 16
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 af 03 	call	0x75e	; 0x75e <main>
     102:	0c 94 58 0f 	jmp	0x1eb0	; 0x1eb0 <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
     10a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <system_init>
     10e:	0e 94 a9 04 	call	0x952	; 0x952 <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31
     136:	0e 94 f6 04 	call	0x9ec	; 0x9ec <mega_touch_timer>
     13a:	85 b3       	in	r24, 0x15	; 21
     13c:	81 60       	ori	r24, 0x01	; 1
     13e:	85 bb       	out	0x15, r24	; 21
     140:	ff 91       	pop	r31
     142:	ef 91       	pop	r30
     144:	bf 91       	pop	r27
     146:	af 91       	pop	r26
     148:	9f 91       	pop	r25
     14a:	8f 91       	pop	r24
     14c:	7f 91       	pop	r23
     14e:	6f 91       	pop	r22
     150:	5f 91       	pop	r21
     152:	4f 91       	pop	r20
     154:	3f 91       	pop	r19
     156:	2f 91       	pop	r18
     158:	0f 90       	pop	r0
     15a:	0f be       	out	0x3f, r0	; 63
     15c:	0f 90       	pop	r0
     15e:	1f 90       	pop	r1
     160:	18 95       	reti

00000162 <calculateCRC>:

void timer1_init() {
	TCCR1B |= (1 << WGM12);
	OCR1A = 79997; 
	TIMSK1 |= (1 << OCIE1A); 
	TCCR1B |= (1 << CS12) | (1 << CS10); 
     162:	dc 01       	movw	r26, r24
     164:	40 e0       	ldi	r20, 0x00	; 0
     166:	50 e0       	ldi	r21, 0x00	; 0
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	15 c0       	rjmp	.+42     	; 0x196 <calculateCRC+0x34>
     16c:	fd 01       	movw	r30, r26
     16e:	e4 0f       	add	r30, r20
     170:	f5 1f       	adc	r31, r21
     172:	90 81       	ld	r25, Z
     174:	89 27       	eor	r24, r25
     176:	20 e0       	ldi	r18, 0x00	; 0
     178:	0a c0       	rjmp	.+20     	; 0x18e <calculateCRC+0x2c>
     17a:	88 23       	and	r24, r24
     17c:	34 f4       	brge	.+12     	; 0x18a <calculateCRC+0x28>
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	88 0f       	add	r24, r24
     182:	99 1f       	adc	r25, r25
     184:	97 e0       	ldi	r25, 0x07	; 7
     186:	89 27       	eor	r24, r25
     188:	01 c0       	rjmp	.+2      	; 0x18c <calculateCRC+0x2a>
     18a:	88 0f       	add	r24, r24
     18c:	2f 5f       	subi	r18, 0xFF	; 255
     18e:	28 30       	cpi	r18, 0x08	; 8
     190:	a0 f3       	brcs	.-24     	; 0x17a <calculateCRC+0x18>
     192:	4f 5f       	subi	r20, 0xFF	; 255
     194:	5f 4f       	sbci	r21, 0xFF	; 255
     196:	46 17       	cp	r20, r22
     198:	57 07       	cpc	r21, r23
     19a:	40 f3       	brcs	.-48     	; 0x16c <calculateCRC+0xa>
     19c:	08 95       	ret

0000019e <SPI_MasterInit>:
}


void SPI_MasterInit()
{
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     19e:	84 b1       	in	r24, 0x04	; 4
     1a0:	80 6b       	ori	r24, 0xB0	; 176
     1a2:	84 b9       	out	0x04, r24	; 4
	SPCR0 = (1 << SPE) | (1 << MSTR);   
     1a4:	80 e5       	ldi	r24, 0x50	; 80
     1a6:	8c bd       	out	0x2c, r24	; 44
     1a8:	08 95       	ret

000001aa <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(uint8_t data)
{
	PORTB &= ~(1 << SPI_SS_PIN);
     1aa:	95 b1       	in	r25, 0x05	; 5
     1ac:	9f 7e       	andi	r25, 0xEF	; 239
     1ae:	95 b9       	out	0x05, r25	; 5
	SPDR0 = data;
     1b0:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR0 & (1 << SPIF)))
     1b2:	0d b4       	in	r0, 0x2d	; 45
     1b4:	07 fe       	sbrs	r0, 7
     1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <SPI_MasterTransmit+0x8>
	{
	}
	PORTB |= (1 << SPI_SS_PIN);
     1b8:	85 b1       	in	r24, 0x05	; 5
     1ba:	80 61       	ori	r24, 0x10	; 16
     1bc:	85 b9       	out	0x05, r24	; 5
     1be:	08 95       	ret

000001c0 <SPI_MasterTransmitString>:
		second_counter_2 = 0;
		touch_counter_6 = 0;
	}
}

void SPI_MasterTransmitString(const char* str) {
     1c0:	0f 93       	push	r16
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	8c 01       	movw	r16, r24
	for (int i = 0; str[i] != '\0'; i++) {
     1ca:	c0 e0       	ldi	r28, 0x00	; 0
     1cc:	d0 e0       	ldi	r29, 0x00	; 0
     1ce:	0c c0       	rjmp	.+24     	; 0x1e8 <SPI_MasterTransmitString+0x28>
		SPI_MasterTransmit(str[i]);
     1d0:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d4:	2f ef       	ldi	r18, 0xFF	; 255
     1d6:	80 e7       	ldi	r24, 0x70	; 112
     1d8:	92 e0       	ldi	r25, 0x02	; 2
     1da:	21 50       	subi	r18, 0x01	; 1
     1dc:	80 40       	sbci	r24, 0x00	; 0
     1de:	90 40       	sbci	r25, 0x00	; 0
     1e0:	e1 f7       	brne	.-8      	; 0x1da <SPI_MasterTransmitString+0x1a>
     1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <SPI_MasterTransmitString+0x24>
     1e4:	00 00       	nop
		touch_counter_6 = 0;
	}
}

void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     1e6:	21 96       	adiw	r28, 0x01	; 1
     1e8:	f8 01       	movw	r30, r16
     1ea:	ec 0f       	add	r30, r28
     1ec:	fd 1f       	adc	r31, r29
     1ee:	80 81       	ld	r24, Z
     1f0:	81 11       	cpse	r24, r1
     1f2:	ee cf       	rjmp	.-36     	; 0x1d0 <SPI_MasterTransmitString+0x10>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
}
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	1f 91       	pop	r17
     1fa:	0f 91       	pop	r16
     1fc:	08 95       	ret

000001fe <touchpin1>:
			touch_counter_6 = 0;
		}
	}
}

void touchpin1() {
     1fe:	1f 93       	push	r17
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	00 d0       	rcall	.+0      	; 0x206 <touchpin1+0x8>
     206:	1f 92       	push	r1
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_1 = key_status_1;
     20c:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <key_status_1>
     210:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     21c:	80 78       	andi	r24, 0x80	; 128
     21e:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     222:	88 23       	and	r24, r24
     224:	d1 f1       	breq	.+116    	; 0x29a <touchpin1+0x9c>
     226:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <previous_key_status_1>
     22a:	81 11       	cpse	r24, r1
     22c:	36 c0       	rjmp	.+108    	; 0x29a <touchpin1+0x9c>
		touch_counter_1++;  
     22e:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <touch_counter_1>
     232:	8f 5f       	subi	r24, 0xFF	; 255
     234:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <touch_counter_1>
        if(touch_counter_1 == 1){
     238:	81 30       	cpi	r24, 0x01	; 1
     23a:	b1 f4       	brne	.+44     	; 0x268 <touchpin1+0x6a>
			uint8_t dataToSend[3] = {'L', '1'};
     23c:	19 82       	std	Y+1, r1	; 0x01
     23e:	1a 82       	std	Y+2, r1	; 0x02
     240:	1b 82       	std	Y+3, r1	; 0x03
     242:	8c e4       	ldi	r24, 0x4C	; 76
     244:	89 83       	std	Y+1, r24	; 0x01
     246:	81 e3       	ldi	r24, 0x31	; 49
     248:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     24a:	62 e0       	ldi	r22, 0x02	; 2
     24c:	70 e0       	ldi	r23, 0x00	; 0
     24e:	ce 01       	movw	r24, r28
     250:	01 96       	adiw	r24, 0x01	; 1
     252:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     256:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                     // Transmits "L1"
     258:	ce 01       	movw	r24, r28
     25a:	01 96       	adiw	r24, 0x01	; 1
     25c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     260:	81 2f       	mov	r24, r17
     262:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
     266:	19 c0       	rjmp	.+50     	; 0x29a <touchpin1+0x9c>
		}
		else if(touch_counter_1 == 2){
     268:	82 30       	cpi	r24, 0x02	; 2
     26a:	b9 f4       	brne	.+46     	; 0x29a <touchpin1+0x9c>
			uint8_t dataToSend[3] = {'L', '1'};
     26c:	19 82       	std	Y+1, r1	; 0x01
     26e:	1a 82       	std	Y+2, r1	; 0x02
     270:	1b 82       	std	Y+3, r1	; 0x03
     272:	8c e4       	ldi	r24, 0x4C	; 76
     274:	89 83       	std	Y+1, r24	; 0x01
     276:	81 e3       	ldi	r24, 0x31	; 49
     278:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     27a:	62 e0       	ldi	r22, 0x02	; 2
     27c:	70 e0       	ldi	r23, 0x00	; 0
     27e:	ce 01       	movw	r24, r28
     280:	01 96       	adiw	r24, 0x01	; 1
     282:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     286:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                     // Transmits "L1"
     288:	ce 01       	movw	r24, r28
     28a:	01 96       	adiw	r24, 0x01	; 1
     28c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     290:	81 2f       	mov	r24, r17
     292:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			touch_counter_1 = 0; 
     296:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <touch_counter_1>
		} 
	}
}
     29a:	0f 90       	pop	r0
     29c:	0f 90       	pop	r0
     29e:	0f 90       	pop	r0
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	1f 91       	pop	r17
     2a6:	08 95       	ret

000002a8 <touchpin2>:


void touchpin2() {
     2a8:	1f 93       	push	r17
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	00 d0       	rcall	.+0      	; 0x2b0 <touchpin2+0x8>
     2b0:	1f 92       	push	r1
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_2 = key_status_2;
     2b6:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <key_status_2>
     2ba:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     2c6:	80 78       	andi	r24, 0x80	; 128
     2c8:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <key_status_2>
	if (key_status_2&& !previous_key_status_2) {
     2cc:	88 23       	and	r24, r24
     2ce:	d1 f1       	breq	.+116    	; 0x344 <touchpin2+0x9c>
     2d0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <previous_key_status_2>
     2d4:	81 11       	cpse	r24, r1
     2d6:	36 c0       	rjmp	.+108    	; 0x344 <touchpin2+0x9c>
		touch_counter_2++;
     2d8:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <touch_counter_2>
     2dc:	8f 5f       	subi	r24, 0xFF	; 255
     2de:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <touch_counter_2>
		if (touch_counter_2 == 1) {
     2e2:	81 30       	cpi	r24, 0x01	; 1
     2e4:	b1 f4       	brne	.+44     	; 0x312 <touchpin2+0x6a>
			char dataToSend[3] = {'L', '2'};
     2e6:	19 82       	std	Y+1, r1	; 0x01
     2e8:	1a 82       	std	Y+2, r1	; 0x02
     2ea:	1b 82       	std	Y+3, r1	; 0x03
     2ec:	8c e4       	ldi	r24, 0x4C	; 76
     2ee:	89 83       	std	Y+1, r24	; 0x01
     2f0:	82 e3       	ldi	r24, 0x32	; 50
     2f2:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     2f4:	62 e0       	ldi	r22, 0x02	; 2
     2f6:	70 e0       	ldi	r23, 0x00	; 0
     2f8:	ce 01       	movw	r24, r28
     2fa:	01 96       	adiw	r24, 0x01	; 1
     2fc:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     300:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "L2"
     302:	ce 01       	movw	r24, r28
     304:	01 96       	adiw	r24, 0x01	; 1
     306:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     30a:	81 2f       	mov	r24, r17
     30c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
     310:	19 c0       	rjmp	.+50     	; 0x344 <touchpin2+0x9c>
		}
		else if(touch_counter_2 == 2){
     312:	82 30       	cpi	r24, 0x02	; 2
     314:	b9 f4       	brne	.+46     	; 0x344 <touchpin2+0x9c>
			char dataToSend[3] = {'L', '2'};
     316:	19 82       	std	Y+1, r1	; 0x01
     318:	1a 82       	std	Y+2, r1	; 0x02
     31a:	1b 82       	std	Y+3, r1	; 0x03
     31c:	8c e4       	ldi	r24, 0x4C	; 76
     31e:	89 83       	std	Y+1, r24	; 0x01
     320:	82 e3       	ldi	r24, 0x32	; 50
     322:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     324:	62 e0       	ldi	r22, 0x02	; 2
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	ce 01       	movw	r24, r28
     32a:	01 96       	adiw	r24, 0x01	; 1
     32c:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     330:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "L2"
     332:	ce 01       	movw	r24, r28
     334:	01 96       	adiw	r24, 0x01	; 1
     336:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     33a:	81 2f       	mov	r24, r17
     33c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			touch_counter_2 = 0;
     340:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <touch_counter_2>
		}
	}
}
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	df 91       	pop	r29
     34c:	cf 91       	pop	r28
     34e:	1f 91       	pop	r17
     350:	08 95       	ret

00000352 <touchpin3>:

void touchpin3() {
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	00 d0       	rcall	.+0      	; 0x35a <touchpin3+0x8>
     35a:	1f 92       	push	r1
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_3 = key_status_3;
     360:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <key_status_3>
     364:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <previous_key_status_3>
	key_status_3 = get_sensor_state(2) & 0x80;
     368:	82 e0       	ldi	r24, 0x02	; 2
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     370:	80 78       	andi	r24, 0x80	; 128
     372:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     376:	88 23       	and	r24, r24
     378:	d1 f1       	breq	.+116    	; 0x3ee <touchpin3+0x9c>
     37a:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <previous_key_status_3>
     37e:	81 11       	cpse	r24, r1
     380:	36 c0       	rjmp	.+108    	; 0x3ee <touchpin3+0x9c>
		touch_counter_3++;
     382:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <touch_counter_3>
     386:	8f 5f       	subi	r24, 0xFF	; 255
     388:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <touch_counter_3>
		if (touch_counter_3 == 1) {
     38c:	81 30       	cpi	r24, 0x01	; 1
     38e:	b1 f4       	brne	.+44     	; 0x3bc <touchpin3+0x6a>
			uint8_t dataToSend[3] = {'L', '3'};
     390:	19 82       	std	Y+1, r1	; 0x01
     392:	1a 82       	std	Y+2, r1	; 0x02
     394:	1b 82       	std	Y+3, r1	; 0x03
     396:	8c e4       	ldi	r24, 0x4C	; 76
     398:	89 83       	std	Y+1, r24	; 0x01
     39a:	83 e3       	ldi	r24, 0x33	; 51
     39c:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     39e:	62 e0       	ldi	r22, 0x02	; 2
     3a0:	70 e0       	ldi	r23, 0x00	; 0
     3a2:	ce 01       	movw	r24, r28
     3a4:	01 96       	adiw	r24, 0x01	; 1
     3a6:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     3aa:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "L3"
     3ac:	ce 01       	movw	r24, r28
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     3b4:	81 2f       	mov	r24, r17
     3b6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
     3ba:	19 c0       	rjmp	.+50     	; 0x3ee <touchpin3+0x9c>
		}
		else if (touch_counter_3 == 2) {
     3bc:	82 30       	cpi	r24, 0x02	; 2
     3be:	b9 f4       	brne	.+46     	; 0x3ee <touchpin3+0x9c>
			uint8_t dataToSend[3] = {'L', '3'};
     3c0:	19 82       	std	Y+1, r1	; 0x01
     3c2:	1a 82       	std	Y+2, r1	; 0x02
     3c4:	1b 82       	std	Y+3, r1	; 0x03
     3c6:	8c e4       	ldi	r24, 0x4C	; 76
     3c8:	89 83       	std	Y+1, r24	; 0x01
     3ca:	83 e3       	ldi	r24, 0x33	; 51
     3cc:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     3ce:	62 e0       	ldi	r22, 0x02	; 2
     3d0:	70 e0       	ldi	r23, 0x00	; 0
     3d2:	ce 01       	movw	r24, r28
     3d4:	01 96       	adiw	r24, 0x01	; 1
     3d6:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     3da:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "L3"
     3dc:	ce 01       	movw	r24, r28
     3de:	01 96       	adiw	r24, 0x01	; 1
     3e0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     3e4:	81 2f       	mov	r24, r17
     3e6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			touch_counter_3 = 0;
     3ea:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <touch_counter_3>
		}
	}
}
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	1f 91       	pop	r17
     3fa:	08 95       	ret

000003fc <touchpin4>:
void touchpin4()
{
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	00 d0       	rcall	.+0      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     404:	1f 92       	push	r1
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_4 = key_status_4;
     40a:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <key_status_4>
     40e:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     412:	83 e0       	ldi	r24, 0x03	; 3
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     41a:	80 78       	andi	r24, 0x80	; 128
     41c:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     420:	88 23       	and	r24, r24
     422:	09 f4       	brne	.+2      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     424:	47 c0       	rjmp	.+142    	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     426:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <previous_key_status_4>
     42a:	81 11       	cpse	r24, r1
     42c:	43 c0       	rjmp	.+134    	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
		touch_counter_4++;
     42e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <touch_counter_4>
     432:	8f 5f       	subi	r24, 0xFF	; 255
     434:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <touch_counter_4>
		if (touch_counter_4 == 1)
     438:	81 30       	cpi	r24, 0x01	; 1
     43a:	f1 f4       	brne	.+60     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
		{
			uint8_t dataToSend[3] = {'F', '0'};
     43c:	19 82       	std	Y+1, r1	; 0x01
     43e:	1a 82       	std	Y+2, r1	; 0x02
     440:	1b 82       	std	Y+3, r1	; 0x03
     442:	86 e4       	ldi	r24, 0x46	; 70
     444:	89 83       	std	Y+1, r24	; 0x01
     446:	80 e3       	ldi	r24, 0x30	; 48
     448:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     44a:	62 e0       	ldi	r22, 0x02	; 2
     44c:	70 e0       	ldi	r23, 0x00	; 0
     44e:	ce 01       	movw	r24, r28
     450:	01 96       	adiw	r24, 0x01	; 1
     452:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     456:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "F0"
     458:	ce 01       	movw	r24, r28
     45a:	01 96       	adiw	r24, 0x01	; 1
     45c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     460:	81 2f       	mov	r24, r17
     462:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			touch_counter_4 = 1;
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <touch_counter_4>
			eeprom_write_byte((uint8_t*)EEPROM_ADDR, touch_counter_4);
     46c:	61 e0       	ldi	r22, 0x01	; 1
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <eeprom_write_byte>
     476:	1e c0       	rjmp	.+60     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
		}
		
		else if (touch_counter_4 == 2) {
     478:	82 30       	cpi	r24, 0x02	; 2
     47a:	e1 f4       	brne	.+56     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
			uint8_t dataToSend[3] = {'F', '1'};
     47c:	19 82       	std	Y+1, r1	; 0x01
     47e:	1a 82       	std	Y+2, r1	; 0x02
     480:	1b 82       	std	Y+3, r1	; 0x03
     482:	86 e4       	ldi	r24, 0x46	; 70
     484:	89 83       	std	Y+1, r24	; 0x01
     486:	81 e3       	ldi	r24, 0x31	; 49
     488:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     48a:	62 e0       	ldi	r22, 0x02	; 2
     48c:	70 e0       	ldi	r23, 0x00	; 0
     48e:	ce 01       	movw	r24, r28
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     496:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "F1"
     498:	ce 01       	movw	r24, r28
     49a:	01 96       	adiw	r24, 0x01	; 1
     49c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     4a0:	81 2f       	mov	r24, r17
     4a2:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			touch_counter_4 = 0;
     4a6:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <touch_counter_4>
			eeprom_write_byte((uint8_t*)EEPROM_ADDR, touch_counter_4);
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <eeprom_write_byte>
		}
	}
}
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	08 95       	ret

000004c2 <touchpin5>:

void touchpin5()
{
     4c2:	1f 93       	push	r17
     4c4:	cf 93       	push	r28
     4c6:	df 93       	push	r29
     4c8:	00 d0       	rcall	.+0      	; 0x4ca <touchpin5+0x8>
     4ca:	1f 92       	push	r1
     4cc:	cd b7       	in	r28, 0x3d	; 61
     4ce:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_5 = key_status_5;
     4d0:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <key_status_5>
     4d4:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <previous_key_status_5>
	key_status_5 = get_sensor_state(4) & 0x80;
     4d8:	84 e0       	ldi	r24, 0x04	; 4
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     4e0:	80 78       	andi	r24, 0x80	; 128
     4e2:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <key_status_5>
	if (key_status_5 && !previous_key_status_5) {
     4e6:	88 23       	and	r24, r24
     4e8:	59 f0       	breq	.+22     	; 0x500 <touchpin5+0x3e>
     4ea:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <previous_key_status_5>
     4ee:	91 11       	cpse	r25, r1
     4f0:	07 c0       	rjmp	.+14     	; 0x500 <touchpin5+0x3e>
		second_counter = 0;
     4f2:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <second_counter+0x1>
     4f6:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <second_counter>
		touch_counter_5 = 1;
     4fa:	91 e0       	ldi	r25, 0x01	; 1
     4fc:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <touch_counter_5>
	}
	if(key_status_5){
     500:	88 23       	and	r24, r24
     502:	51 f0       	breq	.+20     	; 0x518 <touchpin5+0x56>
		second_counter++;
     504:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <second_counter>
     508:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <second_counter+0x1>
     50c:	01 96       	adiw	r24, 0x01	; 1
     50e:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <second_counter+0x1>
     512:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <second_counter>
     516:	32 c0       	rjmp	.+100    	; 0x57c <touchpin5+0xba>
	}
	else if(!key_status_5 && previous_key_status_5){
     518:	81 11       	cpse	r24, r1
     51a:	30 c0       	rjmp	.+96     	; 0x57c <touchpin5+0xba>
     51c:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <previous_key_status_5>
     520:	88 23       	and	r24, r24
     522:	61 f1       	breq	.+88     	; 0x57c <touchpin5+0xba>
		if(second_counter > 0 && second_counter < 200 && touch_counter_5 == 1){
     524:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <second_counter>
     528:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <second_counter+0x1>
     52c:	89 2b       	or	r24, r25
     52e:	01 f1       	breq	.+64     	; 0x570 <touchpin5+0xae>
     530:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <second_counter>
     534:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <second_counter+0x1>
     538:	88 3c       	cpi	r24, 0xC8	; 200
     53a:	91 05       	cpc	r25, r1
     53c:	c8 f4       	brcc	.+50     	; 0x570 <touchpin5+0xae>
     53e:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <touch_counter_5>
     542:	81 30       	cpi	r24, 0x01	; 1
     544:	a9 f4       	brne	.+42     	; 0x570 <touchpin5+0xae>
			uint8_t dataToSend[3] = {'U', '1'};
     546:	19 82       	std	Y+1, r1	; 0x01
     548:	1a 82       	std	Y+2, r1	; 0x02
     54a:	1b 82       	std	Y+3, r1	; 0x03
     54c:	85 e5       	ldi	r24, 0x55	; 85
     54e:	89 83       	std	Y+1, r24	; 0x01
     550:	81 e3       	ldi	r24, 0x31	; 49
     552:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     554:	62 e0       	ldi	r22, 0x02	; 2
     556:	70 e0       	ldi	r23, 0x00	; 0
     558:	ce 01       	movw	r24, r28
     55a:	01 96       	adiw	r24, 0x01	; 1
     55c:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     560:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "U1"
     562:	ce 01       	movw	r24, r28
     564:	01 96       	adiw	r24, 0x01	; 1
     566:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     56a:	81 2f       	mov	r24, r17
     56c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
		}
		second_counter = 0;
     570:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <second_counter+0x1>
     574:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <second_counter>
		touch_counter_5 = 0;
     578:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <touch_counter_5>
	}		
}
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	1f 91       	pop	r17
     588:	08 95       	ret

0000058a <touchpin6>:

void touchpin6()
{
     58a:	1f 93       	push	r17
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	00 d0       	rcall	.+0      	; 0x592 <touchpin6+0x8>
     592:	1f 92       	push	r1
     594:	cd b7       	in	r28, 0x3d	; 61
     596:	de b7       	in	r29, 0x3e	; 62
	previous_key_status_6 = key_status_6;
     598:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <key_status_6>
     59c:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <previous_key_status_6>
	key_status_6 = get_sensor_state(5) & 0x80;
     5a0:	85 e0       	ldi	r24, 0x05	; 5
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     5a8:	80 78       	andi	r24, 0x80	; 128
     5aa:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <key_status_6>
	if (key_status_6 && !previous_key_status_6)
     5ae:	88 23       	and	r24, r24
     5b0:	59 f0       	breq	.+22     	; 0x5c8 <touchpin6+0x3e>
     5b2:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <previous_key_status_6>
     5b6:	91 11       	cpse	r25, r1
     5b8:	07 c0       	rjmp	.+14     	; 0x5c8 <touchpin6+0x3e>
	{
		second_counter_2 = 0;
     5ba:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <__data_end+0x1>
     5be:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <__data_end>
		touch_counter_6 = 1;	
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <touch_counter_6>
	}
	if(key_status_6){
     5c8:	88 23       	and	r24, r24
     5ca:	51 f0       	breq	.+20     	; 0x5e0 <touchpin6+0x56>
		second_counter_2++;
     5cc:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
     5d0:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <__data_end+0x1>
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <__data_end+0x1>
     5da:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__data_end>
     5de:	32 c0       	rjmp	.+100    	; 0x644 <touchpin6+0xba>
	}
	else if(!key_status_6 && previous_key_status_6){
     5e0:	81 11       	cpse	r24, r1
     5e2:	30 c0       	rjmp	.+96     	; 0x644 <touchpin6+0xba>
     5e4:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <previous_key_status_6>
     5e8:	88 23       	and	r24, r24
     5ea:	61 f1       	breq	.+88     	; 0x644 <touchpin6+0xba>
		if(second_counter_2 > 0 && second_counter_2 < 200 && touch_counter_6 == 1){
     5ec:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
     5f0:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <__data_end+0x1>
     5f4:	89 2b       	or	r24, r25
     5f6:	01 f1       	breq	.+64     	; 0x638 <touchpin6+0xae>
     5f8:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
     5fc:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <__data_end+0x1>
     600:	88 3c       	cpi	r24, 0xC8	; 200
     602:	91 05       	cpc	r25, r1
     604:	c8 f4       	brcc	.+50     	; 0x638 <touchpin6+0xae>
     606:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <touch_counter_6>
     60a:	81 30       	cpi	r24, 0x01	; 1
     60c:	a9 f4       	brne	.+42     	; 0x638 <touchpin6+0xae>
			uint8_t dataToSend[3] = {'D', '1'};
     60e:	19 82       	std	Y+1, r1	; 0x01
     610:	1a 82       	std	Y+2, r1	; 0x02
     612:	1b 82       	std	Y+3, r1	; 0x03
     614:	84 e4       	ldi	r24, 0x44	; 68
     616:	89 83       	std	Y+1, r24	; 0x01
     618:	81 e3       	ldi	r24, 0x31	; 49
     61a:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     61c:	62 e0       	ldi	r22, 0x02	; 2
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	ce 01       	movw	r24, r28
     622:	01 96       	adiw	r24, 0x01	; 1
     624:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     628:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);                      // Transmits "D1"
     62a:	ce 01       	movw	r24, r28
     62c:	01 96       	adiw	r24, 0x01	; 1
     62e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);                                   // Transmits the CRC
     632:	81 2f       	mov	r24, r17
     634:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
		}
		second_counter_2 = 0;
     638:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <__data_end+0x1>
     63c:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <__data_end>
		touch_counter_6 = 0;
     640:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <touch_counter_6>
	}
}
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	1f 91       	pop	r17
     650:	08 95       	ret

00000652 <loop>:
	}
	PORTB |= (1 << SPI_SS_PIN);
}

void loop()
{
     652:	1f 93       	push	r17
     654:	cf 93       	push	r28
     656:	df 93       	push	r29
     658:	00 d0       	rcall	.+0      	; 0x65a <loop+0x8>
     65a:	1f 92       	push	r1
     65c:	cd b7       	in	r28, 0x3d	; 61
     65e:	de b7       	in	r29, 0x3e	; 62
	touch_process();
     660:	0e 94 b8 04 	call	0x970	; 0x970 <touch_process>
	if (measurement_done_touch == 1)
     664:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <measurement_done_touch>
     668:	81 30       	cpi	r24, 0x01	; 1
     66a:	e9 f5       	brne	.+122    	; 0x6e6 <loop+0x94>
	{
		measurement_done_touch = 0;
     66c:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <measurement_done_touch>
		touchpin1();
     670:	0e 94 ff 00 	call	0x1fe	; 0x1fe <touchpin1>
		touchpin2();
     674:	0e 94 54 01 	call	0x2a8	; 0x2a8 <touchpin2>
		touchpin3();
     678:	0e 94 a9 01 	call	0x352	; 0x352 <touchpin3>
		touchpin4();
     67c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <touchpin4>
		touchpin5();
     680:	0e 94 61 02 	call	0x4c2	; 0x4c2 <touchpin5>
		touchpin6();
     684:	0e 94 c5 02 	call	0x58a	; 0x58a <touchpin6>
		if (second_counter >= 200 && second_counter_2 >= 200) {
     688:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <second_counter>
     68c:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <second_counter+0x1>
     690:	88 3c       	cpi	r24, 0xC8	; 200
     692:	91 05       	cpc	r25, r1
     694:	40 f1       	brcs	.+80     	; 0x6e6 <loop+0x94>
     696:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
     69a:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <__data_end+0x1>
     69e:	88 3c       	cpi	r24, 0xC8	; 200
     6a0:	91 05       	cpc	r25, r1
     6a2:	08 f1       	brcs	.+66     	; 0x6e6 <loop+0x94>
			uint8_t dataToSend[3] = {'H', '1'};
     6a4:	19 82       	std	Y+1, r1	; 0x01
     6a6:	1a 82       	std	Y+2, r1	; 0x02
     6a8:	1b 82       	std	Y+3, r1	; 0x03
     6aa:	88 e4       	ldi	r24, 0x48	; 72
     6ac:	89 83       	std	Y+1, r24	; 0x01
     6ae:	81 e3       	ldi	r24, 0x31	; 49
     6b0:	8a 83       	std	Y+2, r24	; 0x02
			uint8_t crc = calculateCRC(dataToSend, 2);
     6b2:	62 e0       	ldi	r22, 0x02	; 2
     6b4:	70 e0       	ldi	r23, 0x00	; 0
     6b6:	ce 01       	movw	r24, r28
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	0e 94 b1 00 	call	0x162	; 0x162 <calculateCRC>
     6be:	18 2f       	mov	r17, r24
			SPI_MasterTransmitString(dataToSend);
     6c0:	ce 01       	movw	r24, r28
     6c2:	01 96       	adiw	r24, 0x01	; 1
     6c4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <SPI_MasterTransmitString>
			SPI_MasterTransmit(crc);
     6c8:	81 2f       	mov	r24, r17
     6ca:	0e 94 d5 00 	call	0x1aa	; 0x1aa <SPI_MasterTransmit>
			second_counter = 0;
     6ce:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <second_counter+0x1>
     6d2:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <second_counter>
			second_counter_2 = 0;
     6d6:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <__data_end+0x1>
     6da:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <__data_end>
			touch_counter_5 = 0;
     6de:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <touch_counter_5>
			touch_counter_6 = 0;
     6e2:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <touch_counter_6>
		}
	}
}
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	1f 91       	pop	r17
     6f2:	08 95       	ret

000006f4 <__vector_13>:
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
}

ISR(TIMER1_COMPA_vect) {
     6f4:	1f 92       	push	r1
     6f6:	0f 92       	push	r0
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	0f 92       	push	r0
     6fc:	11 24       	eor	r1, r1
     6fe:	8f 93       	push	r24
     700:	9f 93       	push	r25
	second_counter++;
     702:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <second_counter>
     706:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <second_counter+0x1>
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <second_counter+0x1>
     710:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <second_counter>
	second_counter_2++;
     714:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
     718:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <__data_end+0x1>
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <__data_end+0x1>
     722:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <__data_end>
}
     726:	9f 91       	pop	r25
     728:	8f 91       	pop	r24
     72a:	0f 90       	pop	r0
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	0f 90       	pop	r0
     730:	1f 90       	pop	r1
     732:	18 95       	reti

00000734 <retain_fanTouch_sensor_state>:

void retain_fanTouch_sensor_state(void){
	touch_counter_4 = eeprom_read_byte((uint8_t*)EEPROM_ADDR);
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <eeprom_read_byte>
	if(touch_counter_4 == 1){
     73c:	81 30       	cpi	r24, 0x01	; 1
     73e:	19 f4       	brne	.+6      	; 0x746 <retain_fanTouch_sensor_state+0x12>
		touch_counter_4 = 1;
     740:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <touch_counter_4>
     744:	02 c0       	rjmp	.+4      	; 0x74a <retain_fanTouch_sensor_state+0x16>
		}else{
		touch_counter_4 = 0;
     746:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <touch_counter_4>
	}
	
	if(touch_counter_4 == 0xFF){
     74a:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <touch_counter_4>
     74e:	8f 3f       	cpi	r24, 0xFF	; 255
     750:	29 f4       	brne	.+10     	; 0x75c <retain_fanTouch_sensor_state+0x28>
		eeprom_write_byte((uint8_t*)EEPROM_ADDR, 0x00);
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <eeprom_write_byte>
     75c:	08 95       	ret

0000075e <main>:
volatile uint16_t second_counter = 0;
volatile uint16_t second_counter_2 = 0;

int main(void)
{
	atmel_start_init();
     75e:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	cpu_irq_enable();
     762:	78 94       	sei
	SPI_MasterInit();
     764:	0e 94 cf 00 	call	0x19e	; 0x19e <SPI_MasterInit>
	retain_fanTouch_sensor_state();
     768:	0e 94 9a 03 	call	0x734	; 0x734 <retain_fanTouch_sensor_state>
	while (1)
	{
		loop();
     76c:	0e 94 29 03 	call	0x652	; 0x652 <loop>
     770:	fd cf       	rjmp	.-6      	; 0x76c <main+0xe>

00000772 <datastreamer_init>:
     772:	08 95       	ret

00000774 <datastreamer_transmit>:
     774:	cf 93       	push	r28
     776:	c8 2f       	mov	r28, r24
     778:	0e 94 3c 06 	call	0xc78	; 0xc78 <USART_is_tx_ready>
     77c:	88 23       	and	r24, r24
     77e:	e1 f3       	breq	.-8      	; 0x778 <datastreamer_transmit+0x4>
     780:	8c 2f       	mov	r24, r28
     782:	0e 94 4c 06 	call	0xc98	; 0xc98 <USART_write>
     786:	0e 94 42 06 	call	0xc84	; 0xc84 <USART_is_tx_busy>
     78a:	81 11       	cpse	r24, r1
     78c:	fc cf       	rjmp	.-8      	; 0x786 <datastreamer_transmit+0x12>
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <datastreamer_output>:
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	00 d0       	rcall	.+0      	; 0x79c <datastreamer_output+0xa>
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sequence.2511>
     7a4:	8f 70       	andi	r24, 0x0F	; 15
     7a6:	51 f0       	breq	.+20     	; 0x7bc <datastreamer_output+0x2a>
     7a8:	0e c0       	rjmp	.+28     	; 0x7c6 <datastreamer_output+0x34>
     7aa:	f8 01       	movw	r30, r16
     7ac:	e0 50       	subi	r30, 0x00	; 0
     7ae:	ff 4f       	sbci	r31, 0xFF	; 255
     7b0:	80 81       	ld	r24, Z
     7b2:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7b6:	0f 5f       	subi	r16, 0xFF	; 255
     7b8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <datastreamer_output+0x2e>
     7bc:	00 e0       	ldi	r16, 0x00	; 0
     7be:	10 e0       	ldi	r17, 0x00	; 0
     7c0:	03 31       	cpi	r16, 0x13	; 19
     7c2:	11 05       	cpc	r17, r1
     7c4:	90 f3       	brcs	.-28     	; 0x7aa <datastreamer_output+0x18>
     7c6:	85 e5       	ldi	r24, 0x55	; 85
     7c8:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7cc:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sequence.2511>
     7d0:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7d4:	1a 82       	std	Y+2, r1	; 0x02
     7d6:	19 82       	std	Y+1, r1	; 0x01
     7d8:	4e c0       	rjmp	.+156    	; 0x876 <__DATA_REGION_LENGTH__+0x76>
     7da:	89 81       	ldd	r24, Y+1	; 0x01
     7dc:	9a 81       	ldd	r25, Y+2	; 0x02
     7de:	0e 94 0d 05 	call	0xa1a	; 0xa1a <get_sensor_node_signal>
     7e2:	19 2f       	mov	r17, r25
     7e4:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7e8:	81 2f       	mov	r24, r17
     7ea:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	9a 81       	ldd	r25, Y+2	; 0x02
     7f2:	0e 94 1a 05 	call	0xa34	; 0xa34 <get_sensor_node_reference>
     7f6:	19 2f       	mov	r17, r25
     7f8:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     7fc:	81 2f       	mov	r24, r17
     7fe:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	9a 81       	ldd	r25, Y+2	; 0x02
     806:	0e 94 0d 05 	call	0xa1a	; 0xa1a <get_sensor_node_signal>
     80a:	8c 01       	movw	r16, r24
     80c:	89 81       	ldd	r24, Y+1	; 0x01
     80e:	9a 81       	ldd	r25, Y+2	; 0x02
     810:	0e 94 1a 05 	call	0xa34	; 0xa34 <get_sensor_node_reference>
     814:	08 1b       	sub	r16, r24
     816:	19 0b       	sbc	r17, r25
     818:	80 2f       	mov	r24, r16
     81a:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     81e:	81 2f       	mov	r24, r17
     820:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	9a 81       	ldd	r25, Y+2	; 0x02
     828:	0e 94 26 05 	call	0xa4c	; 0xa4c <get_sensor_cc_val>
     82c:	19 2f       	mov	r17, r25
     82e:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     832:	81 2f       	mov	r24, r17
     834:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     838:	89 81       	ldd	r24, Y+1	; 0x01
     83a:	9a 81       	ldd	r25, Y+2	; 0x02
     83c:	0e 94 33 05 	call	0xa66	; 0xa66 <get_sensor_state>
     840:	88 23       	and	r24, r24
     842:	24 f4       	brge	.+8      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     84a:	03 c0       	rjmp	.+6      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     852:	89 81       	ldd	r24, Y+1	; 0x01
     854:	9a 81       	ldd	r25, Y+2	; 0x02
     856:	fc 01       	movw	r30, r24
     858:	ee 0f       	add	r30, r30
     85a:	ff 1f       	adc	r31, r31
     85c:	8e 0f       	add	r24, r30
     85e:	9f 1f       	adc	r25, r31
     860:	fc 01       	movw	r30, r24
     862:	e5 5e       	subi	r30, 0xE5	; 229
     864:	fe 4f       	sbci	r31, 0xFE	; 254
     866:	80 81       	ld	r24, Z
     868:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     86c:	89 81       	ldd	r24, Y+1	; 0x01
     86e:	9a 81       	ldd	r25, Y+2	; 0x02
     870:	01 96       	adiw	r24, 0x01	; 1
     872:	9a 83       	std	Y+2, r25	; 0x02
     874:	89 83       	std	Y+1, r24	; 0x01
     876:	89 81       	ldd	r24, Y+1	; 0x01
     878:	9a 81       	ldd	r25, Y+2	; 0x02
     87a:	06 97       	sbiw	r24, 0x06	; 6
     87c:	08 f4       	brcc	.+2      	; 0x880 <__DATA_REGION_LENGTH__+0x80>
     87e:	ad cf       	rjmp	.-166    	; 0x7da <datastreamer_output+0x48>
     880:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <module_error_code>
     884:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     888:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sequence.2511>
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	98 0f       	add	r25, r24
     890:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <sequence.2511>
     894:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     898:	8a ea       	ldi	r24, 0xAA	; 170
     89a:	0e 94 ba 03 	call	0x774	; 0x774 <datastreamer_transmit>
     89e:	0f 90       	pop	r0
     8a0:	0f 90       	pop	r0
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	1f 91       	pop	r17
     8a8:	0f 91       	pop	r16
     8aa:	08 95       	ret

000008ac <touch_ptc_pin_config>:
     8ac:	82 b1       	in	r24, 0x02	; 2
     8ae:	8b 7f       	andi	r24, 0xFB	; 251
     8b0:	82 b9       	out	0x02, r24	; 2
     8b2:	82 b1       	in	r24, 0x02	; 2
     8b4:	87 7f       	andi	r24, 0xF7	; 247
     8b6:	82 b9       	out	0x02, r24	; 2
     8b8:	82 b1       	in	r24, 0x02	; 2
     8ba:	8f 7e       	andi	r24, 0xEF	; 239
     8bc:	82 b9       	out	0x02, r24	; 2
     8be:	82 b1       	in	r24, 0x02	; 2
     8c0:	8d 7f       	andi	r24, 0xFD	; 253
     8c2:	82 b9       	out	0x02, r24	; 2
     8c4:	82 b1       	in	r24, 0x02	; 2
     8c6:	8e 7f       	andi	r24, 0xFE	; 254
     8c8:	82 b9       	out	0x02, r24	; 2
     8ca:	82 b1       	in	r24, 0x02	; 2
     8cc:	8f 7d       	andi	r24, 0xDF	; 223
     8ce:	82 b9       	out	0x02, r24	; 2
     8d0:	08 95       	ret

000008d2 <qtm_measure_complete_callback>:
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <touch_postprocess_request>
     8d8:	08 95       	ret

000008da <touch_sensors_config>:
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	87 e3       	ldi	r24, 0x37	; 55
     8e0:	91 e0       	ldi	r25, 0x01	; 1
     8e2:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <qtm_ptc_init_acquisition_module>
     8e6:	8c ed       	ldi	r24, 0xDC	; 220
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <qtm_ptc_qtlib_assign_signal_memory>
     8ee:	c0 e0       	ldi	r28, 0x00	; 0
     8f0:	d0 e0       	ldi	r29, 0x00	; 0
     8f2:	0b c0       	rjmp	.+22     	; 0x90a <__stack+0xb>
     8f4:	be 01       	movw	r22, r28
     8f6:	87 e3       	ldi	r24, 0x37	; 55
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <qtm_enable_sensor_node>
     8fe:	be 01       	movw	r22, r28
     900:	87 e3       	ldi	r24, 0x37	; 55
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <qtm_calibrate_sensor_node>
     908:	21 96       	adiw	r28, 0x01	; 1
     90a:	c6 30       	cpi	r28, 0x06	; 6
     90c:	d1 05       	cpc	r29, r1
     90e:	90 f3       	brcs	.-28     	; 0x8f4 <touch_sensors_config+0x1a>
     910:	c0 e0       	ldi	r28, 0x00	; 0
     912:	d0 e0       	ldi	r29, 0x00	; 0
     914:	0f c0       	rjmp	.+30     	; 0x934 <__stack+0x35>
     916:	ae 01       	movw	r20, r28
     918:	44 0f       	add	r20, r20
     91a:	55 1f       	adc	r21, r21
     91c:	44 0f       	add	r20, r20
     91e:	55 1f       	adc	r21, r21
     920:	4c 0f       	add	r20, r28
     922:	5d 1f       	adc	r21, r29
     924:	42 54       	subi	r20, 0x42	; 66
     926:	5e 4f       	sbci	r21, 0xFE	; 254
     928:	6c 2f       	mov	r22, r28
     92a:	83 e1       	ldi	r24, 0x13	; 19
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <qtm_init_sensor_key>
     932:	21 96       	adiw	r28, 0x01	; 1
     934:	c6 30       	cpi	r28, 0x06	; 6
     936:	d1 05       	cpc	r29, r1
     938:	70 f3       	brcs	.-36     	; 0x916 <__stack+0x17>
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	08 95       	ret

00000942 <qtm_error_callback>:
     942:	8f 5f       	subi	r24, 0xFF	; 255
     944:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <module_error_code>
     948:	0e 94 c9 03 	call	0x792	; 0x792 <datastreamer_output>
     94c:	08 95       	ret

0000094e <Timer_set_comp_a>:
     94e:	87 bd       	out	0x27, r24	; 39
     950:	08 95       	ret

00000952 <touch_init>:
     952:	88 e0       	ldi	r24, 0x08	; 8
     954:	0e 94 a7 04 	call	0x94e	; 0x94e <Timer_set_comp_a>
     958:	e3 e6       	ldi	r30, 0x63	; 99
     95a:	f0 e0       	ldi	r31, 0x00	; 0
     95c:	80 81       	ld	r24, Z
     95e:	87 7f       	andi	r24, 0xF7	; 247
     960:	80 83       	st	Z, r24
     962:	0e 94 56 04 	call	0x8ac	; 0x8ac <touch_ptc_pin_config>
     966:	0e 94 6d 04 	call	0x8da	; 0x8da <touch_sensors_config>
     96a:	0e 94 b9 03 	call	0x772	; 0x772 <datastreamer_init>
     96e:	08 95       	ret

00000970 <touch_process>:
     970:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <time_to_measure_touch_flag>
     974:	81 30       	cpi	r24, 0x01	; 1
     976:	51 f4       	brne	.+20     	; 0x98c <touch_process+0x1c>
     978:	69 e6       	ldi	r22, 0x69	; 105
     97a:	74 e0       	ldi	r23, 0x04	; 4
     97c:	87 e3       	ldi	r24, 0x37	; 55
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <qtm_ptc_start_measurement_seq>
     984:	81 11       	cpse	r24, r1
     986:	02 c0       	rjmp	.+4      	; 0x98c <touch_process+0x1c>
     988:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <time_to_measure_touch_flag>
     98c:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <touch_postprocess_request>
     990:	81 30       	cpi	r24, 0x01	; 1
     992:	19 f5       	brne	.+70     	; 0x9da <touch_process+0x6a>
     994:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <touch_postprocess_request>
     998:	0e 94 94 0b 	call	0x1728	; 0x1728 <qtm_acquisition_process>
     99c:	81 11       	cpse	r24, r1
     99e:	0a c0       	rjmp	.+20     	; 0x9b4 <touch_process+0x44>
     9a0:	83 e1       	ldi	r24, 0x13	; 19
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	0e 94 e6 06 	call	0xdcc	; 0xdcc <qtm_key_sensors_process>
     9a8:	88 23       	and	r24, r24
     9aa:	39 f0       	breq	.+14     	; 0x9ba <touch_process+0x4a>
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	0e 94 a1 04 	call	0x942	; 0x942 <qtm_error_callback>
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <touch_process+0x4a>
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	0e 94 a1 04 	call	0x942	; 0x942 <qtm_error_callback>
     9ba:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     9be:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     9c2:	80 81       	ld	r24, Z
     9c4:	88 23       	and	r24, r24
     9c6:	24 f4       	brge	.+8      	; 0x9d0 <touch_process+0x60>
     9c8:	81 e0       	ldi	r24, 0x01	; 1
     9ca:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <time_to_measure_touch_flag>
     9ce:	03 c0       	rjmp	.+6      	; 0x9d6 <touch_process+0x66>
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <measurement_done_touch>
     9d6:	0e 94 c9 03 	call	0x792	; 0x792 <datastreamer_output>
     9da:	08 95       	ret

000009dc <touch_timer_handler>:
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <time_to_measure_touch_flag>
     9e2:	84 e1       	ldi	r24, 0x14	; 20
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 bc 06 	call	0xd78	; 0xd78 <qtm_update_qtlib_timer>
     9ea:	08 95       	ret

000009ec <mega_touch_timer>:
     9ec:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <touch_time_counter.2335>
     9f0:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <touch_time_counter.2335+0x1>
     9f4:	44 97       	sbiw	r24, 0x14	; 20
     9f6:	39 f4       	brne	.+14     	; 0xa06 <mega_touch_timer+0x1a>
     9f8:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <touch_time_counter.2335+0x1>
     9fc:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <touch_time_counter.2335>
     a00:	0e 94 ee 04 	call	0x9dc	; 0x9dc <touch_timer_handler>
     a04:	08 95       	ret
     a06:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <touch_time_counter.2335>
     a0a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <touch_time_counter.2335+0x1>
     a0e:	01 96       	adiw	r24, 0x01	; 1
     a10:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <touch_time_counter.2335+0x1>
     a14:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <touch_time_counter.2335>
     a18:	08 95       	ret

00000a1a <get_sensor_node_signal>:
     a1a:	fc 01       	movw	r30, r24
     a1c:	ee 0f       	add	r30, r30
     a1e:	ff 1f       	adc	r31, r31
     a20:	ee 0f       	add	r30, r30
     a22:	ff 1f       	adc	r31, r31
     a24:	8e 0f       	add	r24, r30
     a26:	9f 1f       	adc	r25, r31
     a28:	fc 01       	movw	r30, r24
     a2a:	e2 54       	subi	r30, 0x42	; 66
     a2c:	fe 4f       	sbci	r31, 0xFE	; 254
     a2e:	81 81       	ldd	r24, Z+1	; 0x01
     a30:	92 81       	ldd	r25, Z+2	; 0x02
     a32:	08 95       	ret

00000a34 <get_sensor_node_reference>:
     a34:	fc 01       	movw	r30, r24
     a36:	ee 0f       	add	r30, r30
     a38:	ff 1f       	adc	r31, r31
     a3a:	e8 0f       	add	r30, r24
     a3c:	f9 1f       	adc	r31, r25
     a3e:	ee 0f       	add	r30, r30
     a40:	ff 1f       	adc	r31, r31
     a42:	e8 51       	subi	r30, 0x18	; 24
     a44:	fe 4f       	sbci	r31, 0xFE	; 254
     a46:	84 81       	ldd	r24, Z+4	; 0x04
     a48:	95 81       	ldd	r25, Z+5	; 0x05
     a4a:	08 95       	ret

00000a4c <get_sensor_cc_val>:
     a4c:	fc 01       	movw	r30, r24
     a4e:	ee 0f       	add	r30, r30
     a50:	ff 1f       	adc	r31, r31
     a52:	ee 0f       	add	r30, r30
     a54:	ff 1f       	adc	r31, r31
     a56:	8e 0f       	add	r24, r30
     a58:	9f 1f       	adc	r25, r31
     a5a:	fc 01       	movw	r30, r24
     a5c:	e2 54       	subi	r30, 0x42	; 66
     a5e:	fe 4f       	sbci	r31, 0xFE	; 254
     a60:	83 81       	ldd	r24, Z+3	; 0x03
     a62:	94 81       	ldd	r25, Z+4	; 0x04
     a64:	08 95       	ret

00000a66 <get_sensor_state>:
     a66:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     a6a:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     a6e:	9c 01       	movw	r18, r24
     a70:	22 0f       	add	r18, r18
     a72:	33 1f       	adc	r19, r19
     a74:	82 0f       	add	r24, r18
     a76:	93 1f       	adc	r25, r19
     a78:	88 0f       	add	r24, r24
     a7a:	99 1f       	adc	r25, r25
     a7c:	e8 0f       	add	r30, r24
     a7e:	f9 1f       	adc	r31, r25
     a80:	80 81       	ld	r24, Z
     a82:	08 95       	ret

00000a84 <__vector_39>:
     a84:	1f 92       	push	r1
     a86:	0f 92       	push	r0
     a88:	0f b6       	in	r0, 0x3f	; 63
     a8a:	0f 92       	push	r0
     a8c:	11 24       	eor	r1, r1
     a8e:	2f 93       	push	r18
     a90:	3f 93       	push	r19
     a92:	4f 93       	push	r20
     a94:	5f 93       	push	r21
     a96:	6f 93       	push	r22
     a98:	7f 93       	push	r23
     a9a:	8f 93       	push	r24
     a9c:	9f 93       	push	r25
     a9e:	af 93       	push	r26
     aa0:	bf 93       	push	r27
     aa2:	ef 93       	push	r30
     aa4:	ff 93       	push	r31
     aa6:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <qtm_m324pb_ptc_handler_eoc>
     aaa:	ff 91       	pop	r31
     aac:	ef 91       	pop	r30
     aae:	bf 91       	pop	r27
     ab0:	af 91       	pop	r26
     ab2:	9f 91       	pop	r25
     ab4:	8f 91       	pop	r24
     ab6:	7f 91       	pop	r23
     ab8:	6f 91       	pop	r22
     aba:	5f 91       	pop	r21
     abc:	4f 91       	pop	r20
     abe:	3f 91       	pop	r19
     ac0:	2f 91       	pop	r18
     ac2:	0f 90       	pop	r0
     ac4:	0f be       	out	0x3f, r0	; 63
     ac6:	0f 90       	pop	r0
     ac8:	1f 90       	pop	r1
     aca:	18 95       	reti

00000acc <SPI_0_initialization>:
     acc:	84 b1       	in	r24, 0x04	; 4
     ace:	8f 7b       	andi	r24, 0xBF	; 191
     ad0:	84 b9       	out	0x04, r24	; 4
     ad2:	85 b1       	in	r24, 0x05	; 5
     ad4:	8f 7b       	andi	r24, 0xBF	; 191
     ad6:	85 b9       	out	0x05, r24	; 5
     ad8:	84 b1       	in	r24, 0x04	; 4
     ada:	80 62       	ori	r24, 0x20	; 32
     adc:	84 b9       	out	0x04, r24	; 4
     ade:	85 b1       	in	r24, 0x05	; 5
     ae0:	8f 7d       	andi	r24, 0xDF	; 223
     ae2:	85 b9       	out	0x05, r24	; 5
     ae4:	84 b1       	in	r24, 0x04	; 4
     ae6:	80 68       	ori	r24, 0x80	; 128
     ae8:	84 b9       	out	0x04, r24	; 4
     aea:	85 b1       	in	r24, 0x05	; 5
     aec:	8f 77       	andi	r24, 0x7F	; 127
     aee:	85 b9       	out	0x05, r24	; 5
     af0:	0e 94 c3 05 	call	0xb86	; 0xb86 <SPI_0_init>
     af4:	08 95       	ret

00000af6 <Timer_initialization>:
     af6:	0e 94 1e 06 	call	0xc3c	; 0xc3c <Timer_init>
     afa:	08 95       	ret

00000afc <USART_initialization>:
     afc:	8a b1       	in	r24, 0x0a	; 10
     afe:	8e 7f       	andi	r24, 0xFE	; 254
     b00:	8a b9       	out	0x0a, r24	; 10
     b02:	8b b1       	in	r24, 0x0b	; 11
     b04:	8e 7f       	andi	r24, 0xFE	; 254
     b06:	8b b9       	out	0x0b, r24	; 11
     b08:	8a b1       	in	r24, 0x0a	; 10
     b0a:	82 60       	ori	r24, 0x02	; 2
     b0c:	8a b9       	out	0x0a, r24	; 10
     b0e:	8b b1       	in	r24, 0x0b	; 11
     b10:	8d 7f       	andi	r24, 0xFD	; 253
     b12:	8b b9       	out	0x0b, r24	; 11
     b14:	0e 94 2b 06 	call	0xc56	; 0xc56 <USART_init>
     b18:	08 95       	ret

00000b1a <system_init>:
     b1a:	83 e0       	ldi	r24, 0x03	; 3
     b1c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>
     b20:	8f ef       	ldi	r24, 0xFF	; 255
     b22:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
     b26:	9f e0       	ldi	r25, 0x0F	; 15
     b28:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
     b2c:	91 b1       	in	r25, 0x01	; 1
     b2e:	11 b8       	out	0x01, r1	; 1
     b30:	92 b1       	in	r25, 0x02	; 2
     b32:	82 b9       	out	0x02, r24	; 2
     b34:	94 b1       	in	r25, 0x04	; 4
     b36:	14 b8       	out	0x04, r1	; 4
     b38:	95 b1       	in	r25, 0x05	; 5
     b3a:	85 b9       	out	0x05, r24	; 5
     b3c:	97 b1       	in	r25, 0x07	; 7
     b3e:	17 b8       	out	0x07, r1	; 7
     b40:	98 b1       	in	r25, 0x08	; 8
     b42:	88 b9       	out	0x08, r24	; 8
     b44:	9a b1       	in	r25, 0x0a	; 10
     b46:	1a b8       	out	0x0a, r1	; 10
     b48:	9b b1       	in	r25, 0x0b	; 11
     b4a:	8b b9       	out	0x0b, r24	; 11
     b4c:	8d b1       	in	r24, 0x0d	; 13
     b4e:	80 78       	andi	r24, 0x80	; 128
     b50:	8d b9       	out	0x0d, r24	; 13
     b52:	8e b1       	in	r24, 0x0e	; 14
     b54:	8f 67       	ori	r24, 0x7F	; 127
     b56:	8e b9       	out	0x0e, r24	; 14
     b58:	40 e0       	ldi	r20, 0x00	; 0
     b5a:	60 e8       	ldi	r22, 0x80	; 128
     b5c:	81 e6       	ldi	r24, 0x61	; 97
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 bc 05 	call	0xb78	; 0xb78 <protected_write_io>
     b64:	13 be       	out	0x33, r1	; 51
     b66:	15 be       	out	0x35, r1	; 53
     b68:	78 94       	sei
     b6a:	0e 94 66 05 	call	0xacc	; 0xacc <SPI_0_initialization>
     b6e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <Timer_initialization>
     b72:	0e 94 7e 05 	call	0xafc	; 0xafc <USART_initialization>
     b76:	08 95       	ret

00000b78 <protected_write_io>:
     b78:	2f b7       	in	r18, 0x3f	; 63
     b7a:	f8 94       	cli
     b7c:	fc 01       	movw	r30, r24
     b7e:	60 83       	st	Z, r22
     b80:	40 83       	st	Z, r20
     b82:	2f bf       	out	0x3f, r18	; 63
     b84:	08 95       	ret

00000b86 <SPI_0_init>:
     b86:	e4 e6       	ldi	r30, 0x64	; 100
     b88:	f0 e0       	ldi	r31, 0x00	; 0
     b8a:	80 81       	ld	r24, Z
     b8c:	8b 7f       	andi	r24, 0xFB	; 251
     b8e:	80 83       	st	Z, r24
     b90:	80 ed       	ldi	r24, 0xD0	; 208
     b92:	8c bd       	out	0x2c, r24	; 44
     b94:	e1 ea       	ldi	r30, 0xA1	; 161
     b96:	f1 e0       	ldi	r31, 0x01	; 1
     b98:	10 82       	st	Z, r1
     b9a:	16 82       	std	Z+6, r1	; 0x06
     b9c:	15 82       	std	Z+5, r1	; 0x05
     b9e:	08 95       	ret

00000ba0 <__vector_19>:
     ba0:	1f 92       	push	r1
     ba2:	0f 92       	push	r0
     ba4:	0f b6       	in	r0, 0x3f	; 63
     ba6:	0f 92       	push	r0
     ba8:	11 24       	eor	r1, r1
     baa:	2f 93       	push	r18
     bac:	3f 93       	push	r19
     bae:	4f 93       	push	r20
     bb0:	5f 93       	push	r21
     bb2:	6f 93       	push	r22
     bb4:	7f 93       	push	r23
     bb6:	8f 93       	push	r24
     bb8:	9f 93       	push	r25
     bba:	af 93       	push	r26
     bbc:	bf 93       	push	r27
     bbe:	ef 93       	push	r30
     bc0:	ff 93       	push	r31
     bc2:	9e b5       	in	r25, 0x2e	; 46
     bc4:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <SPI_0_desc+0x4>
     bc8:	82 30       	cpi	r24, 0x02	; 2
     bca:	29 f0       	breq	.+10     	; 0xbd6 <__vector_19+0x36>
     bcc:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <SPI_0_desc+0x1>
     bd0:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <SPI_0_desc+0x2>
     bd4:	90 83       	st	Z, r25
     bd6:	e1 ea       	ldi	r30, 0xA1	; 161
     bd8:	f1 e0       	ldi	r31, 0x01	; 1
     bda:	a1 81       	ldd	r26, Z+1	; 0x01
     bdc:	b2 81       	ldd	r27, Z+2	; 0x02
     bde:	9d 01       	movw	r18, r26
     be0:	2f 5f       	subi	r18, 0xFF	; 255
     be2:	3f 4f       	sbci	r19, 0xFF	; 255
     be4:	32 83       	std	Z+2, r19	; 0x02
     be6:	21 83       	std	Z+1, r18	; 0x01
     be8:	81 30       	cpi	r24, 0x01	; 1
     bea:	19 f0       	breq	.+6      	; 0xbf2 <__vector_19+0x52>
     bec:	11 96       	adiw	r26, 0x01	; 1
     bee:	9c 91       	ld	r25, X
     bf0:	01 c0       	rjmp	.+2      	; 0xbf4 <__vector_19+0x54>
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	e1 ea       	ldi	r30, 0xA1	; 161
     bf6:	f1 e0       	ldi	r31, 0x01	; 1
     bf8:	83 81       	ldd	r24, Z+3	; 0x03
     bfa:	81 50       	subi	r24, 0x01	; 1
     bfc:	83 83       	std	Z+3, r24	; 0x03
     bfe:	88 23       	and	r24, r24
     c00:	11 f0       	breq	.+4      	; 0xc06 <__vector_19+0x66>
     c02:	9e bd       	out	0x2e, r25	; 46
     c04:	0a c0       	rjmp	.+20     	; 0xc1a <__vector_19+0x7a>
     c06:	e1 ea       	ldi	r30, 0xA1	; 161
     c08:	f1 e0       	ldi	r31, 0x01	; 1
     c0a:	83 e0       	ldi	r24, 0x03	; 3
     c0c:	80 83       	st	Z, r24
     c0e:	05 80       	ldd	r0, Z+5	; 0x05
     c10:	f6 81       	ldd	r31, Z+6	; 0x06
     c12:	e0 2d       	mov	r30, r0
     c14:	30 97       	sbiw	r30, 0x00	; 0
     c16:	09 f0       	breq	.+2      	; 0xc1a <__vector_19+0x7a>
     c18:	09 95       	icall
     c1a:	ff 91       	pop	r31
     c1c:	ef 91       	pop	r30
     c1e:	bf 91       	pop	r27
     c20:	af 91       	pop	r26
     c22:	9f 91       	pop	r25
     c24:	8f 91       	pop	r24
     c26:	7f 91       	pop	r23
     c28:	6f 91       	pop	r22
     c2a:	5f 91       	pop	r21
     c2c:	4f 91       	pop	r20
     c2e:	3f 91       	pop	r19
     c30:	2f 91       	pop	r18
     c32:	0f 90       	pop	r0
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	0f 90       	pop	r0
     c38:	1f 90       	pop	r1
     c3a:	18 95       	reti

00000c3c <Timer_init>:
     c3c:	e4 e6       	ldi	r30, 0x64	; 100
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 81       	ld	r24, Z
     c42:	8f 7d       	andi	r24, 0xDF	; 223
     c44:	80 83       	st	Z, r24
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	84 bd       	out	0x24, r24	; 36
     c4a:	95 e0       	ldi	r25, 0x05	; 5
     c4c:	95 bd       	out	0x25, r25	; 37
     c4e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	08 95       	ret

00000c56 <USART_init>:
     c56:	e4 e6       	ldi	r30, 0x64	; 100
     c58:	f0 e0       	ldi	r31, 0x00	; 0
     c5a:	80 81       	ld	r24, Z
     c5c:	8d 7f       	andi	r24, 0xFD	; 253
     c5e:	80 83       	st	Z, r24
     c60:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     c64:	8c e0       	ldi	r24, 0x0C	; 12
     c66:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     c6a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     c6e:	88 e0       	ldi	r24, 0x08	; 8
     c70:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	08 95       	ret

00000c78 <USART_is_tx_ready>:
     c78:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     c7c:	85 fb       	bst	r24, 5
     c7e:	88 27       	eor	r24, r24
     c80:	80 f9       	bld	r24, 0
     c82:	08 95       	ret

00000c84 <USART_is_tx_busy>:
     c84:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     c88:	82 95       	swap	r24
     c8a:	86 95       	lsr	r24
     c8c:	86 95       	lsr	r24
     c8e:	83 70       	andi	r24, 0x03	; 3
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	89 27       	eor	r24, r25
     c94:	81 70       	andi	r24, 0x01	; 1
     c96:	08 95       	ret

00000c98 <USART_write>:
     c98:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     c9c:	95 ff       	sbrs	r25, 5
     c9e:	fc cf       	rjmp	.-8      	; 0xc98 <USART_write>
     ca0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     ca4:	08 95       	ret

00000ca6 <check_for_aks_block>:
     ca6:	cf 92       	push	r12
     ca8:	df 92       	push	r13
     caa:	ff 92       	push	r15
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	ec 01       	movw	r28, r24
     cb6:	ae 81       	ldd	r26, Y+6	; 0x06
     cb8:	bf 81       	ldd	r27, Y+7	; 0x07
     cba:	eb 01       	movw	r28, r22
     cbc:	cc 0f       	add	r28, r28
     cbe:	dd 1f       	adc	r29, r29
     cc0:	c6 0f       	add	r28, r22
     cc2:	d7 1f       	adc	r29, r23
     cc4:	ca 0f       	add	r28, r26
     cc6:	db 1f       	adc	r29, r27
     cc8:	fa 80       	ldd	r15, Y+2	; 0x02
     cca:	fc 01       	movw	r30, r24
     ccc:	44 81       	ldd	r20, Z+4	; 0x04
     cce:	55 81       	ldd	r21, Z+5	; 0x05
     cd0:	e6 e0       	ldi	r30, 0x06	; 6
     cd2:	e6 9f       	mul	r30, r22
     cd4:	90 01       	movw	r18, r0
     cd6:	e7 9f       	mul	r30, r23
     cd8:	30 0d       	add	r19, r0
     cda:	11 24       	eor	r1, r1
     cdc:	8a 01       	movw	r16, r20
     cde:	02 0f       	add	r16, r18
     ce0:	13 1f       	adc	r17, r19
     ce2:	f8 01       	movw	r30, r16
     ce4:	22 81       	ldd	r18, Z+2	; 0x02
     ce6:	33 81       	ldd	r19, Z+3	; 0x03
     ce8:	f9 01       	movw	r30, r18
     cea:	21 81       	ldd	r18, Z+1	; 0x01
     cec:	32 81       	ldd	r19, Z+2	; 0x02
     cee:	f8 01       	movw	r30, r16
     cf0:	04 81       	ldd	r16, Z+4	; 0x04
     cf2:	15 81       	ldd	r17, Z+5	; 0x05
     cf4:	20 1b       	sub	r18, r16
     cf6:	31 0b       	sbc	r19, r17
     cf8:	e8 81       	ld	r30, Y
     cfa:	2e 1b       	sub	r18, r30
     cfc:	31 09       	sbc	r19, r1
     cfe:	ec 01       	movw	r28, r24
     d00:	ea 81       	ldd	r30, Y+2	; 0x02
     d02:	fb 81       	ldd	r31, Y+3	; 0x03
     d04:	00 81       	ld	r16, Z
     d06:	11 81       	ldd	r17, Z+1	; 0x01
     d08:	fa 01       	movw	r30, r20
     d0a:	40 e0       	ldi	r20, 0x00	; 0
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	40 17       	cp	r20, r16
     d10:	51 07       	cpc	r21, r17
     d12:	39 f1       	breq	.+78     	; 0xd62 <check_for_aks_block+0xbc>
     d14:	46 17       	cp	r20, r22
     d16:	57 07       	cpc	r21, r23
     d18:	f9 f0       	breq	.+62     	; 0xd58 <check_for_aks_block+0xb2>
     d1a:	12 96       	adiw	r26, 0x02	; 2
     d1c:	8c 91       	ld	r24, X
     d1e:	12 97       	sbiw	r26, 0x02	; 2
     d20:	f8 12       	cpse	r15, r24
     d22:	1a c0       	rjmp	.+52     	; 0xd58 <check_for_aks_block+0xb2>
     d24:	80 81       	ld	r24, Z
     d26:	85 58       	subi	r24, 0x85	; 133
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	e8 f0       	brcs	.+58     	; 0xd66 <check_for_aks_block+0xc0>
     d2c:	c4 80       	ldd	r12, Z+4	; 0x04
     d2e:	d5 80       	ldd	r13, Z+5	; 0x05
     d30:	82 81       	ldd	r24, Z+2	; 0x02
     d32:	93 81       	ldd	r25, Z+3	; 0x03
     d34:	ec 01       	movw	r28, r24
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	9a 81       	ldd	r25, Y+2	; 0x02
     d3a:	c8 16       	cp	r12, r24
     d3c:	d9 06       	cpc	r13, r25
     d3e:	60 f4       	brcc	.+24     	; 0xd58 <check_for_aks_block+0xb2>
     d40:	8c 19       	sub	r24, r12
     d42:	9d 09       	sbc	r25, r13
     d44:	cc 91       	ld	r28, X
     d46:	d0 e0       	ldi	r29, 0x00	; 0
     d48:	c8 17       	cp	r28, r24
     d4a:	d9 07       	cpc	r29, r25
     d4c:	28 f4       	brcc	.+10     	; 0xd58 <check_for_aks_block+0xb2>
     d4e:	8c 1b       	sub	r24, r28
     d50:	9d 0b       	sbc	r25, r29
     d52:	28 17       	cp	r18, r24
     d54:	39 07       	cpc	r19, r25
     d56:	38 f0       	brcs	.+14     	; 0xd66 <check_for_aks_block+0xc0>
     d58:	4f 5f       	subi	r20, 0xFF	; 255
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	13 96       	adiw	r26, 0x03	; 3
     d5e:	36 96       	adiw	r30, 0x06	; 6
     d60:	d6 cf       	rjmp	.-84     	; 0xd0e <check_for_aks_block+0x68>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	01 c0       	rjmp	.+2      	; 0xd68 <check_for_aks_block+0xc2>
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	df 91       	pop	r29
     d6a:	cf 91       	pop	r28
     d6c:	1f 91       	pop	r17
     d6e:	0f 91       	pop	r16
     d70:	ff 90       	pop	r15
     d72:	df 90       	pop	r13
     d74:	cf 90       	pop	r12
     d76:	08 95       	ret

00000d78 <qtm_update_qtlib_timer>:
     d78:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <qtm_local_ms_timecount>
     d7c:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <qtm_local_ms_timecount+0x1>
     d80:	82 0f       	add	r24, r18
     d82:	93 1f       	adc	r25, r19
     d84:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <qtm_local_ms_timecount+0x1>
     d88:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <qtm_local_ms_timecount>
     d8c:	08 95       	ret

00000d8e <qtm_init_sensor_key>:
     d8e:	00 97       	sbiw	r24, 0x00	; 0
     d90:	d9 f0       	breq	.+54     	; 0xdc8 <qtm_init_sensor_key+0x3a>
     d92:	41 15       	cp	r20, r1
     d94:	51 05       	cpc	r21, r1
     d96:	c1 f0       	breq	.+48     	; 0xdc8 <qtm_init_sensor_key+0x3a>
     d98:	26 e0       	ldi	r18, 0x06	; 6
     d9a:	62 9f       	mul	r22, r18
     d9c:	b0 01       	movw	r22, r0
     d9e:	11 24       	eor	r1, r1
     da0:	dc 01       	movw	r26, r24
     da2:	14 96       	adiw	r26, 0x04	; 4
     da4:	ed 91       	ld	r30, X+
     da6:	fc 91       	ld	r31, X
     da8:	15 97       	sbiw	r26, 0x05	; 5
     daa:	e6 0f       	add	r30, r22
     dac:	f7 1f       	adc	r31, r23
     dae:	21 e0       	ldi	r18, 0x01	; 1
     db0:	20 83       	st	Z, r18
     db2:	14 96       	adiw	r26, 0x04	; 4
     db4:	8d 91       	ld	r24, X+
     db6:	9c 91       	ld	r25, X
     db8:	15 97       	sbiw	r26, 0x05	; 5
     dba:	fc 01       	movw	r30, r24
     dbc:	e6 0f       	add	r30, r22
     dbe:	f7 1f       	adc	r31, r23
     dc0:	53 83       	std	Z+3, r21	; 0x03
     dc2:	42 83       	std	Z+2, r20	; 0x02
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	08 95       	ret
     dc8:	8b e0       	ldi	r24, 0x0B	; 11
     dca:	08 95       	ret

00000dcc <qtm_key_sensors_process>:
     dcc:	2f 92       	push	r2
     dce:	3f 92       	push	r3
     dd0:	4f 92       	push	r4
     dd2:	5f 92       	push	r5
     dd4:	6f 92       	push	r6
     dd6:	7f 92       	push	r7
     dd8:	8f 92       	push	r8
     dda:	9f 92       	push	r9
     ddc:	af 92       	push	r10
     dde:	bf 92       	push	r11
     de0:	cf 92       	push	r12
     de2:	df 92       	push	r13
     de4:	ef 92       	push	r14
     de6:	ff 92       	push	r15
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
     df0:	00 97       	sbiw	r24, 0x00	; 0
     df2:	09 f4       	brne	.+2      	; 0xdf6 <qtm_key_sensors_process+0x2a>
     df4:	7e c3       	rjmp	.+1788   	; 0x14f2 <qtm_key_sensors_process+0x726>
     df6:	ec 01       	movw	r28, r24
     df8:	a1 2c       	mov	r10, r1
     dfa:	b1 2c       	mov	r11, r1
     dfc:	81 2c       	mov	r8, r1
     dfe:	91 2c       	mov	r9, r1
     e00:	21 2c       	mov	r2, r1
     e02:	d1 2c       	mov	r13, r1
     e04:	55 24       	eor	r5, r5
     e06:	53 94       	inc	r5
     e08:	33 e0       	ldi	r19, 0x03	; 3
     e0a:	c3 2e       	mov	r12, r19
     e0c:	45 e8       	ldi	r20, 0x85	; 133
     e0e:	64 2e       	mov	r6, r20
     e10:	56 e8       	ldi	r21, 0x86	; 134
     e12:	75 2e       	mov	r7, r21
     e14:	62 e0       	ldi	r22, 0x02	; 2
     e16:	36 2e       	mov	r3, r22
     e18:	78 e0       	ldi	r23, 0x08	; 8
     e1a:	47 2e       	mov	r4, r23
     e1c:	ea 81       	ldd	r30, Y+2	; 0x02
     e1e:	fb 81       	ldd	r31, Y+3	; 0x03
     e20:	80 81       	ld	r24, Z
     e22:	91 81       	ldd	r25, Z+1	; 0x01
     e24:	88 16       	cp	r8, r24
     e26:	99 06       	cpc	r9, r25
     e28:	08 f0       	brcs	.+2      	; 0xe2c <qtm_key_sensors_process+0x60>
     e2a:	a6 c1       	rjmp	.+844    	; 0x1178 <qtm_key_sensors_process+0x3ac>
     e2c:	75 01       	movw	r14, r10
     e2e:	ee 0c       	add	r14, r14
     e30:	ff 1c       	adc	r15, r15
     e32:	ec 81       	ldd	r30, Y+4	; 0x04
     e34:	fd 81       	ldd	r31, Y+5	; 0x05
     e36:	ee 0d       	add	r30, r14
     e38:	ff 1d       	adc	r31, r15
     e3a:	a2 81       	ldd	r26, Z+2	; 0x02
     e3c:	b3 81       	ldd	r27, Z+3	; 0x03
     e3e:	9c 91       	ld	r25, X
     e40:	9e 71       	andi	r25, 0x1E	; 30
     e42:	09 f0       	breq	.+2      	; 0xe46 <qtm_key_sensors_process+0x7a>
     e44:	50 82       	st	Z, r5
     e46:	0c 81       	ldd	r16, Y+4	; 0x04
     e48:	1d 81       	ldd	r17, Y+5	; 0x05
     e4a:	0e 0d       	add	r16, r14
     e4c:	1f 1d       	adc	r17, r15
     e4e:	d8 01       	movw	r26, r16
     e50:	8c 91       	ld	r24, X
     e52:	84 30       	cpi	r24, 0x04	; 4
     e54:	09 f4       	brne	.+2      	; 0xe58 <qtm_key_sensors_process+0x8c>
     e56:	9e c0       	rjmp	.+316    	; 0xf94 <qtm_key_sensors_process+0x1c8>
     e58:	38 f4       	brcc	.+14     	; 0xe68 <qtm_key_sensors_process+0x9c>
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	d1 f0       	breq	.+52     	; 0xe92 <qtm_key_sensors_process+0xc6>
     e5e:	08 f0       	brcs	.+2      	; 0xe62 <qtm_key_sensors_process+0x96>
     e60:	45 c0       	rjmp	.+138    	; 0xeec <qtm_key_sensors_process+0x120>
     e62:	81 30       	cpi	r24, 0x01	; 1
     e64:	59 f0       	breq	.+22     	; 0xe7c <qtm_key_sensors_process+0xb0>
     e66:	81 c1       	rjmp	.+770    	; 0x116a <qtm_key_sensors_process+0x39e>
     e68:	85 38       	cpi	r24, 0x85	; 133
     e6a:	09 f4       	brne	.+2      	; 0xe6e <qtm_key_sensors_process+0xa2>
     e6c:	bf c0       	rjmp	.+382    	; 0xfec <qtm_key_sensors_process+0x220>
     e6e:	86 38       	cpi	r24, 0x86	; 134
     e70:	09 f4       	brne	.+2      	; 0xe74 <qtm_key_sensors_process+0xa8>
     e72:	f5 c0       	rjmp	.+490    	; 0x105e <qtm_key_sensors_process+0x292>
     e74:	87 30       	cpi	r24, 0x07	; 7
     e76:	09 f0       	breq	.+2      	; 0xe7a <qtm_key_sensors_process+0xae>
     e78:	78 c1       	rjmp	.+752    	; 0x116a <qtm_key_sensors_process+0x39e>
     e7a:	36 c1       	rjmp	.+620    	; 0x10e8 <qtm_key_sensors_process+0x31c>
     e7c:	91 11       	cpse	r25, r1
     e7e:	67 c1       	rjmp	.+718    	; 0x114e <qtm_key_sensors_process+0x382>
     e80:	f8 01       	movw	r30, r16
     e82:	30 82       	st	Z, r3
     e84:	8c 81       	ldd	r24, Y+4	; 0x04
     e86:	9d 81       	ldd	r25, Y+5	; 0x05
     e88:	fc 01       	movw	r30, r24
     e8a:	ee 0d       	add	r30, r14
     e8c:	ff 1d       	adc	r31, r15
     e8e:	41 82       	std	Z+1, r4	; 0x01
     e90:	5e c1       	rjmp	.+700    	; 0x114e <qtm_key_sensors_process+0x382>
     e92:	d8 01       	movw	r26, r16
     e94:	11 96       	adiw	r26, 0x01	; 1
     e96:	2c 91       	ld	r18, X
     e98:	11 97       	sbiw	r26, 0x01	; 1
     e9a:	22 23       	and	r18, r18
     e9c:	29 f1       	breq	.+74     	; 0xee8 <qtm_key_sensors_process+0x11c>
     e9e:	12 96       	adiw	r26, 0x02	; 2
     ea0:	ed 91       	ld	r30, X+
     ea2:	fc 91       	ld	r31, X
     ea4:	13 97       	sbiw	r26, 0x03	; 3
     ea6:	25 30       	cpi	r18, 0x05	; 5
     ea8:	18 f0       	brcs	.+6      	; 0xeb0 <qtm_key_sensors_process+0xe4>
     eaa:	81 81       	ldd	r24, Z+1	; 0x01
     eac:	92 81       	ldd	r25, Z+2	; 0x02
     eae:	0e c0       	rjmp	.+28     	; 0xecc <qtm_key_sensors_process+0x100>
     eb0:	d8 01       	movw	r26, r16
     eb2:	14 96       	adiw	r26, 0x04	; 4
     eb4:	8d 91       	ld	r24, X+
     eb6:	9c 91       	ld	r25, X
     eb8:	15 97       	sbiw	r26, 0x05	; 5
     eba:	41 81       	ldd	r20, Z+1	; 0x01
     ebc:	52 81       	ldd	r21, Z+2	; 0x02
     ebe:	84 17       	cp	r24, r20
     ec0:	95 07       	cpc	r25, r21
     ec2:	69 f0       	breq	.+26     	; 0xede <qtm_key_sensors_process+0x112>
     ec4:	48 17       	cp	r20, r24
     ec6:	59 07       	cpc	r21, r25
     ec8:	30 f4       	brcc	.+12     	; 0xed6 <qtm_key_sensors_process+0x10a>
     eca:	01 97       	sbiw	r24, 0x01	; 1
     ecc:	15 96       	adiw	r26, 0x05	; 5
     ece:	9c 93       	st	X, r25
     ed0:	8e 93       	st	-X, r24
     ed2:	14 97       	sbiw	r26, 0x04	; 4
     ed4:	04 c0       	rjmp	.+8      	; 0xede <qtm_key_sensors_process+0x112>
     ed6:	01 96       	adiw	r24, 0x01	; 1
     ed8:	f8 01       	movw	r30, r16
     eda:	95 83       	std	Z+5, r25	; 0x05
     edc:	84 83       	std	Z+4, r24	; 0x04
     ede:	21 50       	subi	r18, 0x01	; 1
     ee0:	d8 01       	movw	r26, r16
     ee2:	11 96       	adiw	r26, 0x01	; 1
     ee4:	2c 93       	st	X, r18
     ee6:	33 c1       	rjmp	.+614    	; 0x114e <qtm_key_sensors_process+0x382>
     ee8:	f8 01       	movw	r30, r16
     eea:	2d c1       	rjmp	.+602    	; 0x1146 <qtm_key_sensors_process+0x37a>
     eec:	d8 01       	movw	r26, r16
     eee:	14 96       	adiw	r26, 0x04	; 4
     ef0:	2d 91       	ld	r18, X+
     ef2:	3c 91       	ld	r19, X
     ef4:	15 97       	sbiw	r26, 0x05	; 5
     ef6:	12 96       	adiw	r26, 0x02	; 2
     ef8:	ed 91       	ld	r30, X+
     efa:	fc 91       	ld	r31, X
     efc:	13 97       	sbiw	r26, 0x03	; 3
     efe:	41 81       	ldd	r20, Z+1	; 0x01
     f00:	52 81       	ldd	r21, Z+2	; 0x02
     f02:	24 17       	cp	r18, r20
     f04:	35 07       	cpc	r19, r21
     f06:	09 f4       	brne	.+2      	; 0xf0a <qtm_key_sensors_process+0x13e>
     f08:	30 c1       	rjmp	.+608    	; 0x116a <qtm_key_sensors_process+0x39e>
     f0a:	8e 81       	ldd	r24, Y+6	; 0x06
     f0c:	9f 81       	ldd	r25, Y+7	; 0x07
     f0e:	42 17       	cp	r20, r18
     f10:	53 07       	cpc	r21, r19
     f12:	f8 f4       	brcc	.+62     	; 0xf52 <qtm_key_sensors_process+0x186>
     f14:	ea 81       	ldd	r30, Y+2	; 0x02
     f16:	fb 81       	ldd	r31, Y+3	; 0x03
     f18:	24 1b       	sub	r18, r20
     f1a:	35 0b       	sbc	r19, r21
     f1c:	dc 01       	movw	r26, r24
     f1e:	aa 0d       	add	r26, r10
     f20:	bb 1d       	adc	r27, r11
     f22:	8c 91       	ld	r24, X
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	05 80       	ldd	r0, Z+5	; 0x05
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <qtm_key_sensors_process+0x162>
     f2a:	95 95       	asr	r25
     f2c:	87 95       	ror	r24
     f2e:	0a 94       	dec	r0
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <qtm_key_sensors_process+0x15e>
     f32:	99 27       	eor	r25, r25
     f34:	28 17       	cp	r18, r24
     f36:	39 07       	cpc	r19, r25
     f38:	08 f4       	brcc	.+2      	; 0xf3c <qtm_key_sensors_process+0x170>
     f3a:	17 c1       	rjmp	.+558    	; 0x116a <qtm_key_sensors_process+0x39e>
     f3c:	84 81       	ldd	r24, Z+4	; 0x04
     f3e:	88 23       	and	r24, r24
     f40:	09 f4       	brne	.+2      	; 0xf44 <qtm_key_sensors_process+0x178>
     f42:	13 c1       	rjmp	.+550    	; 0x116a <qtm_key_sensors_process+0x39e>
     f44:	87 e0       	ldi	r24, 0x07	; 7
     f46:	f8 01       	movw	r30, r16
     f48:	80 83       	st	Z, r24
     f4a:	ea 81       	ldd	r30, Y+2	; 0x02
     f4c:	fb 81       	ldd	r31, Y+3	; 0x03
     f4e:	24 81       	ldd	r18, Z+4	; 0x04
     f50:	1a c0       	rjmp	.+52     	; 0xf86 <qtm_key_sensors_process+0x1ba>
     f52:	fc 01       	movw	r30, r24
     f54:	ea 0d       	add	r30, r10
     f56:	fb 1d       	adc	r31, r11
     f58:	42 1b       	sub	r20, r18
     f5a:	53 0b       	sbc	r21, r19
     f5c:	80 81       	ld	r24, Z
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	48 17       	cp	r20, r24
     f62:	59 07       	cpc	r21, r25
     f64:	08 f4       	brcc	.+2      	; 0xf68 <qtm_key_sensors_process+0x19c>
     f66:	01 c1       	rjmp	.+514    	; 0x116a <qtm_key_sensors_process+0x39e>
     f68:	82 81       	ldd	r24, Z+2	; 0x02
     f6a:	88 23       	and	r24, r24
     f6c:	31 f0       	breq	.+12     	; 0xf7a <qtm_key_sensors_process+0x1ae>
     f6e:	b4 01       	movw	r22, r8
     f70:	ce 01       	movw	r24, r28
     f72:	0e 94 53 06 	call	0xca6	; 0xca6 <check_for_aks_block>
     f76:	81 11       	cpse	r24, r1
     f78:	f8 c0       	rjmp	.+496    	; 0x116a <qtm_key_sensors_process+0x39e>
     f7a:	e4 e0       	ldi	r30, 0x04	; 4
     f7c:	d8 01       	movw	r26, r16
     f7e:	ec 93       	st	X, r30
     f80:	ea 81       	ldd	r30, Y+2	; 0x02
     f82:	fb 81       	ldd	r31, Y+3	; 0x03
     f84:	22 81       	ldd	r18, Z+2	; 0x02
     f86:	8c 81       	ldd	r24, Y+4	; 0x04
     f88:	9d 81       	ldd	r25, Y+5	; 0x05
     f8a:	fc 01       	movw	r30, r24
     f8c:	ee 0d       	add	r30, r14
     f8e:	ff 1d       	adc	r31, r15
     f90:	21 83       	std	Z+1, r18	; 0x01
     f92:	dd c0       	rjmp	.+442    	; 0x114e <qtm_key_sensors_process+0x382>
     f94:	d8 01       	movw	r26, r16
     f96:	14 96       	adiw	r26, 0x04	; 4
     f98:	2d 91       	ld	r18, X+
     f9a:	3c 91       	ld	r19, X
     f9c:	15 97       	sbiw	r26, 0x05	; 5
     f9e:	12 96       	adiw	r26, 0x02	; 2
     fa0:	ed 91       	ld	r30, X+
     fa2:	fc 91       	ld	r31, X
     fa4:	13 97       	sbiw	r26, 0x03	; 3
     fa6:	81 81       	ldd	r24, Z+1	; 0x01
     fa8:	92 81       	ldd	r25, Z+2	; 0x02
     faa:	82 17       	cp	r24, r18
     fac:	93 07       	cpc	r25, r19
     fae:	08 f4       	brcc	.+2      	; 0xfb2 <qtm_key_sensors_process+0x1e6>
     fb0:	bb c0       	rjmp	.+374    	; 0x1128 <qtm_key_sensors_process+0x35c>
     fb2:	ee 81       	ldd	r30, Y+6	; 0x06
     fb4:	ff 81       	ldd	r31, Y+7	; 0x07
     fb6:	ea 0d       	add	r30, r10
     fb8:	fb 1d       	adc	r31, r11
     fba:	82 1b       	sub	r24, r18
     fbc:	93 0b       	sbc	r25, r19
     fbe:	20 81       	ld	r18, Z
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	28 17       	cp	r18, r24
     fc4:	39 07       	cpc	r19, r25
     fc6:	08 f0       	brcs	.+2      	; 0xfca <qtm_key_sensors_process+0x1fe>
     fc8:	c5 c0       	rjmp	.+394    	; 0x1154 <qtm_key_sensors_process+0x388>
     fca:	82 81       	ldd	r24, Z+2	; 0x02
     fcc:	88 23       	and	r24, r24
     fce:	31 f0       	breq	.+12     	; 0xfdc <qtm_key_sensors_process+0x210>
     fd0:	b4 01       	movw	r22, r8
     fd2:	ce 01       	movw	r24, r28
     fd4:	0e 94 53 06 	call	0xca6	; 0xca6 <check_for_aks_block>
     fd8:	81 11       	cpse	r24, r1
     fda:	c7 c0       	rjmp	.+398    	; 0x116a <qtm_key_sensors_process+0x39e>
     fdc:	f8 01       	movw	r30, r16
     fde:	81 81       	ldd	r24, Z+1	; 0x01
     fe0:	88 23       	and	r24, r24
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <qtm_key_sensors_process+0x21a>
     fe4:	6a c0       	rjmp	.+212    	; 0x10ba <qtm_key_sensors_process+0x2ee>
     fe6:	81 50       	subi	r24, 0x01	; 1
     fe8:	81 83       	std	Z+1, r24	; 0x01
     fea:	b1 c0       	rjmp	.+354    	; 0x114e <qtm_key_sensors_process+0x382>
     fec:	e8 81       	ld	r30, Y
     fee:	f9 81       	ldd	r31, Y+1	; 0x01
     ff0:	aa 81       	ldd	r26, Y+2	; 0x02
     ff2:	bb 81       	ldd	r27, Y+3	; 0x03
     ff4:	18 96       	adiw	r26, 0x08	; 8
     ff6:	8c 91       	ld	r24, X
     ff8:	83 83       	std	Z+3, r24	; 0x03
     ffa:	ec 81       	ldd	r30, Y+4	; 0x04
     ffc:	fd 81       	ldd	r31, Y+5	; 0x05
     ffe:	ee 0d       	add	r30, r14
    1000:	ff 1d       	adc	r31, r15
    1002:	44 81       	ldd	r20, Z+4	; 0x04
    1004:	55 81       	ldd	r21, Z+5	; 0x05
    1006:	a2 81       	ldd	r26, Z+2	; 0x02
    1008:	b3 81       	ldd	r27, Z+3	; 0x03
    100a:	11 96       	adiw	r26, 0x01	; 1
    100c:	8d 91       	ld	r24, X+
    100e:	9c 91       	ld	r25, X
    1010:	12 97       	sbiw	r26, 0x02	; 2
    1012:	84 17       	cp	r24, r20
    1014:	95 07       	cpc	r25, r21
    1016:	c0 f0       	brcs	.+48     	; 0x1048 <qtm_key_sensors_process+0x27c>
    1018:	ae 81       	ldd	r26, Y+6	; 0x06
    101a:	bf 81       	ldd	r27, Y+7	; 0x07
    101c:	aa 0d       	add	r26, r10
    101e:	bb 1d       	adc	r27, r11
    1020:	6c 91       	ld	r22, X
    1022:	26 2f       	mov	r18, r22
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	11 96       	adiw	r26, 0x01	; 1
    1028:	7c 91       	ld	r23, X
    102a:	7f 5f       	subi	r23, 0xFF	; 255
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <qtm_key_sensors_process+0x266>
    102e:	35 95       	asr	r19
    1030:	27 95       	ror	r18
    1032:	7a 95       	dec	r23
    1034:	e2 f7       	brpl	.-8      	; 0x102e <qtm_key_sensors_process+0x262>
    1036:	84 1b       	sub	r24, r20
    1038:	95 0b       	sbc	r25, r21
    103a:	62 1b       	sub	r22, r18
    103c:	26 2f       	mov	r18, r22
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	28 17       	cp	r18, r24
    1042:	39 07       	cpc	r19, r25
    1044:	08 f4       	brcc	.+2      	; 0x1048 <qtm_key_sensors_process+0x27c>
    1046:	8f c0       	rjmp	.+286    	; 0x1166 <qtm_key_sensors_process+0x39a>
    1048:	70 82       	st	Z, r7
    104a:	ea 81       	ldd	r30, Y+2	; 0x02
    104c:	fb 81       	ldd	r31, Y+3	; 0x03
    104e:	22 81       	ldd	r18, Z+2	; 0x02
    1050:	8c 81       	ldd	r24, Y+4	; 0x04
    1052:	9d 81       	ldd	r25, Y+5	; 0x05
    1054:	fc 01       	movw	r30, r24
    1056:	ee 0d       	add	r30, r14
    1058:	ff 1d       	adc	r31, r15
    105a:	21 83       	std	Z+1, r18	; 0x01
    105c:	42 c0       	rjmp	.+132    	; 0x10e2 <qtm_key_sensors_process+0x316>
    105e:	d8 01       	movw	r26, r16
    1060:	14 96       	adiw	r26, 0x04	; 4
    1062:	6d 91       	ld	r22, X+
    1064:	7c 91       	ld	r23, X
    1066:	15 97       	sbiw	r26, 0x05	; 5
    1068:	12 96       	adiw	r26, 0x02	; 2
    106a:	ed 91       	ld	r30, X+
    106c:	fc 91       	ld	r31, X
    106e:	13 97       	sbiw	r26, 0x03	; 3
    1070:	21 81       	ldd	r18, Z+1	; 0x01
    1072:	32 81       	ldd	r19, Z+2	; 0x02
    1074:	26 17       	cp	r18, r22
    1076:	37 07       	cpc	r19, r23
    1078:	58 f4       	brcc	.+22     	; 0x1090 <qtm_key_sensors_process+0x2c4>
    107a:	11 96       	adiw	r26, 0x01	; 1
    107c:	8c 91       	ld	r24, X
    107e:	11 97       	sbiw	r26, 0x01	; 1
    1080:	81 11       	cpse	r24, r1
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <qtm_key_sensors_process+0x2bc>
    1084:	cc 92       	st	X, r12
    1086:	6f c0       	rjmp	.+222    	; 0x1166 <qtm_key_sensors_process+0x39a>
    1088:	81 50       	subi	r24, 0x01	; 1
    108a:	f8 01       	movw	r30, r16
    108c:	81 83       	std	Z+1, r24	; 0x01
    108e:	6b c0       	rjmp	.+214    	; 0x1166 <qtm_key_sensors_process+0x39a>
    1090:	ee 81       	ldd	r30, Y+6	; 0x06
    1092:	ff 81       	ldd	r31, Y+7	; 0x07
    1094:	ea 0d       	add	r30, r10
    1096:	fb 1d       	adc	r31, r11
    1098:	80 81       	ld	r24, Z
    109a:	48 2f       	mov	r20, r24
    109c:	50 e0       	ldi	r21, 0x00	; 0
    109e:	91 81       	ldd	r25, Z+1	; 0x01
    10a0:	9f 5f       	subi	r25, 0xFF	; 255
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <qtm_key_sensors_process+0x2dc>
    10a4:	55 95       	asr	r21
    10a6:	47 95       	ror	r20
    10a8:	9a 95       	dec	r25
    10aa:	e2 f7       	brpl	.-8      	; 0x10a4 <qtm_key_sensors_process+0x2d8>
    10ac:	26 1b       	sub	r18, r22
    10ae:	37 0b       	sbc	r19, r23
    10b0:	84 1b       	sub	r24, r20
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	82 17       	cp	r24, r18
    10b6:	93 07       	cpc	r25, r19
    10b8:	60 f4       	brcc	.+24     	; 0x10d2 <qtm_key_sensors_process+0x306>
    10ba:	d8 01       	movw	r26, r16
    10bc:	6c 92       	st	X, r6
    10be:	ea 81       	ldd	r30, Y+2	; 0x02
    10c0:	fb 81       	ldd	r31, Y+3	; 0x03
    10c2:	23 81       	ldd	r18, Z+3	; 0x03
    10c4:	8c 81       	ldd	r24, Y+4	; 0x04
    10c6:	9d 81       	ldd	r25, Y+5	; 0x05
    10c8:	fc 01       	movw	r30, r24
    10ca:	ee 0d       	add	r30, r14
    10cc:	ff 1d       	adc	r31, r15
    10ce:	21 83       	std	Z+1, r18	; 0x01
    10d0:	4a c0       	rjmp	.+148    	; 0x1166 <qtm_key_sensors_process+0x39a>
    10d2:	f8 01       	movw	r30, r16
    10d4:	81 81       	ldd	r24, Z+1	; 0x01
    10d6:	81 11       	cpse	r24, r1
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <qtm_key_sensors_process+0x312>
    10da:	c0 82       	st	Z, r12
    10dc:	44 c0       	rjmp	.+136    	; 0x1166 <qtm_key_sensors_process+0x39a>
    10de:	81 50       	subi	r24, 0x01	; 1
    10e0:	81 83       	std	Z+1, r24	; 0x01
    10e2:	22 24       	eor	r2, r2
    10e4:	23 94       	inc	r2
    10e6:	33 c0       	rjmp	.+102    	; 0x114e <qtm_key_sensors_process+0x382>
    10e8:	f8 01       	movw	r30, r16
    10ea:	24 81       	ldd	r18, Z+4	; 0x04
    10ec:	35 81       	ldd	r19, Z+5	; 0x05
    10ee:	02 80       	ldd	r0, Z+2	; 0x02
    10f0:	f3 81       	ldd	r31, Z+3	; 0x03
    10f2:	e0 2d       	mov	r30, r0
    10f4:	81 81       	ldd	r24, Z+1	; 0x01
    10f6:	92 81       	ldd	r25, Z+2	; 0x02
    10f8:	82 17       	cp	r24, r18
    10fa:	93 07       	cpc	r25, r19
    10fc:	58 f5       	brcc	.+86     	; 0x1154 <qtm_key_sensors_process+0x388>
    10fe:	28 1b       	sub	r18, r24
    1100:	39 0b       	sbc	r19, r25
    1102:	ee 81       	ldd	r30, Y+6	; 0x06
    1104:	ff 81       	ldd	r31, Y+7	; 0x07
    1106:	ea 0d       	add	r30, r10
    1108:	fb 1d       	adc	r31, r11
    110a:	80 81       	ld	r24, Z
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	ea 81       	ldd	r30, Y+2	; 0x02
    1110:	fb 81       	ldd	r31, Y+3	; 0x03
    1112:	05 80       	ldd	r0, Z+5	; 0x05
    1114:	02 c0       	rjmp	.+4      	; 0x111a <qtm_key_sensors_process+0x34e>
    1116:	95 95       	asr	r25
    1118:	87 95       	ror	r24
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <qtm_key_sensors_process+0x34a>
    111e:	99 27       	eor	r25, r25
    1120:	28 17       	cp	r18, r24
    1122:	39 07       	cpc	r19, r25
    1124:	18 f4       	brcc	.+6      	; 0x112c <qtm_key_sensors_process+0x360>
    1126:	d8 01       	movw	r26, r16
    1128:	cc 92       	st	X, r12
    112a:	16 c0       	rjmp	.+44     	; 0x1158 <qtm_key_sensors_process+0x38c>
    112c:	f8 01       	movw	r30, r16
    112e:	81 81       	ldd	r24, Z+1	; 0x01
    1130:	81 11       	cpse	r24, r1
    1132:	0b c0       	rjmp	.+22     	; 0x114a <qtm_key_sensors_process+0x37e>
    1134:	50 82       	st	Z, r5
    1136:	8c 81       	ldd	r24, Y+4	; 0x04
    1138:	9d 81       	ldd	r25, Y+5	; 0x05
    113a:	fc 01       	movw	r30, r24
    113c:	ee 0d       	add	r30, r14
    113e:	ff 1d       	adc	r31, r15
    1140:	02 80       	ldd	r0, Z+2	; 0x02
    1142:	f3 81       	ldd	r31, Z+3	; 0x03
    1144:	e0 2d       	mov	r30, r0
    1146:	c0 82       	st	Z, r12
    1148:	10 c0       	rjmp	.+32     	; 0x116a <qtm_key_sensors_process+0x39e>
    114a:	81 50       	subi	r24, 0x01	; 1
    114c:	81 83       	std	Z+1, r24	; 0x01
    114e:	dd 24       	eor	r13, r13
    1150:	d3 94       	inc	r13
    1152:	0b c0       	rjmp	.+22     	; 0x116a <qtm_key_sensors_process+0x39e>
    1154:	f8 01       	movw	r30, r16
    1156:	c0 82       	st	Z, r12
    1158:	8c 81       	ldd	r24, Y+4	; 0x04
    115a:	9d 81       	ldd	r25, Y+5	; 0x05
    115c:	fc 01       	movw	r30, r24
    115e:	ee 0d       	add	r30, r14
    1160:	ff 1d       	adc	r31, r15
    1162:	11 82       	std	Z+1, r1	; 0x01
    1164:	02 c0       	rjmp	.+4      	; 0x116a <qtm_key_sensors_process+0x39e>
    1166:	22 24       	eor	r2, r2
    1168:	23 94       	inc	r2
    116a:	ff ef       	ldi	r31, 0xFF	; 255
    116c:	8f 1a       	sub	r8, r31
    116e:	9f 0a       	sbc	r9, r31
    1170:	83 e0       	ldi	r24, 0x03	; 3
    1172:	a8 0e       	add	r10, r24
    1174:	b1 1c       	adc	r11, r1
    1176:	52 ce       	rjmp	.-860    	; 0xe1c <qtm_key_sensors_process+0x50>
    1178:	e8 81       	ld	r30, Y
    117a:	f9 81       	ldd	r31, Y+1	; 0x01
    117c:	80 81       	ld	r24, Z
    117e:	87 ff       	sbrs	r24, 7
    1180:	23 c0       	rjmp	.+70     	; 0x11c8 <qtm_key_sensors_process+0x3fc>
    1182:	40 e0       	ldi	r20, 0x00	; 0
    1184:	50 e0       	ldi	r21, 0x00	; 0
    1186:	20 e0       	ldi	r18, 0x00	; 0
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	ea 81       	ldd	r30, Y+2	; 0x02
    118c:	fb 81       	ldd	r31, Y+3	; 0x03
    118e:	80 81       	ld	r24, Z
    1190:	91 81       	ldd	r25, Z+1	; 0x01
    1192:	28 17       	cp	r18, r24
    1194:	39 07       	cpc	r19, r25
    1196:	98 f4       	brcc	.+38     	; 0x11be <qtm_key_sensors_process+0x3f2>
    1198:	ec 81       	ldd	r30, Y+4	; 0x04
    119a:	fd 81       	ldd	r31, Y+5	; 0x05
    119c:	e4 0f       	add	r30, r20
    119e:	f5 1f       	adc	r31, r21
    11a0:	a2 81       	ldd	r26, Z+2	; 0x02
    11a2:	b3 81       	ldd	r27, Z+3	; 0x03
    11a4:	8c 91       	ld	r24, X
    11a6:	80 fd       	sbrc	r24, 0
    11a8:	05 c0       	rjmp	.+10     	; 0x11b4 <qtm_key_sensors_process+0x3e8>
    11aa:	90 81       	ld	r25, Z
    11ac:	97 7f       	andi	r25, 0xF7	; 247
    11ae:	11 f0       	breq	.+4      	; 0x11b4 <qtm_key_sensors_process+0x3e8>
    11b0:	81 60       	ori	r24, 0x01	; 1
    11b2:	8c 93       	st	X, r24
    11b4:	2f 5f       	subi	r18, 0xFF	; 255
    11b6:	3f 4f       	sbci	r19, 0xFF	; 255
    11b8:	4a 5f       	subi	r20, 0xFA	; 250
    11ba:	5f 4f       	sbci	r21, 0xFF	; 255
    11bc:	e6 cf       	rjmp	.-52     	; 0x118a <qtm_key_sensors_process+0x3be>
    11be:	e8 81       	ld	r30, Y
    11c0:	f9 81       	ldd	r31, Y+1	; 0x01
    11c2:	80 81       	ld	r24, Z
    11c4:	8f 77       	andi	r24, 0x7F	; 127
    11c6:	80 83       	st	Z, r24
    11c8:	d1 10       	cpse	r13, r1
    11ca:	07 c0       	rjmp	.+14     	; 0x11da <qtm_key_sensors_process+0x40e>
    11cc:	e8 81       	ld	r30, Y
    11ce:	f9 81       	ldd	r31, Y+1	; 0x01
    11d0:	21 10       	cpse	r2, r1
    11d2:	6f c0       	rjmp	.+222    	; 0x12b2 <qtm_key_sensors_process+0x4e6>
    11d4:	80 81       	ld	r24, Z
    11d6:	8e 7f       	andi	r24, 0xFE	; 254
    11d8:	6e c0       	rjmp	.+220    	; 0x12b6 <qtm_key_sensors_process+0x4ea>
    11da:	ea 81       	ldd	r30, Y+2	; 0x02
    11dc:	fb 81       	ldd	r31, Y+3	; 0x03
    11de:	81 85       	ldd	r24, Z+9	; 0x09
    11e0:	88 23       	and	r24, r24
    11e2:	a1 f3       	breq	.-24     	; 0x11cc <qtm_key_sensors_process+0x400>
    11e4:	e8 81       	ld	r30, Y
    11e6:	f9 81       	ldd	r31, Y+1	; 0x01
    11e8:	80 81       	ld	r24, Z
    11ea:	80 68       	ori	r24, 0x80	; 128
    11ec:	80 83       	st	Z, r24
    11ee:	ea 81       	ldd	r30, Y+2	; 0x02
    11f0:	fb 81       	ldd	r31, Y+3	; 0x03
    11f2:	81 85       	ldd	r24, Z+9	; 0x09
    11f4:	81 30       	cpi	r24, 0x01	; 1
    11f6:	51 f7       	brne	.-44     	; 0x11cc <qtm_key_sensors_process+0x400>
    11f8:	40 e0       	ldi	r20, 0x00	; 0
    11fa:	50 e0       	ldi	r21, 0x00	; 0
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	96 e0       	ldi	r25, 0x06	; 6
    1202:	d9 2e       	mov	r13, r25
    1204:	ea 81       	ldd	r30, Y+2	; 0x02
    1206:	fb 81       	ldd	r31, Y+3	; 0x03
    1208:	60 81       	ld	r22, Z
    120a:	71 81       	ldd	r23, Z+1	; 0x01
    120c:	26 17       	cp	r18, r22
    120e:	37 07       	cpc	r19, r23
    1210:	e8 f6       	brcc	.-70     	; 0x11cc <qtm_key_sensors_process+0x400>
    1212:	0c 81       	ldd	r16, Y+4	; 0x04
    1214:	1d 81       	ldd	r17, Y+5	; 0x05
    1216:	fa 01       	movw	r30, r20
    1218:	ee 0f       	add	r30, r30
    121a:	ff 1f       	adc	r31, r31
    121c:	e0 0f       	add	r30, r16
    121e:	f1 1f       	adc	r31, r17
    1220:	80 81       	ld	r24, Z
    1222:	98 2f       	mov	r25, r24
    1224:	97 7f       	andi	r25, 0xF7	; 247
    1226:	a1 f1       	breq	.+104    	; 0x1290 <qtm_key_sensors_process+0x4c4>
    1228:	85 38       	cpi	r24, 0x85	; 133
    122a:	11 f0       	breq	.+4      	; 0x1230 <qtm_key_sensors_process+0x464>
    122c:	83 30       	cpi	r24, 0x03	; 3
    122e:	b1 f5       	brne	.+108    	; 0x129c <qtm_key_sensors_process+0x4d0>
    1230:	ee 80       	ldd	r14, Y+6	; 0x06
    1232:	ff 80       	ldd	r15, Y+7	; 0x07
    1234:	d7 01       	movw	r26, r14
    1236:	a4 0f       	add	r26, r20
    1238:	b5 1f       	adc	r27, r21
    123a:	12 96       	adiw	r26, 0x02	; 2
    123c:	bc 90       	ld	r11, X
    123e:	bb 20       	and	r11, r11
    1240:	39 f1       	breq	.+78     	; 0x1290 <qtm_key_sensors_process+0x4c4>
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	c1 2c       	mov	r12, r1
    1248:	86 17       	cp	r24, r22
    124a:	97 07       	cpc	r25, r23
    124c:	f8 f4       	brcc	.+62     	; 0x128c <qtm_key_sensors_process+0x4c0>
    124e:	28 17       	cp	r18, r24
    1250:	39 07       	cpc	r19, r25
    1252:	d1 f0       	breq	.+52     	; 0x1288 <qtm_key_sensors_process+0x4bc>
    1254:	d8 9e       	mul	r13, r24
    1256:	d0 01       	movw	r26, r0
    1258:	d9 9e       	mul	r13, r25
    125a:	b0 0d       	add	r27, r0
    125c:	11 24       	eor	r1, r1
    125e:	a0 0f       	add	r26, r16
    1260:	b1 1f       	adc	r27, r17
    1262:	ac 91       	ld	r26, X
    1264:	a4 30       	cpi	r26, 0x04	; 4
    1266:	11 f0       	breq	.+4      	; 0x126c <qtm_key_sensors_process+0x4a0>
    1268:	a6 38       	cpi	r26, 0x86	; 134
    126a:	71 f4       	brne	.+28     	; 0x1288 <qtm_key_sensors_process+0x4bc>
    126c:	dc 01       	movw	r26, r24
    126e:	aa 0f       	add	r26, r26
    1270:	bb 1f       	adc	r27, r27
    1272:	a8 0f       	add	r26, r24
    1274:	b9 1f       	adc	r27, r25
    1276:	ae 0d       	add	r26, r14
    1278:	bf 1d       	adc	r27, r15
    127a:	12 96       	adiw	r26, 0x02	; 2
    127c:	ac 91       	ld	r26, X
    127e:	ba 12       	cpse	r11, r26
    1280:	03 c0       	rjmp	.+6      	; 0x1288 <qtm_key_sensors_process+0x4bc>
    1282:	cb 01       	movw	r24, r22
    1284:	cc 24       	eor	r12, r12
    1286:	c3 94       	inc	r12
    1288:	01 96       	adiw	r24, 0x01	; 1
    128a:	de cf       	rjmp	.-68     	; 0x1248 <qtm_key_sensors_process+0x47c>
    128c:	c1 10       	cpse	r12, r1
    128e:	06 c0       	rjmp	.+12     	; 0x129c <qtm_key_sensors_process+0x4d0>
    1290:	02 80       	ldd	r0, Z+2	; 0x02
    1292:	f3 81       	ldd	r31, Z+3	; 0x03
    1294:	e0 2d       	mov	r30, r0
    1296:	80 81       	ld	r24, Z
    1298:	8e 7f       	andi	r24, 0xFE	; 254
    129a:	05 c0       	rjmp	.+10     	; 0x12a6 <qtm_key_sensors_process+0x4da>
    129c:	02 80       	ldd	r0, Z+2	; 0x02
    129e:	f3 81       	ldd	r31, Z+3	; 0x03
    12a0:	e0 2d       	mov	r30, r0
    12a2:	80 81       	ld	r24, Z
    12a4:	81 60       	ori	r24, 0x01	; 1
    12a6:	80 83       	st	Z, r24
    12a8:	2f 5f       	subi	r18, 0xFF	; 255
    12aa:	3f 4f       	sbci	r19, 0xFF	; 255
    12ac:	4d 5f       	subi	r20, 0xFD	; 253
    12ae:	5f 4f       	sbci	r21, 0xFF	; 255
    12b0:	a9 cf       	rjmp	.-174    	; 0x1204 <qtm_key_sensors_process+0x438>
    12b2:	80 81       	ld	r24, Z
    12b4:	81 60       	ori	r24, 0x01	; 1
    12b6:	80 83       	st	Z, r24
    12b8:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <qtm_local_ms_timecount>
    12bc:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <qtm_local_ms_timecount+0x1>
    12c0:	e8 81       	ld	r30, Y
    12c2:	f9 81       	ldd	r31, Y+1	; 0x01
    12c4:	21 81       	ldd	r18, Z+1	; 0x01
    12c6:	32 81       	ldd	r19, Z+2	; 0x02
    12c8:	a9 01       	movw	r20, r18
    12ca:	48 53       	subi	r20, 0x38	; 56
    12cc:	5f 4f       	sbci	r21, 0xFF	; 255
    12ce:	48 17       	cp	r20, r24
    12d0:	59 07       	cpc	r21, r25
    12d2:	38 f4       	brcc	.+14     	; 0x12e2 <qtm_key_sensors_process+0x516>
    12d4:	82 1b       	sub	r24, r18
    12d6:	93 0b       	sbc	r25, r19
    12d8:	aa 24       	eor	r10, r10
    12da:	a3 94       	inc	r10
    12dc:	a3 e0       	ldi	r26, 0x03	; 3
    12de:	ba 2e       	mov	r11, r26
    12e0:	44 c0       	rjmp	.+136    	; 0x136a <qtm_key_sensors_process+0x59e>
    12e2:	82 17       	cp	r24, r18
    12e4:	93 07       	cpc	r25, r19
    12e6:	10 f0       	brcs	.+4      	; 0x12ec <qtm_key_sensors_process+0x520>
    12e8:	80 e0       	ldi	r24, 0x00	; 0
    12ea:	04 c1       	rjmp	.+520    	; 0x14f4 <qtm_key_sensors_process+0x728>
    12ec:	82 1b       	sub	r24, r18
    12ee:	93 0b       	sbc	r25, r19
    12f0:	01 97       	sbiw	r24, 0x01	; 1
    12f2:	89 3c       	cpi	r24, 0xC9	; 201
    12f4:	91 05       	cpc	r25, r1
    12f6:	c0 f3       	brcs	.-16     	; 0x12e8 <qtm_key_sensors_process+0x51c>
    12f8:	ef cf       	rjmp	.-34     	; 0x12d8 <qtm_key_sensors_process+0x50c>
    12fa:	88 5c       	subi	r24, 0xC8	; 200
    12fc:	91 09       	sbc	r25, r1
    12fe:	e8 81       	ld	r30, Y
    1300:	f9 81       	ldd	r31, Y+1	; 0x01
    1302:	21 81       	ldd	r18, Z+1	; 0x01
    1304:	32 81       	ldd	r19, Z+2	; 0x02
    1306:	28 53       	subi	r18, 0x38	; 56
    1308:	3f 4f       	sbci	r19, 0xFF	; 255
    130a:	32 83       	std	Z+2, r19	; 0x02
    130c:	21 83       	std	Z+1, r18	; 0x01
    130e:	23 81       	ldd	r18, Z+3	; 0x03
    1310:	21 11       	cpse	r18, r1
    1312:	96 c0       	rjmp	.+300    	; 0x1440 <qtm_key_sensors_process+0x674>
    1314:	24 81       	ldd	r18, Z+4	; 0x04
    1316:	22 23       	and	r18, r18
    1318:	11 f0       	breq	.+4      	; 0x131e <qtm_key_sensors_process+0x552>
    131a:	21 50       	subi	r18, 0x01	; 1
    131c:	24 83       	std	Z+4, r18	; 0x04
    131e:	e8 81       	ld	r30, Y
    1320:	f9 81       	ldd	r31, Y+1	; 0x01
    1322:	25 81       	ldd	r18, Z+5	; 0x05
    1324:	22 23       	and	r18, r18
    1326:	11 f0       	breq	.+4      	; 0x132c <qtm_key_sensors_process+0x560>
    1328:	21 50       	subi	r18, 0x01	; 1
    132a:	25 83       	std	Z+5, r18	; 0x05
    132c:	8a 80       	ldd	r8, Y+2	; 0x02
    132e:	9b 80       	ldd	r9, Y+3	; 0x03
    1330:	d4 01       	movw	r26, r8
    1332:	16 96       	adiw	r26, 0x06	; 6
    1334:	2c 91       	ld	r18, X
    1336:	16 97       	sbiw	r26, 0x06	; 6
    1338:	21 11       	cpse	r18, r1
    133a:	1b c0       	rjmp	.+54     	; 0x1372 <qtm_key_sensors_process+0x5a6>
    133c:	8a 80       	ldd	r8, Y+2	; 0x02
    133e:	9b 80       	ldd	r9, Y+3	; 0x03
    1340:	f4 01       	movw	r30, r8
    1342:	27 81       	ldd	r18, Z+7	; 0x07
    1344:	21 11       	cpse	r18, r1
    1346:	48 c0       	rjmp	.+144    	; 0x13d8 <qtm_key_sensors_process+0x60c>
    1348:	ea 81       	ldd	r30, Y+2	; 0x02
    134a:	fb 81       	ldd	r31, Y+3	; 0x03
    134c:	23 81       	ldd	r18, Z+3	; 0x03
    134e:	22 23       	and	r18, r18
    1350:	61 f0       	breq	.+24     	; 0x136a <qtm_key_sensors_process+0x59e>
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	a0 e0       	ldi	r26, 0x00	; 0
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	ea 81       	ldd	r30, Y+2	; 0x02
    135c:	fb 81       	ldd	r31, Y+3	; 0x03
    135e:	40 81       	ld	r20, Z
    1360:	51 81       	ldd	r21, Z+1	; 0x01
    1362:	a4 17       	cp	r26, r20
    1364:	b5 07       	cpc	r27, r21
    1366:	08 f4       	brcc	.+2      	; 0x136a <qtm_key_sensors_process+0x59e>
    1368:	6e c0       	rjmp	.+220    	; 0x1446 <qtm_key_sensors_process+0x67a>
    136a:	89 3c       	cpi	r24, 0xC9	; 201
    136c:	91 05       	cpc	r25, r1
    136e:	28 f6       	brcc	.-118    	; 0x12fa <qtm_key_sensors_process+0x52e>
    1370:	bb cf       	rjmp	.-138    	; 0x12e8 <qtm_key_sensors_process+0x51c>
    1372:	08 81       	ld	r16, Y
    1374:	19 81       	ldd	r17, Y+1	; 0x01
    1376:	f8 01       	movw	r30, r16
    1378:	24 81       	ldd	r18, Z+4	; 0x04
    137a:	21 11       	cpse	r18, r1
    137c:	df cf       	rjmp	.-66     	; 0x133c <qtm_key_sensors_process+0x570>
    137e:	ed 90       	ld	r14, X+
    1380:	fc 90       	ld	r15, X
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	70 e0       	ldi	r23, 0x00	; 0
    1386:	40 e0       	ldi	r20, 0x00	; 0
    1388:	50 e0       	ldi	r21, 0x00	; 0
    138a:	4e 15       	cp	r20, r14
    138c:	5f 05       	cpc	r21, r15
    138e:	f1 f0       	breq	.+60     	; 0x13cc <qtm_key_sensors_process+0x600>
    1390:	ec 81       	ldd	r30, Y+4	; 0x04
    1392:	fd 81       	ldd	r31, Y+5	; 0x05
    1394:	e6 0f       	add	r30, r22
    1396:	f7 1f       	adc	r31, r23
    1398:	20 81       	ld	r18, Z
    139a:	23 30       	cpi	r18, 0x03	; 3
    139c:	11 f0       	breq	.+4      	; 0x13a2 <qtm_key_sensors_process+0x5d6>
    139e:	28 30       	cpi	r18, 0x08	; 8
    13a0:	81 f4       	brne	.+32     	; 0x13c2 <qtm_key_sensors_process+0x5f6>
    13a2:	24 81       	ldd	r18, Z+4	; 0x04
    13a4:	35 81       	ldd	r19, Z+5	; 0x05
    13a6:	c2 80       	ldd	r12, Z+2	; 0x02
    13a8:	d3 80       	ldd	r13, Z+3	; 0x03
    13aa:	d6 01       	movw	r26, r12
    13ac:	11 96       	adiw	r26, 0x01	; 1
    13ae:	cd 90       	ld	r12, X+
    13b0:	dc 90       	ld	r13, X
    13b2:	12 97       	sbiw	r26, 0x02	; 2
    13b4:	2c 15       	cp	r18, r12
    13b6:	3d 05       	cpc	r19, r13
    13b8:	20 f4       	brcc	.+8      	; 0x13c2 <qtm_key_sensors_process+0x5f6>
    13ba:	2f 5f       	subi	r18, 0xFF	; 255
    13bc:	3f 4f       	sbci	r19, 0xFF	; 255
    13be:	35 83       	std	Z+5, r19	; 0x05
    13c0:	24 83       	std	Z+4, r18	; 0x04
    13c2:	4f 5f       	subi	r20, 0xFF	; 255
    13c4:	5f 4f       	sbci	r21, 0xFF	; 255
    13c6:	6a 5f       	subi	r22, 0xFA	; 250
    13c8:	7f 4f       	sbci	r23, 0xFF	; 255
    13ca:	df cf       	rjmp	.-66     	; 0x138a <qtm_key_sensors_process+0x5be>
    13cc:	f4 01       	movw	r30, r8
    13ce:	26 81       	ldd	r18, Z+6	; 0x06
    13d0:	d8 01       	movw	r26, r16
    13d2:	14 96       	adiw	r26, 0x04	; 4
    13d4:	2c 93       	st	X, r18
    13d6:	b2 cf       	rjmp	.-156    	; 0x133c <qtm_key_sensors_process+0x570>
    13d8:	08 81       	ld	r16, Y
    13da:	19 81       	ldd	r17, Y+1	; 0x01
    13dc:	d8 01       	movw	r26, r16
    13de:	15 96       	adiw	r26, 0x05	; 5
    13e0:	2c 91       	ld	r18, X
    13e2:	21 11       	cpse	r18, r1
    13e4:	b1 cf       	rjmp	.-158    	; 0x1348 <qtm_key_sensors_process+0x57c>
    13e6:	e0 80       	ld	r14, Z
    13e8:	f1 80       	ldd	r15, Z+1	; 0x01
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	40 e0       	ldi	r20, 0x00	; 0
    13f0:	50 e0       	ldi	r21, 0x00	; 0
    13f2:	4e 15       	cp	r20, r14
    13f4:	5f 05       	cpc	r21, r15
    13f6:	f1 f0       	breq	.+60     	; 0x1434 <qtm_key_sensors_process+0x668>
    13f8:	ec 81       	ldd	r30, Y+4	; 0x04
    13fa:	fd 81       	ldd	r31, Y+5	; 0x05
    13fc:	e6 0f       	add	r30, r22
    13fe:	f7 1f       	adc	r31, r23
    1400:	20 81       	ld	r18, Z
    1402:	23 30       	cpi	r18, 0x03	; 3
    1404:	11 f0       	breq	.+4      	; 0x140a <qtm_key_sensors_process+0x63e>
    1406:	28 30       	cpi	r18, 0x08	; 8
    1408:	81 f4       	brne	.+32     	; 0x142a <qtm_key_sensors_process+0x65e>
    140a:	24 81       	ldd	r18, Z+4	; 0x04
    140c:	35 81       	ldd	r19, Z+5	; 0x05
    140e:	c2 80       	ldd	r12, Z+2	; 0x02
    1410:	d3 80       	ldd	r13, Z+3	; 0x03
    1412:	d6 01       	movw	r26, r12
    1414:	11 96       	adiw	r26, 0x01	; 1
    1416:	cd 90       	ld	r12, X+
    1418:	dc 90       	ld	r13, X
    141a:	12 97       	sbiw	r26, 0x02	; 2
    141c:	c2 16       	cp	r12, r18
    141e:	d3 06       	cpc	r13, r19
    1420:	20 f4       	brcc	.+8      	; 0x142a <qtm_key_sensors_process+0x65e>
    1422:	21 50       	subi	r18, 0x01	; 1
    1424:	31 09       	sbc	r19, r1
    1426:	35 83       	std	Z+5, r19	; 0x05
    1428:	24 83       	std	Z+4, r18	; 0x04
    142a:	4f 5f       	subi	r20, 0xFF	; 255
    142c:	5f 4f       	sbci	r21, 0xFF	; 255
    142e:	6a 5f       	subi	r22, 0xFA	; 250
    1430:	7f 4f       	sbci	r23, 0xFF	; 255
    1432:	df cf       	rjmp	.-66     	; 0x13f2 <qtm_key_sensors_process+0x626>
    1434:	f4 01       	movw	r30, r8
    1436:	27 81       	ldd	r18, Z+7	; 0x07
    1438:	d8 01       	movw	r26, r16
    143a:	15 96       	adiw	r26, 0x05	; 5
    143c:	2c 93       	st	X, r18
    143e:	84 cf       	rjmp	.-248    	; 0x1348 <qtm_key_sensors_process+0x57c>
    1440:	21 50       	subi	r18, 0x01	; 1
    1442:	23 83       	std	Z+3, r18	; 0x03
    1444:	81 cf       	rjmp	.-254    	; 0x1348 <qtm_key_sensors_process+0x57c>
    1446:	a9 01       	movw	r20, r18
    1448:	44 0f       	add	r20, r20
    144a:	55 1f       	adc	r21, r21
    144c:	ec 81       	ldd	r30, Y+4	; 0x04
    144e:	fd 81       	ldd	r31, Y+5	; 0x05
    1450:	e4 0f       	add	r30, r20
    1452:	f5 1f       	adc	r31, r21
    1454:	60 81       	ld	r22, Z
    1456:	65 38       	cpi	r22, 0x85	; 133
    1458:	09 f0       	breq	.+2      	; 0x145c <qtm_key_sensors_process+0x690>
    145a:	47 c0       	rjmp	.+142    	; 0x14ea <qtm_key_sensors_process+0x71e>
    145c:	61 81       	ldd	r22, Z+1	; 0x01
    145e:	66 23       	and	r22, r22
    1460:	19 f0       	breq	.+6      	; 0x1468 <qtm_key_sensors_process+0x69c>
    1462:	61 50       	subi	r22, 0x01	; 1
    1464:	61 83       	std	Z+1, r22	; 0x01
    1466:	41 c0       	rjmp	.+130    	; 0x14ea <qtm_key_sensors_process+0x71e>
    1468:	a0 82       	st	Z, r10
    146a:	6c 81       	ldd	r22, Y+4	; 0x04
    146c:	7d 81       	ldd	r23, Y+5	; 0x05
    146e:	fb 01       	movw	r30, r22
    1470:	e4 0f       	add	r30, r20
    1472:	f5 1f       	adc	r31, r21
    1474:	02 80       	ldd	r0, Z+2	; 0x02
    1476:	f3 81       	ldd	r31, Z+3	; 0x03
    1478:	e0 2d       	mov	r30, r0
    147a:	b0 82       	st	Z, r11
    147c:	ee 81       	ldd	r30, Y+6	; 0x06
    147e:	ff 81       	ldd	r31, Y+7	; 0x07
    1480:	e2 0f       	add	r30, r18
    1482:	f3 1f       	adc	r31, r19
    1484:	d2 80       	ldd	r13, Z+2	; 0x02
    1486:	dd 20       	and	r13, r13
    1488:	81 f1       	breq	.+96     	; 0x14ea <qtm_key_sensors_process+0x71e>
    148a:	40 e0       	ldi	r20, 0x00	; 0
    148c:	50 e0       	ldi	r21, 0x00	; 0
    148e:	00 e0       	ldi	r16, 0x00	; 0
    1490:	10 e0       	ldi	r17, 0x00	; 0
    1492:	ea 81       	ldd	r30, Y+2	; 0x02
    1494:	fb 81       	ldd	r31, Y+3	; 0x03
    1496:	60 81       	ld	r22, Z
    1498:	71 81       	ldd	r23, Z+1	; 0x01
    149a:	06 17       	cp	r16, r22
    149c:	17 07       	cpc	r17, r23
    149e:	28 f5       	brcc	.+74     	; 0x14ea <qtm_key_sensors_process+0x71e>
    14a0:	ee 81       	ldd	r30, Y+6	; 0x06
    14a2:	ff 81       	ldd	r31, Y+7	; 0x07
    14a4:	e4 0f       	add	r30, r20
    14a6:	f5 1f       	adc	r31, r21
    14a8:	62 81       	ldd	r22, Z+2	; 0x02
    14aa:	d6 12       	cpse	r13, r22
    14ac:	19 c0       	rjmp	.+50     	; 0x14e0 <qtm_key_sensors_process+0x714>
    14ae:	ba 01       	movw	r22, r20
    14b0:	66 0f       	add	r22, r22
    14b2:	77 1f       	adc	r23, r23
    14b4:	ec 81       	ldd	r30, Y+4	; 0x04
    14b6:	fd 81       	ldd	r31, Y+5	; 0x05
    14b8:	4f 01       	movw	r8, r30
    14ba:	86 0e       	add	r8, r22
    14bc:	97 1e       	adc	r9, r23
    14be:	f4 01       	movw	r30, r8
    14c0:	e2 80       	ldd	r14, Z+2	; 0x02
    14c2:	f3 80       	ldd	r15, Z+3	; 0x03
    14c4:	f7 01       	movw	r30, r14
    14c6:	f0 80       	ld	r15, Z
    14c8:	f0 fe       	sbrs	r15, 0
    14ca:	0a c0       	rjmp	.+20     	; 0x14e0 <qtm_key_sensors_process+0x714>
    14cc:	f4 01       	movw	r30, r8
    14ce:	a0 82       	st	Z, r10
    14d0:	ec 81       	ldd	r30, Y+4	; 0x04
    14d2:	fd 81       	ldd	r31, Y+5	; 0x05
    14d4:	e6 0f       	add	r30, r22
    14d6:	f7 1f       	adc	r31, r23
    14d8:	02 80       	ldd	r0, Z+2	; 0x02
    14da:	f3 81       	ldd	r31, Z+3	; 0x03
    14dc:	e0 2d       	mov	r30, r0
    14de:	b0 82       	st	Z, r11
    14e0:	0f 5f       	subi	r16, 0xFF	; 255
    14e2:	1f 4f       	sbci	r17, 0xFF	; 255
    14e4:	4d 5f       	subi	r20, 0xFD	; 253
    14e6:	5f 4f       	sbci	r21, 0xFF	; 255
    14e8:	d4 cf       	rjmp	.-88     	; 0x1492 <qtm_key_sensors_process+0x6c6>
    14ea:	11 96       	adiw	r26, 0x01	; 1
    14ec:	2d 5f       	subi	r18, 0xFD	; 253
    14ee:	3f 4f       	sbci	r19, 0xFF	; 255
    14f0:	34 cf       	rjmp	.-408    	; 0x135a <qtm_key_sensors_process+0x58e>
    14f2:	8b e0       	ldi	r24, 0x0B	; 11
    14f4:	df 91       	pop	r29
    14f6:	cf 91       	pop	r28
    14f8:	1f 91       	pop	r17
    14fa:	0f 91       	pop	r16
    14fc:	ff 90       	pop	r15
    14fe:	ef 90       	pop	r14
    1500:	df 90       	pop	r13
    1502:	cf 90       	pop	r12
    1504:	bf 90       	pop	r11
    1506:	af 90       	pop	r10
    1508:	9f 90       	pop	r9
    150a:	8f 90       	pop	r8
    150c:	7f 90       	pop	r7
    150e:	6f 90       	pop	r6
    1510:	5f 90       	pop	r5
    1512:	4f 90       	pop	r4
    1514:	3f 90       	pop	r3
    1516:	2f 90       	pop	r2
    1518:	08 95       	ret

0000151a <select_next_channel_to_measure>:
    151a:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <current_measure_channel>
    151e:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <current_measure_channel+0x1>
    1522:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1526:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    152a:	ed 91       	ld	r30, X+
    152c:	fc 91       	ld	r31, X
    152e:	11 97       	sbiw	r26, 0x01	; 1
    1530:	40 81       	ld	r20, Z
    1532:	51 81       	ldd	r21, Z+1	; 0x01
    1534:	25 e0       	ldi	r18, 0x05	; 5
    1536:	28 9f       	mul	r18, r24
    1538:	b0 01       	movw	r22, r0
    153a:	29 9f       	mul	r18, r25
    153c:	70 0d       	add	r23, r0
    153e:	11 24       	eor	r1, r1
    1540:	20 e0       	ldi	r18, 0x00	; 0
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	84 17       	cp	r24, r20
    1546:	95 07       	cpc	r25, r21
    1548:	a8 f4       	brcc	.+42     	; 0x1574 <select_next_channel_to_measure+0x5a>
    154a:	14 96       	adiw	r26, 0x04	; 4
    154c:	ed 91       	ld	r30, X+
    154e:	fc 91       	ld	r31, X
    1550:	15 97       	sbiw	r26, 0x05	; 5
    1552:	e2 0f       	add	r30, r18
    1554:	f3 1f       	adc	r31, r19
    1556:	e6 0f       	add	r30, r22
    1558:	f7 1f       	adc	r31, r23
    155a:	e0 81       	ld	r30, Z
    155c:	2b 5f       	subi	r18, 0xFB	; 251
    155e:	3f 4f       	sbci	r19, 0xFF	; 255
    1560:	e0 fd       	sbrc	r30, 0
    1562:	02 c0       	rjmp	.+4      	; 0x1568 <select_next_channel_to_measure+0x4e>
    1564:	01 96       	adiw	r24, 0x01	; 1
    1566:	ee cf       	rjmp	.-36     	; 0x1544 <select_next_channel_to_measure+0x2a>
    1568:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <current_measure_channel+0x1>
    156c:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <current_measure_channel>
    1570:	80 e0       	ldi	r24, 0x00	; 0
    1572:	08 95       	ret
    1574:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <current_measure_channel+0x1>
    1578:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <current_measure_channel>
    157c:	81 e0       	ldi	r24, 0x01	; 1
    157e:	08 95       	ret

00001580 <qtm_measure_node>:
    1580:	4a e0       	ldi	r20, 0x0A	; 10
    1582:	48 9f       	mul	r20, r24
    1584:	90 01       	movw	r18, r0
    1586:	49 9f       	mul	r20, r25
    1588:	30 0d       	add	r19, r0
    158a:	11 24       	eor	r1, r1
    158c:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1590:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1594:	02 80       	ldd	r0, Z+2	; 0x02
    1596:	f3 81       	ldd	r31, Z+3	; 0x03
    1598:	e0 2d       	mov	r30, r0
    159a:	e2 0f       	add	r30, r18
    159c:	f3 1f       	adc	r31, r19
    159e:	42 81       	ldd	r20, Z+2	; 0x02
    15a0:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    15a4:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    15a8:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    15ac:	02 80       	ldd	r0, Z+2	; 0x02
    15ae:	f3 81       	ldd	r31, Z+3	; 0x03
    15b0:	e0 2d       	mov	r30, r0
    15b2:	e2 0f       	add	r30, r18
    15b4:	f3 1f       	adc	r31, r19
    15b6:	43 81       	ldd	r20, Z+3	; 0x03
    15b8:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    15bc:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    15c0:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    15c4:	02 80       	ldd	r0, Z+2	; 0x02
    15c6:	f3 81       	ldd	r31, Z+3	; 0x03
    15c8:	e0 2d       	mov	r30, r0
    15ca:	e2 0f       	add	r30, r18
    15cc:	f3 1f       	adc	r31, r19
    15ce:	44 81       	ldd	r20, Z+4	; 0x04
    15d0:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    15d4:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    15d8:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    15dc:	02 80       	ldd	r0, Z+2	; 0x02
    15de:	f3 81       	ldd	r31, Z+3	; 0x03
    15e0:	e0 2d       	mov	r30, r0
    15e2:	e2 0f       	add	r30, r18
    15e4:	f3 1f       	adc	r31, r19
    15e6:	42 81       	ldd	r20, Z+2	; 0x02
    15e8:	53 81       	ldd	r21, Z+3	; 0x03
    15ea:	64 81       	ldd	r22, Z+4	; 0x04
    15ec:	75 81       	ldd	r23, Z+5	; 0x05
    15ee:	47 2f       	mov	r20, r23
    15f0:	55 27       	eor	r21, r21
    15f2:	66 27       	eor	r22, r22
    15f4:	77 27       	eor	r23, r23
    15f6:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    15fa:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    15fe:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1602:	02 80       	ldd	r0, Z+2	; 0x02
    1604:	f3 81       	ldd	r31, Z+3	; 0x03
    1606:	e0 2d       	mov	r30, r0
    1608:	e2 0f       	add	r30, r18
    160a:	f3 1f       	adc	r31, r19
    160c:	40 81       	ld	r20, Z
    160e:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    1612:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1616:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    161a:	02 80       	ldd	r0, Z+2	; 0x02
    161c:	f3 81       	ldd	r31, Z+3	; 0x03
    161e:	e0 2d       	mov	r30, r0
    1620:	e2 0f       	add	r30, r18
    1622:	f3 1f       	adc	r31, r19
    1624:	41 81       	ldd	r20, Z+1	; 0x01
    1626:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    162a:	65 e0       	ldi	r22, 0x05	; 5
    162c:	68 9f       	mul	r22, r24
    162e:	a0 01       	movw	r20, r0
    1630:	69 9f       	mul	r22, r25
    1632:	50 0d       	add	r21, r0
    1634:	11 24       	eor	r1, r1
    1636:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    163a:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    163e:	04 80       	ldd	r0, Z+4	; 0x04
    1640:	f5 81       	ldd	r31, Z+5	; 0x05
    1642:	e0 2d       	mov	r30, r0
    1644:	e4 0f       	add	r30, r20
    1646:	f5 1f       	adc	r31, r21
    1648:	83 81       	ldd	r24, Z+3	; 0x03
    164a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    164e:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1652:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1656:	04 80       	ldd	r0, Z+4	; 0x04
    1658:	f5 81       	ldd	r31, Z+5	; 0x05
    165a:	e0 2d       	mov	r30, r0
    165c:	e4 0f       	add	r30, r20
    165e:	f5 1f       	adc	r31, r21
    1660:	83 81       	ldd	r24, Z+3	; 0x03
    1662:	94 81       	ldd	r25, Z+4	; 0x04
    1664:	88 27       	eor	r24, r24
    1666:	9f 73       	andi	r25, 0x3F	; 63
    1668:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    166c:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1670:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1674:	14 96       	adiw	r26, 0x04	; 4
    1676:	ed 91       	ld	r30, X+
    1678:	fc 91       	ld	r31, X
    167a:	15 97       	sbiw	r26, 0x05	; 5
    167c:	e4 0f       	add	r30, r20
    167e:	f5 1f       	adc	r31, r21
    1680:	80 81       	ld	r24, Z
    1682:	81 fd       	sbrc	r24, 1
    1684:	60 83       	st	Z, r22
    1686:	14 96       	adiw	r26, 0x04	; 4
    1688:	8d 91       	ld	r24, X+
    168a:	9c 91       	ld	r25, X
    168c:	15 97       	sbiw	r26, 0x05	; 5
    168e:	fc 01       	movw	r30, r24
    1690:	e4 0f       	add	r30, r20
    1692:	f5 1f       	adc	r31, r21
    1694:	80 81       	ld	r24, Z
    1696:	8c 71       	andi	r24, 0x1C	; 28
    1698:	71 f4       	brne	.+28     	; 0x16b6 <qtm_measure_node+0x136>
    169a:	12 96       	adiw	r26, 0x02	; 2
    169c:	ed 91       	ld	r30, X+
    169e:	fc 91       	ld	r31, X
    16a0:	13 97       	sbiw	r26, 0x03	; 3
    16a2:	e2 0f       	add	r30, r18
    16a4:	f3 1f       	adc	r31, r19
    16a6:	e0 85       	ldd	r30, Z+8	; 0x08
    16a8:	e2 95       	swap	r30
    16aa:	ef 70       	andi	r30, 0x0F	; 15
    16ac:	f0 e0       	ldi	r31, 0x00	; 0
    16ae:	e2 58       	subi	r30, 0x82	; 130
    16b0:	fe 4f       	sbci	r31, 0xFE	; 254
    16b2:	80 81       	ld	r24, Z
    16b4:	01 c0       	rjmp	.+2      	; 0x16b8 <qtm_measure_node+0x138>
    16b6:	8f e3       	ldi	r24, 0x3F	; 63
    16b8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    16bc:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    16c0:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    16c4:	02 80       	ldd	r0, Z+2	; 0x02
    16c6:	f3 81       	ldd	r31, Z+3	; 0x03
    16c8:	e0 2d       	mov	r30, r0
    16ca:	e2 0f       	add	r30, r18
    16cc:	f3 1f       	adc	r31, r19
    16ce:	86 81       	ldd	r24, Z+6	; 0x06
    16d0:	8b 3f       	cpi	r24, 0xFB	; 251
    16d2:	10 f4       	brcc	.+4      	; 0x16d8 <qtm_measure_node+0x158>
    16d4:	8c 5f       	subi	r24, 0xFC	; 252
    16d6:	01 c0       	rjmp	.+2      	; 0x16da <qtm_measure_node+0x15a>
    16d8:	8f ef       	ldi	r24, 0xFF	; 255
    16da:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    16de:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    16e2:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    16e6:	02 80       	ldd	r0, Z+2	; 0x02
    16e8:	f3 81       	ldd	r31, Z+3	; 0x03
    16ea:	e0 2d       	mov	r30, r0
    16ec:	e2 0f       	add	r30, r18
    16ee:	f3 1f       	adc	r31, r19
    16f0:	87 81       	ldd	r24, Z+7	; 0x07
    16f2:	80 7f       	andi	r24, 0xF0	; 240
    16f4:	91 85       	ldd	r25, Z+9	; 0x09
    16f6:	89 2b       	or	r24, r25
    16f8:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    16fc:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1700:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1704:	82 81       	ldd	r24, Z+2	; 0x02
    1706:	93 81       	ldd	r25, Z+3	; 0x03
    1708:	fc 01       	movw	r30, r24
    170a:	e2 0f       	add	r30, r18
    170c:	f3 1f       	adc	r31, r19
    170e:	87 81       	ldd	r24, Z+7	; 0x07
    1710:	8f 70       	andi	r24, 0x0F	; 15
    1712:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1716:	82 e1       	ldi	r24, 0x12	; 18
    1718:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    171c:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1720:	81 60       	ori	r24, 0x01	; 1
    1722:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1726:	08 95       	ret

00001728 <qtm_acquisition_process>:
    1728:	4f 92       	push	r4
    172a:	5f 92       	push	r5
    172c:	6f 92       	push	r6
    172e:	7f 92       	push	r7
    1730:	8f 92       	push	r8
    1732:	9f 92       	push	r9
    1734:	af 92       	push	r10
    1736:	bf 92       	push	r11
    1738:	cf 92       	push	r12
    173a:	df 92       	push	r13
    173c:	ef 92       	push	r14
    173e:	ff 92       	push	r15
    1740:	0f 93       	push	r16
    1742:	1f 93       	push	r17
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <touch_seq_lib_state>
    174c:	88 23       	and	r24, r24
    174e:	09 f4       	brne	.+2      	; 0x1752 <qtm_acquisition_process+0x2a>
    1750:	31 c1       	rjmp	.+610    	; 0x19b4 <qtm_acquisition_process+0x28c>
    1752:	a0 91 0c 02 	lds	r26, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1756:	b0 91 0d 02 	lds	r27, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    175a:	e0 90 0e 02 	lds	r14, 0x020E	; 0x80020e <qtm_raw_data_measurements_ptr>
    175e:	f0 90 0f 02 	lds	r15, 0x020F	; 0x80020f <qtm_raw_data_measurements_ptr+0x1>
    1762:	41 2c       	mov	r4, r1
    1764:	51 2c       	mov	r5, r1
    1766:	60 e0       	ldi	r22, 0x00	; 0
    1768:	70 e0       	ldi	r23, 0x00	; 0
    176a:	00 e0       	ldi	r16, 0x00	; 0
    176c:	10 e0       	ldi	r17, 0x00	; 0
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	66 24       	eor	r6, r6
    1772:	63 94       	inc	r6
    1774:	91 e8       	ldi	r25, 0x81	; 129
    1776:	79 2e       	mov	r7, r25
    1778:	aa 24       	eor	r10, r10
    177a:	aa 94       	dec	r10
    177c:	bb 24       	eor	r11, r11
    177e:	b3 94       	inc	r11
    1780:	cd 90       	ld	r12, X+
    1782:	dc 90       	ld	r13, X
    1784:	11 97       	sbiw	r26, 0x01	; 1
    1786:	f6 01       	movw	r30, r12
    1788:	20 81       	ld	r18, Z
    178a:	31 81       	ldd	r19, Z+1	; 0x01
    178c:	02 17       	cp	r16, r18
    178e:	13 07       	cpc	r17, r19
    1790:	08 f0       	brcs	.+2      	; 0x1794 <qtm_acquisition_process+0x6c>
    1792:	0c c1       	rjmp	.+536    	; 0x19ac <qtm_acquisition_process+0x284>
    1794:	e7 01       	movw	r28, r14
    1796:	29 91       	ld	r18, Y+
    1798:	39 91       	ld	r19, Y+
    179a:	7e 01       	movw	r14, r28
    179c:	14 96       	adiw	r26, 0x04	; 4
    179e:	ed 91       	ld	r30, X+
    17a0:	fc 91       	ld	r31, X
    17a2:	15 97       	sbiw	r26, 0x05	; 5
    17a4:	e6 0f       	add	r30, r22
    17a6:	f7 1f       	adc	r31, r23
    17a8:	40 81       	ld	r20, Z
    17aa:	4c 71       	andi	r20, 0x1C	; 28
    17ac:	50 e0       	ldi	r21, 0x00	; 0
    17ae:	56 95       	lsr	r21
    17b0:	47 95       	ror	r20
    17b2:	56 95       	lsr	r21
    17b4:	47 95       	ror	r20
    17b6:	41 15       	cp	r20, r1
    17b8:	51 05       	cpc	r21, r1
    17ba:	21 f0       	breq	.+8      	; 0x17c4 <qtm_acquisition_process+0x9c>
    17bc:	41 30       	cpi	r20, 0x01	; 1
    17be:	51 05       	cpc	r21, r1
    17c0:	c1 f0       	breq	.+48     	; 0x17f2 <qtm_acquisition_process+0xca>
    17c2:	eb c0       	rjmp	.+470    	; 0x199a <qtm_acquisition_process+0x272>
    17c4:	12 96       	adiw	r26, 0x02	; 2
    17c6:	4d 91       	ld	r20, X+
    17c8:	5c 91       	ld	r21, X
    17ca:	13 97       	sbiw	r26, 0x03	; 3
    17cc:	44 0d       	add	r20, r4
    17ce:	55 1d       	adc	r21, r5
    17d0:	ea 01       	movw	r28, r20
    17d2:	98 85       	ldd	r25, Y+8	; 0x08
    17d4:	9f 70       	andi	r25, 0x0F	; 15
    17d6:	49 85       	ldd	r20, Y+9	; 0x09
    17d8:	94 17       	cp	r25, r20
    17da:	10 f4       	brcc	.+4      	; 0x17e0 <qtm_acquisition_process+0xb8>
    17dc:	49 1b       	sub	r20, r25
    17de:	01 c0       	rjmp	.+2      	; 0x17e2 <qtm_acquisition_process+0xba>
    17e0:	40 e0       	ldi	r20, 0x00	; 0
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <qtm_acquisition_process+0xc0>
    17e4:	36 95       	lsr	r19
    17e6:	27 95       	ror	r18
    17e8:	4a 95       	dec	r20
    17ea:	e2 f7       	brpl	.-8      	; 0x17e4 <qtm_acquisition_process+0xbc>
    17ec:	32 83       	std	Z+2, r19	; 0x02
    17ee:	21 83       	std	Z+1, r18	; 0x01
    17f0:	d5 c0       	rjmp	.+426    	; 0x199c <qtm_acquisition_process+0x274>
    17f2:	12 96       	adiw	r26, 0x02	; 2
    17f4:	4d 91       	ld	r20, X+
    17f6:	5c 91       	ld	r21, X
    17f8:	13 97       	sbiw	r26, 0x03	; 3
    17fa:	44 0d       	add	r20, r4
    17fc:	55 1d       	adc	r21, r5
    17fe:	ea 01       	movw	r28, r20
    1800:	09 84       	ldd	r0, Y+9	; 0x09
    1802:	02 c0       	rjmp	.+4      	; 0x1808 <qtm_acquisition_process+0xe0>
    1804:	36 95       	lsr	r19
    1806:	27 95       	ror	r18
    1808:	0a 94       	dec	r0
    180a:	e2 f7       	brpl	.-8      	; 0x1804 <qtm_acquisition_process+0xdc>
    180c:	32 83       	std	Z+2, r19	; 0x02
    180e:	21 83       	std	Z+1, r18	; 0x01
    1810:	43 81       	ldd	r20, Z+3	; 0x03
    1812:	54 81       	ldd	r21, Z+4	; 0x04
    1814:	21 15       	cp	r18, r1
    1816:	d2 e0       	ldi	r29, 0x02	; 2
    1818:	3d 07       	cpc	r19, r29
    181a:	20 f0       	brcs	.+8      	; 0x1824 <qtm_acquisition_process+0xfc>
    181c:	2f 5f       	subi	r18, 0xFF	; 255
    181e:	31 40       	sbci	r19, 0x01	; 1
    1820:	91 e0       	ldi	r25, 0x01	; 1
    1822:	05 c0       	rjmp	.+10     	; 0x182e <qtm_acquisition_process+0x106>
    1824:	e5 01       	movw	r28, r10
    1826:	c2 1b       	sub	r28, r18
    1828:	d3 0b       	sbc	r29, r19
    182a:	9e 01       	movw	r18, r28
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	e6 01       	movw	r28, r12
    1830:	da 80       	ldd	r13, Y+2	; 0x02
    1832:	d0 e4       	ldi	r29, 0x40	; 64
    1834:	dd 12       	cpse	r13, r29
    1836:	05 c0       	rjmp	.+10     	; 0x1842 <qtm_acquisition_process+0x11a>
    1838:	36 95       	lsr	r19
    183a:	27 95       	ror	r18
    183c:	99 23       	and	r25, r25
    183e:	19 f0       	breq	.+6      	; 0x1846 <qtm_acquisition_process+0x11e>
    1840:	09 c0       	rjmp	.+18     	; 0x1854 <qtm_acquisition_process+0x12c>
    1842:	99 23       	and	r25, r25
    1844:	39 f0       	breq	.+14     	; 0x1854 <qtm_acquisition_process+0x12c>
    1846:	4f 3f       	cpi	r20, 0xFF	; 255
    1848:	9f e3       	ldi	r25, 0x3F	; 63
    184a:	59 07       	cpc	r21, r25
    184c:	31 f4       	brne	.+12     	; 0x185a <qtm_acquisition_process+0x132>
    184e:	70 82       	st	Z, r7
    1850:	8e e0       	ldi	r24, 0x0E	; 14
    1852:	07 c0       	rjmp	.+14     	; 0x1862 <qtm_acquisition_process+0x13a>
    1854:	88 24       	eor	r8, r8
    1856:	83 94       	inc	r8
    1858:	01 c0       	rjmp	.+2      	; 0x185c <qtm_acquisition_process+0x134>
    185a:	81 2c       	mov	r8, r1
    185c:	2a 30       	cpi	r18, 0x0A	; 10
    185e:	31 05       	cpc	r19, r1
    1860:	98 f4       	brcc	.+38     	; 0x1888 <qtm_acquisition_process+0x160>
    1862:	14 96       	adiw	r26, 0x04	; 4
    1864:	ed 91       	ld	r30, X+
    1866:	fc 91       	ld	r31, X
    1868:	15 97       	sbiw	r26, 0x05	; 5
    186a:	e6 0f       	add	r30, r22
    186c:	f7 1f       	adc	r31, r23
    186e:	20 81       	ld	r18, Z
    1870:	27 ff       	sbrs	r18, 7
    1872:	60 82       	st	Z, r6
    1874:	14 96       	adiw	r26, 0x04	; 4
    1876:	ed 91       	ld	r30, X+
    1878:	fc 91       	ld	r31, X
    187a:	15 97       	sbiw	r26, 0x05	; 5
    187c:	e6 0f       	add	r30, r22
    187e:	f7 1f       	adc	r31, r23
    1880:	5f 73       	andi	r21, 0x3F	; 63
    1882:	54 83       	std	Z+4, r21	; 0x04
    1884:	43 83       	std	Z+3, r20	; 0x03
    1886:	8a c0       	rjmp	.+276    	; 0x199c <qtm_acquisition_process+0x274>
    1888:	6a 01       	movw	r12, r20
    188a:	cc 24       	eor	r12, r12
    188c:	c0 e3       	ldi	r28, 0x30	; 48
    188e:	dc 22       	and	r13, r28
    1890:	9d 2c       	mov	r9, r13
    1892:	92 94       	swap	r9
    1894:	df e0       	ldi	r29, 0x0F	; 15
    1896:	9d 22       	and	r9, r29
    1898:	6a 01       	movw	r12, r20
    189a:	cc 24       	eor	r12, r12
    189c:	df e0       	ldi	r29, 0x0F	; 15
    189e:	dd 22       	and	r13, r29
    18a0:	9d 2d       	mov	r25, r13
    18a2:	6a 01       	movw	r12, r20
    18a4:	c0 ef       	ldi	r28, 0xF0	; 240
    18a6:	cc 22       	and	r12, r28
    18a8:	dd 24       	eor	r13, r13
    18aa:	54 e0       	ldi	r21, 0x04	; 4
    18ac:	d6 94       	lsr	r13
    18ae:	c7 94       	ror	r12
    18b0:	5a 95       	dec	r21
    18b2:	e1 f7       	brne	.-8      	; 0x18ac <qtm_acquisition_process+0x184>
    18b4:	5c 2d       	mov	r21, r12
    18b6:	4f 70       	andi	r20, 0x0F	; 15
    18b8:	81 10       	cpse	r8, r1
    18ba:	32 c0       	rjmp	.+100    	; 0x1920 <qtm_acquisition_process+0x1f8>
    18bc:	20 3d       	cpi	r18, 0xD0	; 208
    18be:	31 05       	cpc	r19, r1
    18c0:	60 f0       	brcs	.+24     	; 0x18da <qtm_acquisition_process+0x1b2>
    18c2:	d3 e0       	ldi	r29, 0x03	; 3
    18c4:	9d 16       	cp	r9, r29
    18c6:	49 f0       	breq	.+18     	; 0x18da <qtm_acquisition_process+0x1b2>
    18c8:	93 94       	inc	r9
    18ca:	2f 5c       	subi	r18, 0xCF	; 207
    18cc:	31 09       	sbc	r19, r1
    18ce:	f6 cf       	rjmp	.-20     	; 0x18bc <qtm_acquisition_process+0x194>
    18d0:	9f 30       	cpi	r25, 0x0F	; 15
    18d2:	41 f0       	breq	.+16     	; 0x18e4 <qtm_acquisition_process+0x1bc>
    18d4:	9f 5f       	subi	r25, 0xFF	; 255
    18d6:	25 51       	subi	r18, 0x15	; 21
    18d8:	31 09       	sbc	r19, r1
    18da:	26 31       	cpi	r18, 0x16	; 22
    18dc:	31 05       	cpc	r19, r1
    18de:	c0 f7       	brcc	.-16     	; 0x18d0 <qtm_acquisition_process+0x1a8>
    18e0:	9f 30       	cpi	r25, 0x0F	; 15
    18e2:	69 f4       	brne	.+26     	; 0x18fe <qtm_acquisition_process+0x1d6>
    18e4:	93 e0       	ldi	r25, 0x03	; 3
    18e6:	99 12       	cpse	r9, r25
    18e8:	02 c0       	rjmp	.+4      	; 0x18ee <qtm_acquisition_process+0x1c6>
    18ea:	9f e0       	ldi	r25, 0x0F	; 15
    18ec:	08 c0       	rjmp	.+16     	; 0x18fe <qtm_acquisition_process+0x1d6>
    18ee:	93 94       	inc	r9
    18f0:	95 e0       	ldi	r25, 0x05	; 5
    18f2:	05 c0       	rjmp	.+10     	; 0x18fe <qtm_acquisition_process+0x1d6>
    18f4:	5f 30       	cpi	r21, 0x0F	; 15
    18f6:	49 f0       	breq	.+18     	; 0x190a <qtm_acquisition_process+0x1e2>
    18f8:	5f 5f       	subi	r21, 0xFF	; 255
    18fa:	22 50       	subi	r18, 0x02	; 2
    18fc:	31 09       	sbc	r19, r1
    18fe:	23 30       	cpi	r18, 0x03	; 3
    1900:	31 05       	cpc	r19, r1
    1902:	c0 f7       	brcc	.-16     	; 0x18f4 <qtm_acquisition_process+0x1cc>
    1904:	5f 30       	cpi	r21, 0x0F	; 15
    1906:	09 f0       	breq	.+2      	; 0x190a <qtm_acquisition_process+0x1e2>
    1908:	5b c0       	rjmp	.+182    	; 0x19c0 <qtm_acquisition_process+0x298>
    190a:	9f 30       	cpi	r25, 0x0F	; 15
    190c:	09 f4       	brne	.+2      	; 0x1910 <qtm_acquisition_process+0x1e8>
    190e:	54 c0       	rjmp	.+168    	; 0x19b8 <qtm_acquisition_process+0x290>
    1910:	9f 5f       	subi	r25, 0xFF	; 255
    1912:	55 e0       	ldi	r21, 0x05	; 5
    1914:	55 c0       	rjmp	.+170    	; 0x19c0 <qtm_acquisition_process+0x298>
    1916:	99 20       	and	r9, r9
    1918:	61 f0       	breq	.+24     	; 0x1932 <qtm_acquisition_process+0x20a>
    191a:	9a 94       	dec	r9
    191c:	2f 5c       	subi	r18, 0xCF	; 207
    191e:	31 09       	sbc	r19, r1
    1920:	20 3d       	cpi	r18, 0xD0	; 208
    1922:	31 05       	cpc	r19, r1
    1924:	c0 f7       	brcc	.-16     	; 0x1916 <qtm_acquisition_process+0x1ee>
    1926:	05 c0       	rjmp	.+10     	; 0x1932 <qtm_acquisition_process+0x20a>
    1928:	99 23       	and	r25, r25
    192a:	41 f0       	breq	.+16     	; 0x193c <qtm_acquisition_process+0x214>
    192c:	91 50       	subi	r25, 0x01	; 1
    192e:	25 51       	subi	r18, 0x15	; 21
    1930:	31 09       	sbc	r19, r1
    1932:	26 31       	cpi	r18, 0x16	; 22
    1934:	31 05       	cpc	r19, r1
    1936:	c0 f7       	brcc	.-16     	; 0x1928 <qtm_acquisition_process+0x200>
    1938:	91 11       	cpse	r25, r1
    193a:	0c c0       	rjmp	.+24     	; 0x1954 <qtm_acquisition_process+0x22c>
    193c:	91 10       	cpse	r9, r1
    193e:	02 c0       	rjmp	.+4      	; 0x1944 <qtm_acquisition_process+0x21c>
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	08 c0       	rjmp	.+16     	; 0x1954 <qtm_acquisition_process+0x22c>
    1944:	9a 94       	dec	r9
    1946:	9a e0       	ldi	r25, 0x0A	; 10
    1948:	05 c0       	rjmp	.+10     	; 0x1954 <qtm_acquisition_process+0x22c>
    194a:	55 23       	and	r21, r21
    194c:	41 f0       	breq	.+16     	; 0x195e <qtm_acquisition_process+0x236>
    194e:	51 50       	subi	r21, 0x01	; 1
    1950:	22 50       	subi	r18, 0x02	; 2
    1952:	31 09       	sbc	r19, r1
    1954:	23 30       	cpi	r18, 0x03	; 3
    1956:	31 05       	cpc	r19, r1
    1958:	c0 f7       	brcc	.-16     	; 0x194a <qtm_acquisition_process+0x222>
    195a:	51 11       	cpse	r21, r1
    195c:	0d c0       	rjmp	.+26     	; 0x1978 <qtm_acquisition_process+0x250>
    195e:	99 23       	and	r25, r25
    1960:	b9 f1       	breq	.+110    	; 0x19d0 <qtm_acquisition_process+0x2a8>
    1962:	91 50       	subi	r25, 0x01	; 1
    1964:	5a e0       	ldi	r21, 0x0A	; 10
    1966:	23 30       	cpi	r18, 0x03	; 3
    1968:	31 05       	cpc	r19, r1
    196a:	d0 f6       	brcc	.-76     	; 0x1920 <qtm_acquisition_process+0x1f8>
    196c:	05 c0       	rjmp	.+10     	; 0x1978 <qtm_acquisition_process+0x250>
    196e:	23 30       	cpi	r18, 0x03	; 3
    1970:	31 05       	cpc	r19, r1
    1972:	58 f1       	brcs	.+86     	; 0x19ca <qtm_acquisition_process+0x2a2>
    1974:	4f e0       	ldi	r20, 0x0F	; 15
    1976:	5f e0       	ldi	r21, 0x0F	; 15
    1978:	29 2d       	mov	r18, r9
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	32 2f       	mov	r19, r18
    197e:	22 27       	eor	r18, r18
    1980:	32 95       	swap	r19
    1982:	30 7f       	andi	r19, 0xF0	; 240
    1984:	39 2b       	or	r19, r25
    1986:	24 2b       	or	r18, r20
    1988:	c0 e1       	ldi	r28, 0x10	; 16
    198a:	5c 9f       	mul	r21, r28
    198c:	60 01       	movw	r12, r0
    198e:	11 24       	eor	r1, r1
    1990:	c2 2a       	or	r12, r18
    1992:	d3 2a       	or	r13, r19
    1994:	d4 82       	std	Z+4, r13	; 0x04
    1996:	c3 82       	std	Z+3, r12	; 0x03
    1998:	01 c0       	rjmp	.+2      	; 0x199c <qtm_acquisition_process+0x274>
    199a:	ff cf       	rjmp	.-2      	; 0x199a <qtm_acquisition_process+0x272>
    199c:	0f 5f       	subi	r16, 0xFF	; 255
    199e:	1f 4f       	sbci	r17, 0xFF	; 255
    19a0:	6b 5f       	subi	r22, 0xFB	; 251
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	da e0       	ldi	r29, 0x0A	; 10
    19a6:	4d 0e       	add	r4, r29
    19a8:	51 1c       	adc	r5, r1
    19aa:	ea ce       	rjmp	.-556    	; 0x1780 <qtm_acquisition_process+0x58>
    19ac:	92 e0       	ldi	r25, 0x02	; 2
    19ae:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <touch_seq_lib_state>
    19b2:	10 c0       	rjmp	.+32     	; 0x19d4 <qtm_acquisition_process+0x2ac>
    19b4:	83 e0       	ldi	r24, 0x03	; 3
    19b6:	0e c0       	rjmp	.+28     	; 0x19d4 <qtm_acquisition_process+0x2ac>
    19b8:	53 e0       	ldi	r21, 0x03	; 3
    19ba:	95 16       	cp	r9, r21
    19bc:	c1 f2       	breq	.-80     	; 0x196e <qtm_acquisition_process+0x246>
    19be:	5f e0       	ldi	r21, 0x0F	; 15
    19c0:	23 30       	cpi	r18, 0x03	; 3
    19c2:	31 05       	cpc	r19, r1
    19c4:	08 f0       	brcs	.+2      	; 0x19c8 <qtm_acquisition_process+0x2a0>
    19c6:	7a cf       	rjmp	.-268    	; 0x18bc <qtm_acquisition_process+0x194>
    19c8:	d7 cf       	rjmp	.-82     	; 0x1978 <qtm_acquisition_process+0x250>
    19ca:	5f e0       	ldi	r21, 0x0F	; 15
    19cc:	4f e0       	ldi	r20, 0x0F	; 15
    19ce:	d4 cf       	rjmp	.-88     	; 0x1978 <qtm_acquisition_process+0x250>
    19d0:	50 e0       	ldi	r21, 0x00	; 0
    19d2:	d2 cf       	rjmp	.-92     	; 0x1978 <qtm_acquisition_process+0x250>
    19d4:	df 91       	pop	r29
    19d6:	cf 91       	pop	r28
    19d8:	1f 91       	pop	r17
    19da:	0f 91       	pop	r16
    19dc:	ff 90       	pop	r15
    19de:	ef 90       	pop	r14
    19e0:	df 90       	pop	r13
    19e2:	cf 90       	pop	r12
    19e4:	bf 90       	pop	r11
    19e6:	af 90       	pop	r10
    19e8:	9f 90       	pop	r9
    19ea:	8f 90       	pop	r8
    19ec:	7f 90       	pop	r7
    19ee:	6f 90       	pop	r6
    19f0:	5f 90       	pop	r5
    19f2:	4f 90       	pop	r4
    19f4:	08 95       	ret

000019f6 <qtm_ptc_init_acquisition_module>:
    19f6:	8f 92       	push	r8
    19f8:	9f 92       	push	r9
    19fa:	af 92       	push	r10
    19fc:	bf 92       	push	r11
    19fe:	cf 92       	push	r12
    1a00:	df 92       	push	r13
    1a02:	ef 92       	push	r14
    1a04:	ff 92       	push	r15
    1a06:	cf 93       	push	r28
    1a08:	df 93       	push	r29
    1a0a:	00 97       	sbiw	r24, 0x00	; 0
    1a0c:	09 f4       	brne	.+2      	; 0x1a10 <qtm_ptc_init_acquisition_module+0x1a>
    1a0e:	76 c0       	rjmp	.+236    	; 0x1afc <qtm_ptc_init_acquisition_module+0x106>
    1a10:	dc 01       	movw	r26, r24
    1a12:	ed 91       	ld	r30, X+
    1a14:	fc 91       	ld	r31, X
    1a16:	c0 80       	ld	r12, Z
    1a18:	d1 80       	ldd	r13, Z+1	; 0x01
    1a1a:	e1 2c       	mov	r14, r1
    1a1c:	f1 2c       	mov	r15, r1
    1a1e:	a0 e0       	ldi	r26, 0x00	; 0
    1a20:	b0 e0       	ldi	r27, 0x00	; 0
    1a22:	40 e0       	ldi	r20, 0x00	; 0
    1a24:	50 e0       	ldi	r21, 0x00	; 0
    1a26:	ba 01       	movw	r22, r20
    1a28:	20 e0       	ldi	r18, 0x00	; 0
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	ac 15       	cp	r26, r12
    1a2e:	bd 05       	cpc	r27, r13
    1a30:	b1 f0       	breq	.+44     	; 0x1a5e <qtm_ptc_init_acquisition_module+0x68>
    1a32:	ec 01       	movw	r28, r24
    1a34:	ea 81       	ldd	r30, Y+2	; 0x02
    1a36:	fb 81       	ldd	r31, Y+3	; 0x03
    1a38:	ee 0d       	add	r30, r14
    1a3a:	ff 1d       	adc	r31, r15
    1a3c:	a0 80       	ld	r10, Z
    1a3e:	b1 80       	ldd	r11, Z+1	; 0x01
    1a40:	2a 29       	or	r18, r10
    1a42:	3b 29       	or	r19, r11
    1a44:	82 80       	ldd	r8, Z+2	; 0x02
    1a46:	93 80       	ldd	r9, Z+3	; 0x03
    1a48:	a4 80       	ldd	r10, Z+4	; 0x04
    1a4a:	b5 80       	ldd	r11, Z+5	; 0x05
    1a4c:	48 29       	or	r20, r8
    1a4e:	59 29       	or	r21, r9
    1a50:	6a 29       	or	r22, r10
    1a52:	7b 29       	or	r23, r11
    1a54:	11 96       	adiw	r26, 0x01	; 1
    1a56:	da e0       	ldi	r29, 0x0A	; 10
    1a58:	ed 0e       	add	r14, r29
    1a5a:	f1 1c       	adc	r15, r1
    1a5c:	e7 cf       	rjmp	.-50     	; 0x1a2c <qtm_ptc_init_acquisition_module+0x36>
    1a5e:	41 15       	cp	r20, r1
    1a60:	51 05       	cpc	r21, r1
    1a62:	61 05       	cpc	r22, r1
    1a64:	71 05       	cpc	r23, r1
    1a66:	09 f4       	brne	.+2      	; 0x1a6a <qtm_ptc_init_acquisition_module+0x74>
    1a68:	4b c0       	rjmp	.+150    	; 0x1b00 <qtm_ptc_init_acquisition_module+0x10a>
    1a6a:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <touch_seq_lib_state>
    1a6e:	4a 01       	movw	r8, r20
    1a70:	5b 01       	movw	r10, r22
    1a72:	88 24       	eor	r8, r8
    1a74:	aa 24       	eor	r10, r10
    1a76:	bb 24       	eor	r11, r11
    1a78:	6a 01       	movw	r12, r20
    1a7a:	7b 01       	movw	r14, r22
    1a7c:	cc 24       	eor	r12, r12
    1a7e:	dd 24       	eor	r13, r13
    1a80:	ff 24       	eor	r15, r15
    1a82:	87 2f       	mov	r24, r23
    1a84:	99 27       	eor	r25, r25
    1a86:	aa 27       	eor	r26, r26
    1a88:	bb 27       	eor	r27, r27
    1a8a:	e1 11       	cpse	r30, r1
    1a8c:	17 c0       	rjmp	.+46     	; 0x1abc <qtm_ptc_init_acquisition_module+0xc6>
    1a8e:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1a92:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1a96:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1a9a:	89 2c       	mov	r8, r9
    1a9c:	9a 2c       	mov	r9, r10
    1a9e:	ab 2c       	mov	r10, r11
    1aa0:	bb 24       	eor	r11, r11
    1aa2:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1aa6:	67 01       	movw	r12, r14
    1aa8:	ee 24       	eor	r14, r14
    1aaa:	ff 24       	eor	r15, r15
    1aac:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1ab0:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1ab4:	81 e0       	ldi	r24, 0x01	; 1
    1ab6:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <touch_seq_lib_state>
    1aba:	1e c0       	rjmp	.+60     	; 0x1af8 <qtm_ptc_init_acquisition_module+0x102>
    1abc:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1ac0:	2e 2b       	or	r18, r30
    1ac2:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1ac6:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1aca:	23 2b       	or	r18, r19
    1acc:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1ad0:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1ad4:	42 2b       	or	r20, r18
    1ad6:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1ada:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1ade:	29 29       	or	r18, r9
    1ae0:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1ae4:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1ae8:	2e 29       	or	r18, r14
    1aea:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1aee:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1af2:	82 2b       	or	r24, r18
    1af4:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <qtm_ptc_init_acquisition_module+0x10c>
    1afc:	8b e0       	ldi	r24, 0x0B	; 11
    1afe:	01 c0       	rjmp	.+2      	; 0x1b02 <qtm_ptc_init_acquisition_module+0x10c>
    1b00:	82 e0       	ldi	r24, 0x02	; 2
    1b02:	df 91       	pop	r29
    1b04:	cf 91       	pop	r28
    1b06:	ff 90       	pop	r15
    1b08:	ef 90       	pop	r14
    1b0a:	df 90       	pop	r13
    1b0c:	cf 90       	pop	r12
    1b0e:	bf 90       	pop	r11
    1b10:	af 90       	pop	r10
    1b12:	9f 90       	pop	r9
    1b14:	8f 90       	pop	r8
    1b16:	08 95       	ret

00001b18 <qtm_ptc_qtlib_assign_signal_memory>:
    1b18:	00 97       	sbiw	r24, 0x00	; 0
    1b1a:	31 f0       	breq	.+12     	; 0x1b28 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1b1c:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <qtm_raw_data_measurements_ptr+0x1>
    1b20:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <qtm_raw_data_measurements_ptr>
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	08 95       	ret
    1b28:	8b e0       	ldi	r24, 0x0B	; 11
    1b2a:	08 95       	ret

00001b2c <qtm_ptc_start_measurement_seq>:
    1b2c:	cf 93       	push	r28
    1b2e:	df 93       	push	r29
    1b30:	00 d0       	rcall	.+0      	; 0x1b32 <qtm_ptc_start_measurement_seq+0x6>
    1b32:	00 d0       	rcall	.+0      	; 0x1b34 <qtm_ptc_start_measurement_seq+0x8>
    1b34:	cd b7       	in	r28, 0x3d	; 61
    1b36:	de b7       	in	r29, 0x3e	; 62
    1b38:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <max_conversion_cycles>
    1b3c:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <max_conversion_cycles+0x1>
    1b40:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <max_conversion_cycles+0x2>
    1b44:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <max_conversion_cycles+0x3>
    1b48:	61 15       	cp	r22, r1
    1b4a:	71 05       	cpc	r23, r1
    1b4c:	09 f4       	brne	.+2      	; 0x1b50 <qtm_ptc_start_measurement_seq+0x24>
    1b4e:	db c0       	rjmp	.+438    	; 0x1d06 <qtm_ptc_start_measurement_seq+0x1da>
    1b50:	00 97       	sbiw	r24, 0x00	; 0
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <qtm_ptc_start_measurement_seq+0x2a>
    1b54:	d8 c0       	rjmp	.+432    	; 0x1d06 <qtm_ptc_start_measurement_seq+0x1da>
    1b56:	20 91 b0 01 	lds	r18, 0x01B0	; 0x8001b0 <touch_seq_lib_state>
    1b5a:	22 23       	and	r18, r18
    1b5c:	09 f4       	brne	.+2      	; 0x1b60 <qtm_ptc_start_measurement_seq+0x34>
    1b5e:	d5 c0       	rjmp	.+426    	; 0x1d0a <qtm_ptc_start_measurement_seq+0x1de>
    1b60:	24 30       	cpi	r18, 0x04	; 4
    1b62:	09 f0       	breq	.+2      	; 0x1b66 <qtm_ptc_start_measurement_seq+0x3a>
    1b64:	93 c0       	rjmp	.+294    	; 0x1c8c <qtm_ptc_start_measurement_seq+0x160>
    1b66:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <ptc_eoc_ok_flag>
    1b6a:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1b6e:	80 ff       	sbrs	r24, 0
    1b70:	8b c0       	rjmp	.+278    	; 0x1c88 <qtm_ptc_start_measurement_seq+0x15c>
    1b72:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	a6 e0       	ldi	r26, 0x06	; 6
    1b7a:	b0 e0       	ldi	r27, 0x00	; 0
    1b7c:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__umulhisi3>
    1b80:	60 93 b4 01 	sts	0x01B4, r22	; 0x8001b4 <max_conversion_cycles>
    1b84:	70 93 b5 01 	sts	0x01B5, r23	; 0x8001b5 <max_conversion_cycles+0x1>
    1b88:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <max_conversion_cycles+0x2>
    1b8c:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <max_conversion_cycles+0x3>
    1b90:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    1b94:	2f 70       	andi	r18, 0x0F	; 15
    1b96:	dc 01       	movw	r26, r24
    1b98:	cb 01       	movw	r24, r22
    1b9a:	82 0f       	add	r24, r18
    1b9c:	91 1d       	adc	r25, r1
    1b9e:	a1 1d       	adc	r26, r1
    1ba0:	b1 1d       	adc	r27, r1
    1ba2:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <max_conversion_cycles>
    1ba6:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <max_conversion_cycles+0x1>
    1baa:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <max_conversion_cycles+0x2>
    1bae:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <max_conversion_cycles+0x3>
    1bb2:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1bb6:	27 70       	andi	r18, 0x07	; 7
    1bb8:	04 c0       	rjmp	.+8      	; 0x1bc2 <qtm_ptc_start_measurement_seq+0x96>
    1bba:	88 0f       	add	r24, r24
    1bbc:	99 1f       	adc	r25, r25
    1bbe:	aa 1f       	adc	r26, r26
    1bc0:	bb 1f       	adc	r27, r27
    1bc2:	2a 95       	dec	r18
    1bc4:	d2 f7       	brpl	.-12     	; 0x1bba <qtm_ptc_start_measurement_seq+0x8e>
    1bc6:	0e 96       	adiw	r24, 0x0e	; 14
    1bc8:	a1 1d       	adc	r26, r1
    1bca:	b1 1d       	adc	r27, r1
    1bcc:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <max_conversion_cycles>
    1bd0:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <max_conversion_cycles+0x1>
    1bd4:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <max_conversion_cycles+0x2>
    1bd8:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <max_conversion_cycles+0x3>
    1bdc:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1be0:	23 70       	andi	r18, 0x03	; 3
    1be2:	04 c0       	rjmp	.+8      	; 0x1bec <qtm_ptc_start_measurement_seq+0xc0>
    1be4:	88 0f       	add	r24, r24
    1be6:	99 1f       	adc	r25, r25
    1be8:	aa 1f       	adc	r26, r26
    1bea:	bb 1f       	adc	r27, r27
    1bec:	2a 95       	dec	r18
    1bee:	d2 f7       	brpl	.-12     	; 0x1be4 <qtm_ptc_start_measurement_seq+0xb8>
    1bf0:	22 e0       	ldi	r18, 0x02	; 2
    1bf2:	b6 95       	lsr	r27
    1bf4:	a7 95       	ror	r26
    1bf6:	97 95       	ror	r25
    1bf8:	87 95       	ror	r24
    1bfa:	2a 95       	dec	r18
    1bfc:	d1 f7       	brne	.-12     	; 0x1bf2 <qtm_ptc_start_measurement_seq+0xc6>
    1bfe:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <max_conversion_cycles>
    1c02:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <max_conversion_cycles+0x1>
    1c06:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <max_conversion_cycles+0x2>
    1c0a:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <max_conversion_cycles+0x3>
    1c0e:	19 82       	std	Y+1, r1	; 0x01
    1c10:	1a 82       	std	Y+2, r1	; 0x02
    1c12:	1b 82       	std	Y+3, r1	; 0x03
    1c14:	1c 82       	std	Y+4, r1	; 0x04
    1c16:	21 e0       	ldi	r18, 0x01	; 1
    1c18:	49 81       	ldd	r20, Y+1	; 0x01
    1c1a:	5a 81       	ldd	r21, Y+2	; 0x02
    1c1c:	6b 81       	ldd	r22, Y+3	; 0x03
    1c1e:	7c 81       	ldd	r23, Y+4	; 0x04
    1c20:	48 17       	cp	r20, r24
    1c22:	59 07       	cpc	r21, r25
    1c24:	6a 07       	cpc	r22, r26
    1c26:	7b 07       	cpc	r23, r27
    1c28:	b0 f4       	brcc	.+44     	; 0x1c56 <qtm_ptc_start_measurement_seq+0x12a>
    1c2a:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <ptc_eoc_ok_flag>
    1c2e:	33 23       	and	r19, r19
    1c30:	29 f0       	breq	.+10     	; 0x1c3c <qtm_ptc_start_measurement_seq+0x110>
    1c32:	89 83       	std	Y+1, r24	; 0x01
    1c34:	9a 83       	std	Y+2, r25	; 0x02
    1c36:	ab 83       	std	Y+3, r26	; 0x03
    1c38:	bc 83       	std	Y+4, r27	; 0x04
    1c3a:	20 e0       	ldi	r18, 0x00	; 0
    1c3c:	49 81       	ldd	r20, Y+1	; 0x01
    1c3e:	5a 81       	ldd	r21, Y+2	; 0x02
    1c40:	6b 81       	ldd	r22, Y+3	; 0x03
    1c42:	7c 81       	ldd	r23, Y+4	; 0x04
    1c44:	4f 5f       	subi	r20, 0xFF	; 255
    1c46:	5f 4f       	sbci	r21, 0xFF	; 255
    1c48:	6f 4f       	sbci	r22, 0xFF	; 255
    1c4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c4c:	49 83       	std	Y+1, r20	; 0x01
    1c4e:	5a 83       	std	Y+2, r21	; 0x02
    1c50:	6b 83       	std	Y+3, r22	; 0x03
    1c52:	7c 83       	std	Y+4, r23	; 0x04
    1c54:	e1 cf       	rjmp	.-62     	; 0x1c18 <qtm_ptc_start_measurement_seq+0xec>
    1c56:	22 23       	and	r18, r18
    1c58:	b9 f0       	breq	.+46     	; 0x1c88 <qtm_ptc_start_measurement_seq+0x15c>
    1c5a:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1c5e:	80 ff       	sbrs	r24, 0
    1c60:	13 c0       	rjmp	.+38     	; 0x1c88 <qtm_ptc_start_measurement_seq+0x15c>
    1c62:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1c66:	00 00       	nop
    1c68:	82 e1       	ldi	r24, 0x12	; 18
    1c6a:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1c6e:	00 00       	nop
    1c70:	81 e0       	ldi	r24, 0x01	; 1
    1c72:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1c76:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ptc_lockups>
    1c7a:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ptc_lockups+0x1>
    1c7e:	01 96       	adiw	r24, 0x01	; 1
    1c80:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <ptc_lockups+0x1>
    1c84:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <ptc_lockups>
    1c88:	81 e0       	ldi	r24, 0x01	; 1
    1c8a:	42 c0       	rjmp	.+132    	; 0x1d10 <qtm_ptc_start_measurement_seq+0x1e4>
    1c8c:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1c90:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1c94:	70 93 ab 01 	sts	0x01AB, r23	; 0x8001ab <ptc_seq_measure_complete_pointer+0x1>
    1c98:	60 93 aa 01 	sts	0x01AA, r22	; 0x8001aa <ptc_seq_measure_complete_pointer>
    1c9c:	dc 01       	movw	r26, r24
    1c9e:	ed 91       	ld	r30, X+
    1ca0:	fc 91       	ld	r31, X
    1ca2:	82 81       	ldd	r24, Z+2	; 0x02
    1ca4:	80 34       	cpi	r24, 0x40	; 64
    1ca6:	11 f4       	brne	.+4      	; 0x1cac <qtm_ptc_start_measurement_seq+0x180>
    1ca8:	88 e0       	ldi	r24, 0x08	; 8
    1caa:	03 c0       	rjmp	.+6      	; 0x1cb2 <qtm_ptc_start_measurement_seq+0x186>
    1cac:	80 38       	cpi	r24, 0x80	; 128
    1cae:	79 f5       	brne	.+94     	; 0x1d0e <qtm_ptc_start_measurement_seq+0x1e2>
    1cb0:	8a e0       	ldi	r24, 0x0A	; 10
    1cb2:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    1cb6:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <qtm_acquisition_control_working_set_ptr>
    1cba:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <qtm_acquisition_control_working_set_ptr+0x1>
    1cbe:	01 90       	ld	r0, Z+
    1cc0:	f0 81       	ld	r31, Z
    1cc2:	e0 2d       	mov	r30, r0
    1cc4:	84 81       	ldd	r24, Z+4	; 0x04
    1cc6:	80 31       	cpi	r24, 0x10	; 16
    1cc8:	08 f0       	brcs	.+2      	; 0x1ccc <qtm_ptc_start_measurement_seq+0x1a0>
    1cca:	80 e1       	ldi	r24, 0x10	; 16
    1ccc:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    1cd0:	81 e0       	ldi	r24, 0x01	; 1
    1cd2:	84 bf       	out	0x34, r24	; 52
    1cd4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    1cd8:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <current_measure_channel+0x1>
    1cdc:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <current_measure_channel>
    1ce0:	0e 94 8d 0a 	call	0x151a	; 0x151a <select_next_channel_to_measure>
    1ce4:	81 11       	cpse	r24, r1
    1ce6:	0b c0       	rjmp	.+22     	; 0x1cfe <qtm_ptc_start_measurement_seq+0x1d2>
    1ce8:	84 e0       	ldi	r24, 0x04	; 4
    1cea:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <touch_seq_lib_state>
    1cee:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <current_measure_channel>
    1cf2:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <current_measure_channel+0x1>
    1cf6:	0e 94 c0 0a 	call	0x1580	; 0x1580 <qtm_measure_node>
    1cfa:	80 e0       	ldi	r24, 0x00	; 0
    1cfc:	09 c0       	rjmp	.+18     	; 0x1d10 <qtm_ptc_start_measurement_seq+0x1e4>
    1cfe:	82 e0       	ldi	r24, 0x02	; 2
    1d00:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <touch_seq_lib_state>
    1d04:	05 c0       	rjmp	.+10     	; 0x1d10 <qtm_ptc_start_measurement_seq+0x1e4>
    1d06:	8b e0       	ldi	r24, 0x0B	; 11
    1d08:	03 c0       	rjmp	.+6      	; 0x1d10 <qtm_ptc_start_measurement_seq+0x1e4>
    1d0a:	83 e0       	ldi	r24, 0x03	; 3
    1d0c:	01 c0       	rjmp	.+2      	; 0x1d10 <qtm_ptc_start_measurement_seq+0x1e4>
    1d0e:	82 e0       	ldi	r24, 0x02	; 2
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	0f 90       	pop	r0
    1d16:	0f 90       	pop	r0
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	08 95       	ret

00001d1e <qtm_enable_sensor_node>:
    1d1e:	00 97       	sbiw	r24, 0x00	; 0
    1d20:	c9 f0       	breq	.+50     	; 0x1d54 <qtm_enable_sensor_node+0x36>
    1d22:	dc 01       	movw	r26, r24
    1d24:	ed 91       	ld	r30, X+
    1d26:	fc 91       	ld	r31, X
    1d28:	11 97       	sbiw	r26, 0x01	; 1
    1d2a:	20 81       	ld	r18, Z
    1d2c:	31 81       	ldd	r19, Z+1	; 0x01
    1d2e:	26 17       	cp	r18, r22
    1d30:	37 07       	cpc	r19, r23
    1d32:	90 f0       	brcs	.+36     	; 0x1d58 <qtm_enable_sensor_node+0x3a>
    1d34:	45 e0       	ldi	r20, 0x05	; 5
    1d36:	46 9f       	mul	r20, r22
    1d38:	90 01       	movw	r18, r0
    1d3a:	47 9f       	mul	r20, r23
    1d3c:	30 0d       	add	r19, r0
    1d3e:	11 24       	eor	r1, r1
    1d40:	14 96       	adiw	r26, 0x04	; 4
    1d42:	ed 91       	ld	r30, X+
    1d44:	fc 91       	ld	r31, X
    1d46:	15 97       	sbiw	r26, 0x05	; 5
    1d48:	e2 0f       	add	r30, r18
    1d4a:	f3 1f       	adc	r31, r19
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	80 83       	st	Z, r24
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	08 95       	ret
    1d54:	8b e0       	ldi	r24, 0x0B	; 11
    1d56:	08 95       	ret
    1d58:	82 e0       	ldi	r24, 0x02	; 2
    1d5a:	08 95       	ret

00001d5c <qtm_calibrate_sensor_node>:
    1d5c:	00 97       	sbiw	r24, 0x00	; 0
    1d5e:	d1 f1       	breq	.+116    	; 0x1dd4 <qtm_calibrate_sensor_node+0x78>
    1d60:	dc 01       	movw	r26, r24
    1d62:	ed 91       	ld	r30, X+
    1d64:	fc 91       	ld	r31, X
    1d66:	11 97       	sbiw	r26, 0x01	; 1
    1d68:	20 81       	ld	r18, Z
    1d6a:	31 81       	ldd	r19, Z+1	; 0x01
    1d6c:	26 17       	cp	r18, r22
    1d6e:	37 07       	cpc	r19, r23
    1d70:	98 f1       	brcs	.+102    	; 0x1dd8 <qtm_calibrate_sensor_node+0x7c>
    1d72:	22 81       	ldd	r18, Z+2	; 0x02
    1d74:	14 96       	adiw	r26, 0x04	; 4
    1d76:	ed 91       	ld	r30, X+
    1d78:	fc 91       	ld	r31, X
    1d7a:	15 97       	sbiw	r26, 0x05	; 5
    1d7c:	20 34       	cpi	r18, 0x40	; 64
    1d7e:	59 f4       	brne	.+22     	; 0x1d96 <qtm_calibrate_sensor_node+0x3a>
    1d80:	85 e0       	ldi	r24, 0x05	; 5
    1d82:	86 9f       	mul	r24, r22
    1d84:	d0 01       	movw	r26, r0
    1d86:	87 9f       	mul	r24, r23
    1d88:	b0 0d       	add	r27, r0
    1d8a:	11 24       	eor	r1, r1
    1d8c:	ae 0f       	add	r26, r30
    1d8e:	bf 1f       	adc	r27, r31
    1d90:	84 e3       	ldi	r24, 0x34	; 52
    1d92:	92 e0       	ldi	r25, 0x02	; 2
    1d94:	0c c0       	rjmp	.+24     	; 0x1dae <qtm_calibrate_sensor_node+0x52>
    1d96:	20 38       	cpi	r18, 0x80	; 128
    1d98:	81 f4       	brne	.+32     	; 0x1dba <qtm_calibrate_sensor_node+0x5e>
    1d9a:	85 e0       	ldi	r24, 0x05	; 5
    1d9c:	86 9f       	mul	r24, r22
    1d9e:	d0 01       	movw	r26, r0
    1da0:	87 9f       	mul	r24, r23
    1da2:	b0 0d       	add	r27, r0
    1da4:	11 24       	eor	r1, r1
    1da6:	ae 0f       	add	r26, r30
    1da8:	bf 1f       	adc	r27, r31
    1daa:	87 e6       	ldi	r24, 0x67	; 103
    1dac:	95 e0       	ldi	r25, 0x05	; 5
    1dae:	14 96       	adiw	r26, 0x04	; 4
    1db0:	9c 93       	st	X, r25
    1db2:	8e 93       	st	-X, r24
    1db4:	13 97       	sbiw	r26, 0x03	; 3
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	01 c0       	rjmp	.+2      	; 0x1dbc <qtm_calibrate_sensor_node+0x60>
    1dba:	82 e0       	ldi	r24, 0x02	; 2
    1dbc:	95 e0       	ldi	r25, 0x05	; 5
    1dbe:	96 9f       	mul	r25, r22
    1dc0:	90 01       	movw	r18, r0
    1dc2:	97 9f       	mul	r25, r23
    1dc4:	30 0d       	add	r19, r0
    1dc6:	11 24       	eor	r1, r1
    1dc8:	e2 0f       	add	r30, r18
    1dca:	f3 1f       	adc	r31, r19
    1dcc:	90 81       	ld	r25, Z
    1dce:	92 60       	ori	r25, 0x02	; 2
    1dd0:	90 83       	st	Z, r25
    1dd2:	08 95       	ret
    1dd4:	8b e0       	ldi	r24, 0x0B	; 11
    1dd6:	08 95       	ret
    1dd8:	82 e0       	ldi	r24, 0x02	; 2
    1dda:	08 95       	ret

00001ddc <qtm_m324pb_ptc_handler_eoc>:
    1ddc:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1de0:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    1de4:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    1de8:	e0 91 b1 01 	lds	r30, 0x01B1	; 0x8001b1 <current_measure_channel>
    1dec:	f0 91 b2 01 	lds	r31, 0x01B2	; 0x8001b2 <current_measure_channel+0x1>
    1df0:	ee 0f       	add	r30, r30
    1df2:	ff 1f       	adc	r31, r31
    1df4:	40 91 0e 02 	lds	r20, 0x020E	; 0x80020e <qtm_raw_data_measurements_ptr>
    1df8:	50 91 0f 02 	lds	r21, 0x020F	; 0x80020f <qtm_raw_data_measurements_ptr+0x1>
    1dfc:	e4 0f       	add	r30, r20
    1dfe:	f5 1f       	adc	r31, r21
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	92 2b       	or	r25, r18
    1e04:	91 83       	std	Z+1, r25	; 0x01
    1e06:	80 83       	st	Z, r24
    1e08:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <good_eocs>
    1e0c:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <good_eocs+0x1>
    1e10:	01 96       	adiw	r24, 0x01	; 1
    1e12:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <good_eocs+0x1>
    1e16:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <good_eocs>
    1e1a:	89 2b       	or	r24, r25
    1e1c:	21 f4       	brne	.+8      	; 0x1e26 <qtm_m324pb_ptc_handler_eoc+0x4a>
    1e1e:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <ptc_lockups+0x1>
    1e22:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <ptc_lockups>
    1e26:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <current_measure_channel>
    1e2a:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <current_measure_channel+0x1>
    1e2e:	01 96       	adiw	r24, 0x01	; 1
    1e30:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <current_measure_channel+0x1>
    1e34:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <current_measure_channel>
    1e38:	0e 94 8d 0a 	call	0x151a	; 0x151a <select_next_channel_to_measure>
    1e3c:	81 11       	cpse	r24, r1
    1e3e:	0a c0       	rjmp	.+20     	; 0x1e54 <qtm_m324pb_ptc_handler_eoc+0x78>
    1e40:	84 e0       	ldi	r24, 0x04	; 4
    1e42:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <touch_seq_lib_state>
    1e46:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <current_measure_channel>
    1e4a:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <current_measure_channel+0x1>
    1e4e:	0e 94 c0 0a 	call	0x1580	; 0x1580 <qtm_measure_node>
    1e52:	05 c0       	rjmp	.+10     	; 0x1e5e <qtm_m324pb_ptc_handler_eoc+0x82>
    1e54:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <ptc_seq_measure_complete_pointer>
    1e58:	f0 91 ab 01 	lds	r31, 0x01AB	; 0x8001ab <ptc_seq_measure_complete_pointer+0x1>
    1e5c:	09 95       	icall
    1e5e:	81 e0       	ldi	r24, 0x01	; 1
    1e60:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <ptc_eoc_ok_flag>
    1e64:	08 95       	ret

00001e66 <__umulhisi3>:
    1e66:	a2 9f       	mul	r26, r18
    1e68:	b0 01       	movw	r22, r0
    1e6a:	b3 9f       	mul	r27, r19
    1e6c:	c0 01       	movw	r24, r0
    1e6e:	a3 9f       	mul	r26, r19
    1e70:	70 0d       	add	r23, r0
    1e72:	81 1d       	adc	r24, r1
    1e74:	11 24       	eor	r1, r1
    1e76:	91 1d       	adc	r25, r1
    1e78:	b2 9f       	mul	r27, r18
    1e7a:	70 0d       	add	r23, r0
    1e7c:	81 1d       	adc	r24, r1
    1e7e:	11 24       	eor	r1, r1
    1e80:	91 1d       	adc	r25, r1
    1e82:	08 95       	ret

00001e84 <eeprom_read_byte>:
    1e84:	f9 99       	sbic	0x1f, 1	; 31
    1e86:	fe cf       	rjmp	.-4      	; 0x1e84 <eeprom_read_byte>
    1e88:	92 bd       	out	0x22, r25	; 34
    1e8a:	81 bd       	out	0x21, r24	; 33
    1e8c:	f8 9a       	sbi	0x1f, 0	; 31
    1e8e:	99 27       	eor	r25, r25
    1e90:	80 b5       	in	r24, 0x20	; 32
    1e92:	08 95       	ret

00001e94 <eeprom_write_byte>:
    1e94:	26 2f       	mov	r18, r22

00001e96 <eeprom_write_r18>:
    1e96:	f9 99       	sbic	0x1f, 1	; 31
    1e98:	fe cf       	rjmp	.-4      	; 0x1e96 <eeprom_write_r18>
    1e9a:	1f ba       	out	0x1f, r1	; 31
    1e9c:	92 bd       	out	0x22, r25	; 34
    1e9e:	81 bd       	out	0x21, r24	; 33
    1ea0:	20 bd       	out	0x20, r18	; 32
    1ea2:	0f b6       	in	r0, 0x3f	; 63
    1ea4:	f8 94       	cli
    1ea6:	fa 9a       	sbi	0x1f, 2	; 31
    1ea8:	f9 9a       	sbi	0x1f, 1	; 31
    1eaa:	0f be       	out	0x3f, r0	; 63
    1eac:	01 96       	adiw	r24, 0x01	; 1
    1eae:	08 95       	ret

00001eb0 <_exit>:
    1eb0:	f8 94       	cli

00001eb2 <__stop_program>:
    1eb2:	ff cf       	rjmp	.-2      	; 0x1eb2 <__stop_program>
